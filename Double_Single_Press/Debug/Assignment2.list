
Assignment2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000043d8  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003f8  08004568  08004568  00014568  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004960  08004960  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  08004960  08004960  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004960  08004960  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004960  08004960  00014960  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004964  08004964  00014964  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08004968  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000022c  200001dc  08004b44  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000408  08004b44  00020408  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00004ad4  00000000  00000000  0002024f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000e25  00000000  00000000  00024d23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000430  00000000  00000000  00025b48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000302  00000000  00000000  00025f78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00026168  00000000  00000000  0002627a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00004b1e  00000000  00000000  0004c3e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000ed8c8  00000000  00000000  00050f00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000237c  00000000  00000000  0013e7c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006a  00000000  00000000  00140b44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001dc 	.word	0x200001dc
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08004550 	.word	0x08004550

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001e0 	.word	0x200001e0
 80001cc:	08004550 	.word	0x08004550

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <HAL_GPIO_EXTI_Callback>:

volatile uint32_t currentTime = 0, lastButtonPressTime = 0;
int buttonPressCount = 0, switcher = 0;

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	b082      	sub	sp, #8
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	4603      	mov	r3, r0
 8000bb0:	80fb      	strh	r3, [r7, #6]
  if (GPIO_Pin == BUTTON_EXTI13_Pin)
 8000bb2:	88fb      	ldrh	r3, [r7, #6]
 8000bb4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000bb8:	d13e      	bne.n	8000c38 <HAL_GPIO_EXTI_Callback+0x90>
  {
   currentTime = HAL_GetTick(); //sample current time for comparison, if button is pressed
 8000bba:	f000 fa27 	bl	800100c <HAL_GetTick>
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	4a1f      	ldr	r2, [pc, #124]	; (8000c40 <HAL_GPIO_EXTI_Callback+0x98>)
 8000bc2:	6013      	str	r3, [r2, #0]
   buttonPressCount++;
 8000bc4:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <HAL_GPIO_EXTI_Callback+0x9c>)
 8000bc6:	681b      	ldr	r3, [r3, #0]
 8000bc8:	3301      	adds	r3, #1
 8000bca:	4a1e      	ldr	r2, [pc, #120]	; (8000c44 <HAL_GPIO_EXTI_Callback+0x9c>)
 8000bcc:	6013      	str	r3, [r2, #0]
    // Check if the time elapsed since the last button press is less than your threshold (e.g., 500 ms)
    if (buttonPressCount == 2)
 8000bce:	4b1d      	ldr	r3, [pc, #116]	; (8000c44 <HAL_GPIO_EXTI_Callback+0x9c>)
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	2b02      	cmp	r3, #2
 8000bd4:	d129      	bne.n	8000c2a <HAL_GPIO_EXTI_Callback+0x82>
    { //500ms threshold

      if ((currentTime - lastButtonPressTime) < 2)
 8000bd6:	4b1a      	ldr	r3, [pc, #104]	; (8000c40 <HAL_GPIO_EXTI_Callback+0x98>)
 8000bd8:	681a      	ldr	r2, [r3, #0]
 8000bda:	4b1b      	ldr	r3, [pc, #108]	; (8000c48 <HAL_GPIO_EXTI_Callback+0xa0>)
 8000bdc:	681b      	ldr	r3, [r3, #0]
 8000bde:	1ad3      	subs	r3, r2, r3
 8000be0:	2b01      	cmp	r3, #1
 8000be2:	d817      	bhi.n	8000c14 <HAL_GPIO_EXTI_Callback+0x6c>
      {
     printf("%d, %d, %d", currentTime, lastButtonPressTime, buttonPressCount);//seems to be in seconds
 8000be4:	4b16      	ldr	r3, [pc, #88]	; (8000c40 <HAL_GPIO_EXTI_Callback+0x98>)
 8000be6:	6819      	ldr	r1, [r3, #0]
 8000be8:	4b17      	ldr	r3, [pc, #92]	; (8000c48 <HAL_GPIO_EXTI_Callback+0xa0>)
 8000bea:	681a      	ldr	r2, [r3, #0]
 8000bec:	4b15      	ldr	r3, [pc, #84]	; (8000c44 <HAL_GPIO_EXTI_Callback+0x9c>)
 8000bee:	681b      	ldr	r3, [r3, #0]
 8000bf0:	4816      	ldr	r0, [pc, #88]	; (8000c4c <HAL_GPIO_EXTI_Callback+0xa4>)
 8000bf2:	f001 fca5 	bl	8002540 <iprintf>
        printf("\t Double press detected. \n");
 8000bf6:	4816      	ldr	r0, [pc, #88]	; (8000c50 <HAL_GPIO_EXTI_Callback+0xa8>)
 8000bf8:	f001 fd08 	bl	800260c <puts>
        // Execute your action for the double press here
        // Reset the count for the next detection
        // set a variable called 'switcher' to TRUE
        buttonPressCount = 0;
 8000bfc:	4b11      	ldr	r3, [pc, #68]	; (8000c44 <HAL_GPIO_EXTI_Callback+0x9c>)
 8000bfe:	2200      	movs	r2, #0
 8000c00:	601a      	str	r2, [r3, #0]
        switcher=1;
 8000c02:	4b14      	ldr	r3, [pc, #80]	; (8000c54 <HAL_GPIO_EXTI_Callback+0xac>)
 8000c04:	2201      	movs	r2, #1
 8000c06:	601a      	str	r2, [r3, #0]
        //lastButtonPressTime = 0;
        lastButtonPressTime = HAL_GetTick();
 8000c08:	f000 fa00 	bl	800100c <HAL_GetTick>
 8000c0c:	4603      	mov	r3, r0
 8000c0e:	4a0e      	ldr	r2, [pc, #56]	; (8000c48 <HAL_GPIO_EXTI_Callback+0xa0>)
 8000c10:	6013      	str	r3, [r2, #0]
      //this won't happen
    }


  }//GPIO_Pin == thing
}
 8000c12:	e011      	b.n	8000c38 <HAL_GPIO_EXTI_Callback+0x90>
       buttonPressCount = 1;
 8000c14:	4b0b      	ldr	r3, [pc, #44]	; (8000c44 <HAL_GPIO_EXTI_Callback+0x9c>)
 8000c16:	2201      	movs	r2, #1
 8000c18:	601a      	str	r2, [r3, #0]
       lastButtonPressTime = currentTime; //increment here
 8000c1a:	4b09      	ldr	r3, [pc, #36]	; (8000c40 <HAL_GPIO_EXTI_Callback+0x98>)
 8000c1c:	681b      	ldr	r3, [r3, #0]
 8000c1e:	4a0a      	ldr	r2, [pc, #40]	; (8000c48 <HAL_GPIO_EXTI_Callback+0xa0>)
 8000c20:	6013      	str	r3, [r2, #0]
       printf("Single press");
 8000c22:	480d      	ldr	r0, [pc, #52]	; (8000c58 <HAL_GPIO_EXTI_Callback+0xb0>)
 8000c24:	f001 fc8c 	bl	8002540 <iprintf>
}
 8000c28:	e006      	b.n	8000c38 <HAL_GPIO_EXTI_Callback+0x90>
      lastButtonPressTime = currentTime; //increment here
 8000c2a:	4b05      	ldr	r3, [pc, #20]	; (8000c40 <HAL_GPIO_EXTI_Callback+0x98>)
 8000c2c:	681b      	ldr	r3, [r3, #0]
 8000c2e:	4a06      	ldr	r2, [pc, #24]	; (8000c48 <HAL_GPIO_EXTI_Callback+0xa0>)
 8000c30:	6013      	str	r3, [r2, #0]
      printf("Single and ready to mingle");
 8000c32:	480a      	ldr	r0, [pc, #40]	; (8000c5c <HAL_GPIO_EXTI_Callback+0xb4>)
 8000c34:	f001 fc84 	bl	8002540 <iprintf>
}
 8000c38:	bf00      	nop
 8000c3a:	3708      	adds	r7, #8
 8000c3c:	46bd      	mov	sp, r7
 8000c3e:	bd80      	pop	{r7, pc}
 8000c40:	200001f8 	.word	0x200001f8
 8000c44:	20000200 	.word	0x20000200
 8000c48:	200001fc 	.word	0x200001fc
 8000c4c:	08004568 	.word	0x08004568
 8000c50:	08004574 	.word	0x08004574
 8000c54:	20000204 	.word	0x20000204
 8000c58:	08004590 	.word	0x08004590
 8000c5c:	080045a0 	.word	0x080045a0

08000c60 <main>:

int main(void)
{
 8000c60:	b580      	push	{r7, lr}
 8000c62:	af00      	add	r7, sp, #0
 initialise_monitor_handles();
 8000c64:	f000 feda 	bl	8001a1c <initialise_monitor_handles>
 HAL_Init();
 8000c68:	f000 f96b 	bl	8000f42 <HAL_Init>
 MX_GPIO_Init();
 8000c6c:	f000 f832 	bl	8000cd4 <MX_GPIO_Init>

 while (1)
 {
  currentTime = HAL_GetTick(); //it is in seconds!! wth!!
 8000c70:	f000 f9cc 	bl	800100c <HAL_GetTick>
 8000c74:	4603      	mov	r3, r0
 8000c76:	4a0f      	ldr	r2, [pc, #60]	; (8000cb4 <main+0x54>)
 8000c78:	6013      	str	r3, [r2, #0]
  printf("%d", currentTime);
 8000c7a:	4b0e      	ldr	r3, [pc, #56]	; (8000cb4 <main+0x54>)
 8000c7c:	681b      	ldr	r3, [r3, #0]
 8000c7e:	4619      	mov	r1, r3
 8000c80:	480d      	ldr	r0, [pc, #52]	; (8000cb8 <main+0x58>)
 8000c82:	f001 fc5d 	bl	8002540 <iprintf>
  printf("P\n");
 8000c86:	480d      	ldr	r0, [pc, #52]	; (8000cbc <main+0x5c>)
 8000c88:	f001 fcc0 	bl	800260c <puts>
  printf("O\n");
 8000c8c:	480c      	ldr	r0, [pc, #48]	; (8000cc0 <main+0x60>)
 8000c8e:	f001 fcbd 	bl	800260c <puts>
  printf("L\n");
 8000c92:	480c      	ldr	r0, [pc, #48]	; (8000cc4 <main+0x64>)
 8000c94:	f001 fcba 	bl	800260c <puts>
  printf("L\n");
 8000c98:	480a      	ldr	r0, [pc, #40]	; (8000cc4 <main+0x64>)
 8000c9a:	f001 fcb7 	bl	800260c <puts>
  printf("I\n");
 8000c9e:	480a      	ldr	r0, [pc, #40]	; (8000cc8 <main+0x68>)
 8000ca0:	f001 fcb4 	bl	800260c <puts>
  printf("N\n");
 8000ca4:	4809      	ldr	r0, [pc, #36]	; (8000ccc <main+0x6c>)
 8000ca6:	f001 fcb1 	bl	800260c <puts>
  printf("G\n\n");
 8000caa:	4809      	ldr	r0, [pc, #36]	; (8000cd0 <main+0x70>)
 8000cac:	f001 fcae 	bl	800260c <puts>
 {
 8000cb0:	e7de      	b.n	8000c70 <main+0x10>
 8000cb2:	bf00      	nop
 8000cb4:	200001f8 	.word	0x200001f8
 8000cb8:	080045bc 	.word	0x080045bc
 8000cbc:	080045c0 	.word	0x080045c0
 8000cc0:	080045c4 	.word	0x080045c4
 8000cc4:	080045c8 	.word	0x080045c8
 8000cc8:	080045cc 	.word	0x080045cc
 8000ccc:	080045d0 	.word	0x080045d0
 8000cd0:	080045d4 	.word	0x080045d4

08000cd4 <MX_GPIO_Init>:
 }

}

static void MX_GPIO_Init(void)
{
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	b086      	sub	sp, #24
 8000cd8:	af00      	add	r7, sp, #0
 __HAL_RCC_GPIOC_CLK_ENABLE(); // Enable AHB2 Bus for GPIOC
 8000cda:	4b13      	ldr	r3, [pc, #76]	; (8000d28 <MX_GPIO_Init+0x54>)
 8000cdc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000cde:	4a12      	ldr	r2, [pc, #72]	; (8000d28 <MX_GPIO_Init+0x54>)
 8000ce0:	f043 0304 	orr.w	r3, r3, #4
 8000ce4:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000ce6:	4b10      	ldr	r3, [pc, #64]	; (8000d28 <MX_GPIO_Init+0x54>)
 8000ce8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000cea:	f003 0304 	and.w	r3, r3, #4
 8000cee:	603b      	str	r3, [r7, #0]
 8000cf0:	683b      	ldr	r3, [r7, #0]

 GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cf2:	1d3b      	adds	r3, r7, #4
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	601a      	str	r2, [r3, #0]
 8000cf8:	605a      	str	r2, [r3, #4]
 8000cfa:	609a      	str	r2, [r3, #8]
 8000cfc:	60da      	str	r2, [r3, #12]
 8000cfe:	611a      	str	r2, [r3, #16]

 // Configuration of BUTTON_EXTI13_Pin (GPIO-C Pin-13) as AF,
 GPIO_InitStruct.Pin = BUTTON_EXTI13_Pin;
 8000d00:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000d04:	607b      	str	r3, [r7, #4]
 GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000d06:	4b09      	ldr	r3, [pc, #36]	; (8000d2c <MX_GPIO_Init+0x58>)
 8000d08:	60bb      	str	r3, [r7, #8]
 GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	60fb      	str	r3, [r7, #12]
 HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d0e:	1d3b      	adds	r3, r7, #4
 8000d10:	4619      	mov	r1, r3
 8000d12:	4807      	ldr	r0, [pc, #28]	; (8000d30 <MX_GPIO_Init+0x5c>)
 8000d14:	f000 fa98 	bl	8001248 <HAL_GPIO_Init>

 // Enable NVIC EXTI line 13
 HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000d18:	2028      	movs	r0, #40	; 0x28
 8000d1a:	f000 fa7a 	bl	8001212 <HAL_NVIC_EnableIRQ>
}
 8000d1e:	bf00      	nop
 8000d20:	3718      	adds	r7, #24
 8000d22:	46bd      	mov	sp, r7
 8000d24:	bd80      	pop	{r7, pc}
 8000d26:	bf00      	nop
 8000d28:	40021000 	.word	0x40021000
 8000d2c:	10210000 	.word	0x10210000
 8000d30:	48000800 	.word	0x48000800

08000d34 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d34:	b480      	push	{r7}
 8000d36:	b083      	sub	sp, #12
 8000d38:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d3a:	4b0f      	ldr	r3, [pc, #60]	; (8000d78 <HAL_MspInit+0x44>)
 8000d3c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000d3e:	4a0e      	ldr	r2, [pc, #56]	; (8000d78 <HAL_MspInit+0x44>)
 8000d40:	f043 0301 	orr.w	r3, r3, #1
 8000d44:	6613      	str	r3, [r2, #96]	; 0x60
 8000d46:	4b0c      	ldr	r3, [pc, #48]	; (8000d78 <HAL_MspInit+0x44>)
 8000d48:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000d4a:	f003 0301 	and.w	r3, r3, #1
 8000d4e:	607b      	str	r3, [r7, #4]
 8000d50:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d52:	4b09      	ldr	r3, [pc, #36]	; (8000d78 <HAL_MspInit+0x44>)
 8000d54:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000d56:	4a08      	ldr	r2, [pc, #32]	; (8000d78 <HAL_MspInit+0x44>)
 8000d58:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000d5c:	6593      	str	r3, [r2, #88]	; 0x58
 8000d5e:	4b06      	ldr	r3, [pc, #24]	; (8000d78 <HAL_MspInit+0x44>)
 8000d60:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000d62:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000d66:	603b      	str	r3, [r7, #0]
 8000d68:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d6a:	bf00      	nop
 8000d6c:	370c      	adds	r7, #12
 8000d6e:	46bd      	mov	sp, r7
 8000d70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d74:	4770      	bx	lr
 8000d76:	bf00      	nop
 8000d78:	40021000 	.word	0x40021000

08000d7c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d7c:	b480      	push	{r7}
 8000d7e:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8000d80:	bf00      	nop
 8000d82:	46bd      	mov	sp, r7
 8000d84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d88:	4770      	bx	lr

08000d8a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d8a:	b480      	push	{r7}
 8000d8c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000d8e:	e7fe      	b.n	8000d8e <HardFault_Handler+0x4>

08000d90 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000d90:	b480      	push	{r7}
 8000d92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000d94:	e7fe      	b.n	8000d94 <MemManage_Handler+0x4>

08000d96 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000d96:	b480      	push	{r7}
 8000d98:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000d9a:	e7fe      	b.n	8000d9a <BusFault_Handler+0x4>

08000d9c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000d9c:	b480      	push	{r7}
 8000d9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000da0:	e7fe      	b.n	8000da0 <UsageFault_Handler+0x4>

08000da2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000da2:	b480      	push	{r7}
 8000da4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000da6:	bf00      	nop
 8000da8:	46bd      	mov	sp, r7
 8000daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dae:	4770      	bx	lr

08000db0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000db0:	b480      	push	{r7}
 8000db2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000db4:	bf00      	nop
 8000db6:	46bd      	mov	sp, r7
 8000db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dbc:	4770      	bx	lr

08000dbe <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000dbe:	b480      	push	{r7}
 8000dc0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000dc2:	bf00      	nop
 8000dc4:	46bd      	mov	sp, r7
 8000dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dca:	4770      	bx	lr

08000dcc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000dd0:	f000 f90a 	bl	8000fe8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000dd4:	bf00      	nop
 8000dd6:	bd80      	pop	{r7, pc}

08000dd8 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 8000ddc:	2020      	movs	r0, #32
 8000dde:	f000 fbdd 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 8000de2:	2040      	movs	r0, #64	; 0x40
 8000de4:	f000 fbda 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 8000de8:	2080      	movs	r0, #128	; 0x80
 8000dea:	f000 fbd7 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 8000dee:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000df2:	f000 fbd3 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8000df6:	bf00      	nop
 8000df8:	bd80      	pop	{r7, pc}

08000dfa <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8000dfa:	b580      	push	{r7, lr}
 8000dfc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_10);
 8000dfe:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8000e02:	f000 fbcb 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 8000e06:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8000e0a:	f000 fbc7 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 8000e0e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8000e12:	f000 fbc3 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 8000e16:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8000e1a:	f000 fbbf 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
 8000e1e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8000e22:	f000 fbbb 	bl	800159c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8000e26:	bf00      	nop
 8000e28:	bd80      	pop	{r7, pc}
	...

08000e2c <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
void* _sbrk(int incr)
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	b084      	sub	sp, #16
 8000e30:	af00      	add	r7, sp, #0
 8000e32:	6078      	str	r0, [r7, #4]
    extern char end asm("end");
    static char *heap_end = 0;
    char *prev_heap_end;

    if (heap_end == 0)
 8000e34:	4b11      	ldr	r3, [pc, #68]	; (8000e7c <_sbrk+0x50>)
 8000e36:	681b      	ldr	r3, [r3, #0]
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	d102      	bne.n	8000e42 <_sbrk+0x16>
        heap_end = &end;
 8000e3c:	4b0f      	ldr	r3, [pc, #60]	; (8000e7c <_sbrk+0x50>)
 8000e3e:	4a10      	ldr	r2, [pc, #64]	; (8000e80 <_sbrk+0x54>)
 8000e40:	601a      	str	r2, [r3, #0]

    prev_heap_end = heap_end;
 8000e42:	4b0e      	ldr	r3, [pc, #56]	; (8000e7c <_sbrk+0x50>)
 8000e44:	681b      	ldr	r3, [r3, #0]
 8000e46:	60fb      	str	r3, [r7, #12]
    if (heap_end + incr > stack_ptr)
 8000e48:	4b0c      	ldr	r3, [pc, #48]	; (8000e7c <_sbrk+0x50>)
 8000e4a:	681a      	ldr	r2, [r3, #0]
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	4413      	add	r3, r2
 8000e50:	466a      	mov	r2, sp
 8000e52:	4293      	cmp	r3, r2
 8000e54:	d907      	bls.n	8000e66 <_sbrk+0x3a>
    {
        errno = ENOMEM;
 8000e56:	f001 fd0b 	bl	8002870 <__errno>
 8000e5a:	4603      	mov	r3, r0
 8000e5c:	220c      	movs	r2, #12
 8000e5e:	601a      	str	r2, [r3, #0]
        return (void*)-1;
 8000e60:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000e64:	e006      	b.n	8000e74 <_sbrk+0x48>
    }

    heap_end += incr;
 8000e66:	4b05      	ldr	r3, [pc, #20]	; (8000e7c <_sbrk+0x50>)
 8000e68:	681a      	ldr	r2, [r3, #0]
 8000e6a:	687b      	ldr	r3, [r7, #4]
 8000e6c:	4413      	add	r3, r2
 8000e6e:	4a03      	ldr	r2, [pc, #12]	; (8000e7c <_sbrk+0x50>)
 8000e70:	6013      	str	r3, [r2, #0]

    return (void*)prev_heap_end;
 8000e72:	68fb      	ldr	r3, [r7, #12]
}
 8000e74:	4618      	mov	r0, r3
 8000e76:	3710      	adds	r7, #16
 8000e78:	46bd      	mov	sp, r7
 8000e7a:	bd80      	pop	{r7, pc}
 8000e7c:	20000208 	.word	0x20000208
 8000e80:	20000408 	.word	0x20000408

08000e84 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 8000e84:	b480      	push	{r7}
 8000e86:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000e88:	4b17      	ldr	r3, [pc, #92]	; (8000ee8 <SystemInit+0x64>)
 8000e8a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e8e:	4a16      	ldr	r2, [pc, #88]	; (8000ee8 <SystemInit+0x64>)
 8000e90:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000e94:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8000e98:	4b14      	ldr	r3, [pc, #80]	; (8000eec <SystemInit+0x68>)
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	4a13      	ldr	r2, [pc, #76]	; (8000eec <SystemInit+0x68>)
 8000e9e:	f043 0301 	orr.w	r3, r3, #1
 8000ea2:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000U;
 8000ea4:	4b11      	ldr	r3, [pc, #68]	; (8000eec <SystemInit+0x68>)
 8000ea6:	2200      	movs	r2, #0
 8000ea8:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON , HSION, and PLLON bits */
  RCC->CR &= 0xEAF6FFFFU;
 8000eaa:	4b10      	ldr	r3, [pc, #64]	; (8000eec <SystemInit+0x68>)
 8000eac:	681b      	ldr	r3, [r3, #0]
 8000eae:	4a0f      	ldr	r2, [pc, #60]	; (8000eec <SystemInit+0x68>)
 8000eb0:	f023 53a8 	bic.w	r3, r3, #352321536	; 0x15000000
 8000eb4:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
 8000eb8:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00001000U;
 8000eba:	4b0c      	ldr	r3, [pc, #48]	; (8000eec <SystemInit+0x68>)
 8000ebc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000ec0:	60da      	str	r2, [r3, #12]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8000ec2:	4b0a      	ldr	r3, [pc, #40]	; (8000eec <SystemInit+0x68>)
 8000ec4:	681b      	ldr	r3, [r3, #0]
 8000ec6:	4a09      	ldr	r2, [pc, #36]	; (8000eec <SystemInit+0x68>)
 8000ec8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000ecc:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000U;
 8000ece:	4b07      	ldr	r3, [pc, #28]	; (8000eec <SystemInit+0x68>)
 8000ed0:	2200      	movs	r2, #0
 8000ed2:	619a      	str	r2, [r3, #24]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000ed4:	4b04      	ldr	r3, [pc, #16]	; (8000ee8 <SystemInit+0x64>)
 8000ed6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000eda:	609a      	str	r2, [r3, #8]
#endif
}
 8000edc:	bf00      	nop
 8000ede:	46bd      	mov	sp, r7
 8000ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop
 8000ee8:	e000ed00 	.word	0xe000ed00
 8000eec:	40021000 	.word	0x40021000

08000ef0 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 8000ef0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000f28 <LoopForever+0x2>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8000ef4:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8000ef6:	e003      	b.n	8000f00 <LoopCopyDataInit>

08000ef8 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8000ef8:	4b0c      	ldr	r3, [pc, #48]	; (8000f2c <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 8000efa:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 8000efc:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 8000efe:	3104      	adds	r1, #4

08000f00 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8000f00:	480b      	ldr	r0, [pc, #44]	; (8000f30 <LoopForever+0xa>)
	ldr	r3, =_edata
 8000f02:	4b0c      	ldr	r3, [pc, #48]	; (8000f34 <LoopForever+0xe>)
	adds	r2, r0, r1
 8000f04:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8000f06:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8000f08:	d3f6      	bcc.n	8000ef8 <CopyDataInit>
	ldr	r2, =_sbss
 8000f0a:	4a0b      	ldr	r2, [pc, #44]	; (8000f38 <LoopForever+0x12>)
	b	LoopFillZerobss
 8000f0c:	e002      	b.n	8000f14 <LoopFillZerobss>

08000f0e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 8000f0e:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8000f10:	f842 3b04 	str.w	r3, [r2], #4

08000f14 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8000f14:	4b09      	ldr	r3, [pc, #36]	; (8000f3c <LoopForever+0x16>)
	cmp	r2, r3
 8000f16:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8000f18:	d3f9      	bcc.n	8000f0e <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8000f1a:	f7ff ffb3 	bl	8000e84 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000f1e:	f001 fcad 	bl	800287c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8000f22:	f7ff fe9d 	bl	8000c60 <main>

08000f26 <LoopForever>:

LoopForever:
    b LoopForever
 8000f26:	e7fe      	b.n	8000f26 <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 8000f28:	20018000 	.word	0x20018000
	ldr	r3, =_sidata
 8000f2c:	08004968 	.word	0x08004968
	ldr	r0, =_sdata
 8000f30:	20000000 	.word	0x20000000
	ldr	r3, =_edata
 8000f34:	200001dc 	.word	0x200001dc
	ldr	r2, =_sbss
 8000f38:	200001dc 	.word	0x200001dc
	ldr	r3, = _ebss
 8000f3c:	20000408 	.word	0x20000408

08000f40 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000f40:	e7fe      	b.n	8000f40 <ADC1_2_IRQHandler>

08000f42 <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8000f42:	b580      	push	{r7, lr}
 8000f44:	b082      	sub	sp, #8
 8000f46:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8000f48:	2300      	movs	r3, #0
 8000f4a:	71fb      	strb	r3, [r7, #7]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000f4c:	2003      	movs	r0, #3
 8000f4e:	f000 f939 	bl	80011c4 <HAL_NVIC_SetPriorityGrouping>

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8000f52:	2000      	movs	r0, #0
 8000f54:	f000 f80e 	bl	8000f74 <HAL_InitTick>
 8000f58:	4603      	mov	r3, r0
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d002      	beq.n	8000f64 <HAL_Init+0x22>
  {
    status = HAL_ERROR;
 8000f5e:	2301      	movs	r3, #1
 8000f60:	71fb      	strb	r3, [r7, #7]
 8000f62:	e001      	b.n	8000f68 <HAL_Init+0x26>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8000f64:	f7ff fee6 	bl	8000d34 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 8000f68:	79fb      	ldrb	r3, [r7, #7]
}
 8000f6a:	4618      	mov	r0, r3
 8000f6c:	3708      	adds	r7, #8
 8000f6e:	46bd      	mov	sp, r7
 8000f70:	bd80      	pop	{r7, pc}
	...

08000f74 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000f74:	b580      	push	{r7, lr}
 8000f76:	b084      	sub	sp, #16
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 8000f7c:	2300      	movs	r3, #0
 8000f7e:	73fb      	strb	r3, [r7, #15]

  if (uwTickFreq != 0U)
 8000f80:	4b16      	ldr	r3, [pc, #88]	; (8000fdc <HAL_InitTick+0x68>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	2b00      	cmp	r3, #0
 8000f86:	d022      	beq.n	8000fce <HAL_InitTick+0x5a>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) == 0U)
 8000f88:	4b15      	ldr	r3, [pc, #84]	; (8000fe0 <HAL_InitTick+0x6c>)
 8000f8a:	681a      	ldr	r2, [r3, #0]
 8000f8c:	4b13      	ldr	r3, [pc, #76]	; (8000fdc <HAL_InitTick+0x68>)
 8000f8e:	681b      	ldr	r3, [r3, #0]
 8000f90:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000f94:	fbb1 f3f3 	udiv	r3, r1, r3
 8000f98:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f9c:	4618      	mov	r0, r3
 8000f9e:	f000 f946 	bl	800122e <HAL_SYSTICK_Config>
 8000fa2:	4603      	mov	r3, r0
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d10f      	bne.n	8000fc8 <HAL_InitTick+0x54>
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	2b0f      	cmp	r3, #15
 8000fac:	d809      	bhi.n	8000fc2 <HAL_InitTick+0x4e>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000fae:	2200      	movs	r2, #0
 8000fb0:	6879      	ldr	r1, [r7, #4]
 8000fb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fb6:	f000 f910 	bl	80011da <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000fba:	4a0a      	ldr	r2, [pc, #40]	; (8000fe4 <HAL_InitTick+0x70>)
 8000fbc:	687b      	ldr	r3, [r7, #4]
 8000fbe:	6013      	str	r3, [r2, #0]
 8000fc0:	e007      	b.n	8000fd2 <HAL_InitTick+0x5e>
      }
      else
      {
        status = HAL_ERROR;
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	73fb      	strb	r3, [r7, #15]
 8000fc6:	e004      	b.n	8000fd2 <HAL_InitTick+0x5e>
      }
    }
    else
    {
      status = HAL_ERROR;
 8000fc8:	2301      	movs	r3, #1
 8000fca:	73fb      	strb	r3, [r7, #15]
 8000fcc:	e001      	b.n	8000fd2 <HAL_InitTick+0x5e>
    }
  }
  else
  {
    status = HAL_ERROR;
 8000fce:	2301      	movs	r3, #1
 8000fd0:	73fb      	strb	r3, [r7, #15]
  }

  /* Return function status */
  return status;
 8000fd2:	7bfb      	ldrb	r3, [r7, #15]
}
 8000fd4:	4618      	mov	r0, r3
 8000fd6:	3710      	adds	r7, #16
 8000fd8:	46bd      	mov	sp, r7
 8000fda:	bd80      	pop	{r7, pc}
 8000fdc:	20000008 	.word	0x20000008
 8000fe0:	20000000 	.word	0x20000000
 8000fe4:	20000004 	.word	0x20000004

08000fe8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000fe8:	b480      	push	{r7}
 8000fea:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000fec:	4b05      	ldr	r3, [pc, #20]	; (8001004 <HAL_IncTick+0x1c>)
 8000fee:	681a      	ldr	r2, [r3, #0]
 8000ff0:	4b05      	ldr	r3, [pc, #20]	; (8001008 <HAL_IncTick+0x20>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	4413      	add	r3, r2
 8000ff6:	4a03      	ldr	r2, [pc, #12]	; (8001004 <HAL_IncTick+0x1c>)
 8000ff8:	6013      	str	r3, [r2, #0]
}
 8000ffa:	bf00      	nop
 8000ffc:	46bd      	mov	sp, r7
 8000ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001002:	4770      	bx	lr
 8001004:	2000020c 	.word	0x2000020c
 8001008:	20000008 	.word	0x20000008

0800100c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 800100c:	b480      	push	{r7}
 800100e:	af00      	add	r7, sp, #0
  return uwTick;
 8001010:	4b03      	ldr	r3, [pc, #12]	; (8001020 <HAL_GetTick+0x14>)
 8001012:	681b      	ldr	r3, [r3, #0]
}
 8001014:	4618      	mov	r0, r3
 8001016:	46bd      	mov	sp, r7
 8001018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800101c:	4770      	bx	lr
 800101e:	bf00      	nop
 8001020:	2000020c 	.word	0x2000020c

08001024 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001024:	b480      	push	{r7}
 8001026:	b085      	sub	sp, #20
 8001028:	af00      	add	r7, sp, #0
 800102a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	f003 0307 	and.w	r3, r3, #7
 8001032:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001034:	4b0c      	ldr	r3, [pc, #48]	; (8001068 <__NVIC_SetPriorityGrouping+0x44>)
 8001036:	68db      	ldr	r3, [r3, #12]
 8001038:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800103a:	68ba      	ldr	r2, [r7, #8]
 800103c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001040:	4013      	ands	r3, r2
 8001042:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001044:	68fb      	ldr	r3, [r7, #12]
 8001046:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001048:	68bb      	ldr	r3, [r7, #8]
 800104a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800104c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001050:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001054:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001056:	4a04      	ldr	r2, [pc, #16]	; (8001068 <__NVIC_SetPriorityGrouping+0x44>)
 8001058:	68bb      	ldr	r3, [r7, #8]
 800105a:	60d3      	str	r3, [r2, #12]
}
 800105c:	bf00      	nop
 800105e:	3714      	adds	r7, #20
 8001060:	46bd      	mov	sp, r7
 8001062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001066:	4770      	bx	lr
 8001068:	e000ed00 	.word	0xe000ed00

0800106c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800106c:	b480      	push	{r7}
 800106e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001070:	4b04      	ldr	r3, [pc, #16]	; (8001084 <__NVIC_GetPriorityGrouping+0x18>)
 8001072:	68db      	ldr	r3, [r3, #12]
 8001074:	0a1b      	lsrs	r3, r3, #8
 8001076:	f003 0307 	and.w	r3, r3, #7
}
 800107a:	4618      	mov	r0, r3
 800107c:	46bd      	mov	sp, r7
 800107e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001082:	4770      	bx	lr
 8001084:	e000ed00 	.word	0xe000ed00

08001088 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001088:	b480      	push	{r7}
 800108a:	b083      	sub	sp, #12
 800108c:	af00      	add	r7, sp, #0
 800108e:	4603      	mov	r3, r0
 8001090:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001092:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001096:	2b00      	cmp	r3, #0
 8001098:	db0b      	blt.n	80010b2 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800109a:	79fb      	ldrb	r3, [r7, #7]
 800109c:	f003 021f 	and.w	r2, r3, #31
 80010a0:	4907      	ldr	r1, [pc, #28]	; (80010c0 <__NVIC_EnableIRQ+0x38>)
 80010a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010a6:	095b      	lsrs	r3, r3, #5
 80010a8:	2001      	movs	r0, #1
 80010aa:	fa00 f202 	lsl.w	r2, r0, r2
 80010ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80010b2:	bf00      	nop
 80010b4:	370c      	adds	r7, #12
 80010b6:	46bd      	mov	sp, r7
 80010b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010bc:	4770      	bx	lr
 80010be:	bf00      	nop
 80010c0:	e000e100 	.word	0xe000e100

080010c4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80010c4:	b480      	push	{r7}
 80010c6:	b083      	sub	sp, #12
 80010c8:	af00      	add	r7, sp, #0
 80010ca:	4603      	mov	r3, r0
 80010cc:	6039      	str	r1, [r7, #0]
 80010ce:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80010d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	db0a      	blt.n	80010ee <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80010d8:	683b      	ldr	r3, [r7, #0]
 80010da:	b2da      	uxtb	r2, r3
 80010dc:	490c      	ldr	r1, [pc, #48]	; (8001110 <__NVIC_SetPriority+0x4c>)
 80010de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010e2:	0112      	lsls	r2, r2, #4
 80010e4:	b2d2      	uxtb	r2, r2
 80010e6:	440b      	add	r3, r1
 80010e8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80010ec:	e00a      	b.n	8001104 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80010ee:	683b      	ldr	r3, [r7, #0]
 80010f0:	b2da      	uxtb	r2, r3
 80010f2:	4908      	ldr	r1, [pc, #32]	; (8001114 <__NVIC_SetPriority+0x50>)
 80010f4:	79fb      	ldrb	r3, [r7, #7]
 80010f6:	f003 030f 	and.w	r3, r3, #15
 80010fa:	3b04      	subs	r3, #4
 80010fc:	0112      	lsls	r2, r2, #4
 80010fe:	b2d2      	uxtb	r2, r2
 8001100:	440b      	add	r3, r1
 8001102:	761a      	strb	r2, [r3, #24]
}
 8001104:	bf00      	nop
 8001106:	370c      	adds	r7, #12
 8001108:	46bd      	mov	sp, r7
 800110a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100
 8001114:	e000ed00 	.word	0xe000ed00

08001118 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001118:	b480      	push	{r7}
 800111a:	b089      	sub	sp, #36	; 0x24
 800111c:	af00      	add	r7, sp, #0
 800111e:	60f8      	str	r0, [r7, #12]
 8001120:	60b9      	str	r1, [r7, #8]
 8001122:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001124:	68fb      	ldr	r3, [r7, #12]
 8001126:	f003 0307 	and.w	r3, r3, #7
 800112a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800112c:	69fb      	ldr	r3, [r7, #28]
 800112e:	f1c3 0307 	rsb	r3, r3, #7
 8001132:	2b04      	cmp	r3, #4
 8001134:	bf28      	it	cs
 8001136:	2304      	movcs	r3, #4
 8001138:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800113a:	69fb      	ldr	r3, [r7, #28]
 800113c:	3304      	adds	r3, #4
 800113e:	2b06      	cmp	r3, #6
 8001140:	d902      	bls.n	8001148 <NVIC_EncodePriority+0x30>
 8001142:	69fb      	ldr	r3, [r7, #28]
 8001144:	3b03      	subs	r3, #3
 8001146:	e000      	b.n	800114a <NVIC_EncodePriority+0x32>
 8001148:	2300      	movs	r3, #0
 800114a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800114c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001150:	69bb      	ldr	r3, [r7, #24]
 8001152:	fa02 f303 	lsl.w	r3, r2, r3
 8001156:	43da      	mvns	r2, r3
 8001158:	68bb      	ldr	r3, [r7, #8]
 800115a:	401a      	ands	r2, r3
 800115c:	697b      	ldr	r3, [r7, #20]
 800115e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001160:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001164:	697b      	ldr	r3, [r7, #20]
 8001166:	fa01 f303 	lsl.w	r3, r1, r3
 800116a:	43d9      	mvns	r1, r3
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001170:	4313      	orrs	r3, r2
         );
}
 8001172:	4618      	mov	r0, r3
 8001174:	3724      	adds	r7, #36	; 0x24
 8001176:	46bd      	mov	sp, r7
 8001178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800117c:	4770      	bx	lr
	...

08001180 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001180:	b580      	push	{r7, lr}
 8001182:	b082      	sub	sp, #8
 8001184:	af00      	add	r7, sp, #0
 8001186:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	3b01      	subs	r3, #1
 800118c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001190:	d301      	bcc.n	8001196 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001192:	2301      	movs	r3, #1
 8001194:	e00f      	b.n	80011b6 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001196:	4a0a      	ldr	r2, [pc, #40]	; (80011c0 <SysTick_Config+0x40>)
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	3b01      	subs	r3, #1
 800119c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800119e:	210f      	movs	r1, #15
 80011a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011a4:	f7ff ff8e 	bl	80010c4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80011a8:	4b05      	ldr	r3, [pc, #20]	; (80011c0 <SysTick_Config+0x40>)
 80011aa:	2200      	movs	r2, #0
 80011ac:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80011ae:	4b04      	ldr	r3, [pc, #16]	; (80011c0 <SysTick_Config+0x40>)
 80011b0:	2207      	movs	r2, #7
 80011b2:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80011b4:	2300      	movs	r3, #0
}
 80011b6:	4618      	mov	r0, r3
 80011b8:	3708      	adds	r7, #8
 80011ba:	46bd      	mov	sp, r7
 80011bc:	bd80      	pop	{r7, pc}
 80011be:	bf00      	nop
 80011c0:	e000e010 	.word	0xe000e010

080011c4 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80011c4:	b580      	push	{r7, lr}
 80011c6:	b082      	sub	sp, #8
 80011c8:	af00      	add	r7, sp, #0
 80011ca:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80011cc:	6878      	ldr	r0, [r7, #4]
 80011ce:	f7ff ff29 	bl	8001024 <__NVIC_SetPriorityGrouping>
}
 80011d2:	bf00      	nop
 80011d4:	3708      	adds	r7, #8
 80011d6:	46bd      	mov	sp, r7
 80011d8:	bd80      	pop	{r7, pc}

080011da <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80011da:	b580      	push	{r7, lr}
 80011dc:	b086      	sub	sp, #24
 80011de:	af00      	add	r7, sp, #0
 80011e0:	4603      	mov	r3, r0
 80011e2:	60b9      	str	r1, [r7, #8]
 80011e4:	607a      	str	r2, [r7, #4]
 80011e6:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 80011e8:	2300      	movs	r3, #0
 80011ea:	617b      	str	r3, [r7, #20]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 80011ec:	f7ff ff3e 	bl	800106c <__NVIC_GetPriorityGrouping>
 80011f0:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80011f2:	687a      	ldr	r2, [r7, #4]
 80011f4:	68b9      	ldr	r1, [r7, #8]
 80011f6:	6978      	ldr	r0, [r7, #20]
 80011f8:	f7ff ff8e 	bl	8001118 <NVIC_EncodePriority>
 80011fc:	4602      	mov	r2, r0
 80011fe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001202:	4611      	mov	r1, r2
 8001204:	4618      	mov	r0, r3
 8001206:	f7ff ff5d 	bl	80010c4 <__NVIC_SetPriority>
}
 800120a:	bf00      	nop
 800120c:	3718      	adds	r7, #24
 800120e:	46bd      	mov	sp, r7
 8001210:	bd80      	pop	{r7, pc}

08001212 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32l4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001212:	b580      	push	{r7, lr}
 8001214:	b082      	sub	sp, #8
 8001216:	af00      	add	r7, sp, #0
 8001218:	4603      	mov	r3, r0
 800121a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800121c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001220:	4618      	mov	r0, r3
 8001222:	f7ff ff31 	bl	8001088 <__NVIC_EnableIRQ>
}
 8001226:	bf00      	nop
 8001228:	3708      	adds	r7, #8
 800122a:	46bd      	mov	sp, r7
 800122c:	bd80      	pop	{r7, pc}

0800122e <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800122e:	b580      	push	{r7, lr}
 8001230:	b082      	sub	sp, #8
 8001232:	af00      	add	r7, sp, #0
 8001234:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001236:	6878      	ldr	r0, [r7, #4]
 8001238:	f7ff ffa2 	bl	8001180 <SysTick_Config>
 800123c:	4603      	mov	r3, r0
}
 800123e:	4618      	mov	r0, r3
 8001240:	3708      	adds	r7, #8
 8001242:	46bd      	mov	sp, r7
 8001244:	bd80      	pop	{r7, pc}
	...

08001248 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001248:	b480      	push	{r7}
 800124a:	b087      	sub	sp, #28
 800124c:	af00      	add	r7, sp, #0
 800124e:	6078      	str	r0, [r7, #4]
 8001250:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8001252:	2300      	movs	r3, #0
 8001254:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001256:	e17f      	b.n	8001558 <HAL_GPIO_Init+0x310>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8001258:	683b      	ldr	r3, [r7, #0]
 800125a:	681a      	ldr	r2, [r3, #0]
 800125c:	2101      	movs	r1, #1
 800125e:	697b      	ldr	r3, [r7, #20]
 8001260:	fa01 f303 	lsl.w	r3, r1, r3
 8001264:	4013      	ands	r3, r2
 8001266:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8001268:	68fb      	ldr	r3, [r7, #12]
 800126a:	2b00      	cmp	r3, #0
 800126c:	f000 8171 	beq.w	8001552 <HAL_GPIO_Init+0x30a>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001270:	683b      	ldr	r3, [r7, #0]
 8001272:	685b      	ldr	r3, [r3, #4]
 8001274:	2b01      	cmp	r3, #1
 8001276:	d00b      	beq.n	8001290 <HAL_GPIO_Init+0x48>
 8001278:	683b      	ldr	r3, [r7, #0]
 800127a:	685b      	ldr	r3, [r3, #4]
 800127c:	2b02      	cmp	r3, #2
 800127e:	d007      	beq.n	8001290 <HAL_GPIO_Init+0x48>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001280:	683b      	ldr	r3, [r7, #0]
 8001282:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001284:	2b11      	cmp	r3, #17
 8001286:	d003      	beq.n	8001290 <HAL_GPIO_Init+0x48>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001288:	683b      	ldr	r3, [r7, #0]
 800128a:	685b      	ldr	r3, [r3, #4]
 800128c:	2b12      	cmp	r3, #18
 800128e:	d130      	bne.n	80012f2 <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	689b      	ldr	r3, [r3, #8]
 8001294:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8001296:	697b      	ldr	r3, [r7, #20]
 8001298:	005b      	lsls	r3, r3, #1
 800129a:	2203      	movs	r2, #3
 800129c:	fa02 f303 	lsl.w	r3, r2, r3
 80012a0:	43db      	mvns	r3, r3
 80012a2:	693a      	ldr	r2, [r7, #16]
 80012a4:	4013      	ands	r3, r2
 80012a6:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 80012a8:	683b      	ldr	r3, [r7, #0]
 80012aa:	68da      	ldr	r2, [r3, #12]
 80012ac:	697b      	ldr	r3, [r7, #20]
 80012ae:	005b      	lsls	r3, r3, #1
 80012b0:	fa02 f303 	lsl.w	r3, r2, r3
 80012b4:	693a      	ldr	r2, [r7, #16]
 80012b6:	4313      	orrs	r3, r2
 80012b8:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	693a      	ldr	r2, [r7, #16]
 80012be:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80012c0:	687b      	ldr	r3, [r7, #4]
 80012c2:	685b      	ldr	r3, [r3, #4]
 80012c4:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80012c6:	2201      	movs	r2, #1
 80012c8:	697b      	ldr	r3, [r7, #20]
 80012ca:	fa02 f303 	lsl.w	r3, r2, r3
 80012ce:	43db      	mvns	r3, r3
 80012d0:	693a      	ldr	r2, [r7, #16]
 80012d2:	4013      	ands	r3, r2
 80012d4:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 80012d6:	683b      	ldr	r3, [r7, #0]
 80012d8:	685b      	ldr	r3, [r3, #4]
 80012da:	091b      	lsrs	r3, r3, #4
 80012dc:	f003 0201 	and.w	r2, r3, #1
 80012e0:	697b      	ldr	r3, [r7, #20]
 80012e2:	fa02 f303 	lsl.w	r3, r2, r3
 80012e6:	693a      	ldr	r2, [r7, #16]
 80012e8:	4313      	orrs	r3, r2
 80012ea:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	693a      	ldr	r2, [r7, #16]
 80012f0:	605a      	str	r2, [r3, #4]
      }

#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx)

      /* In case of Analog mode, check if ADC control mode is selected */
      if((GPIO_Init->Mode & GPIO_MODE_ANALOG) == GPIO_MODE_ANALOG)
 80012f2:	683b      	ldr	r3, [r7, #0]
 80012f4:	685b      	ldr	r3, [r3, #4]
 80012f6:	f003 0303 	and.w	r3, r3, #3
 80012fa:	2b03      	cmp	r3, #3
 80012fc:	d118      	bne.n	8001330 <HAL_GPIO_Init+0xe8>
      {
        /* Configure the IO Output Type */
        temp = GPIOx->ASCR;
 80012fe:	687b      	ldr	r3, [r7, #4]
 8001300:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001302:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_ASCR_ASC0 << position) ;
 8001304:	2201      	movs	r2, #1
 8001306:	697b      	ldr	r3, [r7, #20]
 8001308:	fa02 f303 	lsl.w	r3, r2, r3
 800130c:	43db      	mvns	r3, r3
 800130e:	693a      	ldr	r2, [r7, #16]
 8001310:	4013      	ands	r3, r2
 8001312:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & ANALOG_MODE) >> 3) << position);
 8001314:	683b      	ldr	r3, [r7, #0]
 8001316:	685b      	ldr	r3, [r3, #4]
 8001318:	08db      	lsrs	r3, r3, #3
 800131a:	f003 0201 	and.w	r2, r3, #1
 800131e:	697b      	ldr	r3, [r7, #20]
 8001320:	fa02 f303 	lsl.w	r3, r2, r3
 8001324:	693a      	ldr	r2, [r7, #16]
 8001326:	4313      	orrs	r3, r2
 8001328:	613b      	str	r3, [r7, #16]
        GPIOx->ASCR = temp;
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	693a      	ldr	r2, [r7, #16]
 800132e:	62da      	str	r2, [r3, #44]	; 0x2c
      }

#endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx */

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8001330:	687b      	ldr	r3, [r7, #4]
 8001332:	68db      	ldr	r3, [r3, #12]
 8001334:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 8001336:	697b      	ldr	r3, [r7, #20]
 8001338:	005b      	lsls	r3, r3, #1
 800133a:	2203      	movs	r2, #3
 800133c:	fa02 f303 	lsl.w	r3, r2, r3
 8001340:	43db      	mvns	r3, r3
 8001342:	693a      	ldr	r2, [r7, #16]
 8001344:	4013      	ands	r3, r2
 8001346:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8001348:	683b      	ldr	r3, [r7, #0]
 800134a:	689a      	ldr	r2, [r3, #8]
 800134c:	697b      	ldr	r3, [r7, #20]
 800134e:	005b      	lsls	r3, r3, #1
 8001350:	fa02 f303 	lsl.w	r3, r2, r3
 8001354:	693a      	ldr	r2, [r7, #16]
 8001356:	4313      	orrs	r3, r2
 8001358:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 800135a:	687b      	ldr	r3, [r7, #4]
 800135c:	693a      	ldr	r2, [r7, #16]
 800135e:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001360:	683b      	ldr	r3, [r7, #0]
 8001362:	685b      	ldr	r3, [r3, #4]
 8001364:	2b02      	cmp	r3, #2
 8001366:	d003      	beq.n	8001370 <HAL_GPIO_Init+0x128>
 8001368:	683b      	ldr	r3, [r7, #0]
 800136a:	685b      	ldr	r3, [r3, #4]
 800136c:	2b12      	cmp	r3, #18
 800136e:	d123      	bne.n	80013b8 <HAL_GPIO_Init+0x170>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8001370:	697b      	ldr	r3, [r7, #20]
 8001372:	08da      	lsrs	r2, r3, #3
 8001374:	687b      	ldr	r3, [r7, #4]
 8001376:	3208      	adds	r2, #8
 8001378:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800137c:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 800137e:	697b      	ldr	r3, [r7, #20]
 8001380:	f003 0307 	and.w	r3, r3, #7
 8001384:	009b      	lsls	r3, r3, #2
 8001386:	220f      	movs	r2, #15
 8001388:	fa02 f303 	lsl.w	r3, r2, r3
 800138c:	43db      	mvns	r3, r3
 800138e:	693a      	ldr	r2, [r7, #16]
 8001390:	4013      	ands	r3, r2
 8001392:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8001394:	683b      	ldr	r3, [r7, #0]
 8001396:	691a      	ldr	r2, [r3, #16]
 8001398:	697b      	ldr	r3, [r7, #20]
 800139a:	f003 0307 	and.w	r3, r3, #7
 800139e:	009b      	lsls	r3, r3, #2
 80013a0:	fa02 f303 	lsl.w	r3, r2, r3
 80013a4:	693a      	ldr	r2, [r7, #16]
 80013a6:	4313      	orrs	r3, r2
 80013a8:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 80013aa:	697b      	ldr	r3, [r7, #20]
 80013ac:	08da      	lsrs	r2, r3, #3
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	3208      	adds	r2, #8
 80013b2:	6939      	ldr	r1, [r7, #16]
 80013b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	681b      	ldr	r3, [r3, #0]
 80013bc:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 80013be:	697b      	ldr	r3, [r7, #20]
 80013c0:	005b      	lsls	r3, r3, #1
 80013c2:	2203      	movs	r2, #3
 80013c4:	fa02 f303 	lsl.w	r3, r2, r3
 80013c8:	43db      	mvns	r3, r3
 80013ca:	693a      	ldr	r2, [r7, #16]
 80013cc:	4013      	ands	r3, r2
 80013ce:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80013d0:	683b      	ldr	r3, [r7, #0]
 80013d2:	685b      	ldr	r3, [r3, #4]
 80013d4:	f003 0203 	and.w	r2, r3, #3
 80013d8:	697b      	ldr	r3, [r7, #20]
 80013da:	005b      	lsls	r3, r3, #1
 80013dc:	fa02 f303 	lsl.w	r3, r2, r3
 80013e0:	693a      	ldr	r2, [r7, #16]
 80013e2:	4313      	orrs	r3, r2
 80013e4:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	693a      	ldr	r2, [r7, #16]
 80013ea:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80013ec:	683b      	ldr	r3, [r7, #0]
 80013ee:	685b      	ldr	r3, [r3, #4]
 80013f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	f000 80ac 	beq.w	8001552 <HAL_GPIO_Init+0x30a>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80013fa:	4b5f      	ldr	r3, [pc, #380]	; (8001578 <HAL_GPIO_Init+0x330>)
 80013fc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80013fe:	4a5e      	ldr	r2, [pc, #376]	; (8001578 <HAL_GPIO_Init+0x330>)
 8001400:	f043 0301 	orr.w	r3, r3, #1
 8001404:	6613      	str	r3, [r2, #96]	; 0x60
 8001406:	4b5c      	ldr	r3, [pc, #368]	; (8001578 <HAL_GPIO_Init+0x330>)
 8001408:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800140a:	f003 0301 	and.w	r3, r3, #1
 800140e:	60bb      	str	r3, [r7, #8]
 8001410:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8001412:	4a5a      	ldr	r2, [pc, #360]	; (800157c <HAL_GPIO_Init+0x334>)
 8001414:	697b      	ldr	r3, [r7, #20]
 8001416:	089b      	lsrs	r3, r3, #2
 8001418:	3302      	adds	r3, #2
 800141a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800141e:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8001420:	697b      	ldr	r3, [r7, #20]
 8001422:	f003 0303 	and.w	r3, r3, #3
 8001426:	009b      	lsls	r3, r3, #2
 8001428:	220f      	movs	r2, #15
 800142a:	fa02 f303 	lsl.w	r3, r2, r3
 800142e:	43db      	mvns	r3, r3
 8001430:	693a      	ldr	r2, [r7, #16]
 8001432:	4013      	ands	r3, r2
 8001434:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8001436:	687b      	ldr	r3, [r7, #4]
 8001438:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 800143c:	d025      	beq.n	800148a <HAL_GPIO_Init+0x242>
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	4a4f      	ldr	r2, [pc, #316]	; (8001580 <HAL_GPIO_Init+0x338>)
 8001442:	4293      	cmp	r3, r2
 8001444:	d01f      	beq.n	8001486 <HAL_GPIO_Init+0x23e>
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	4a4e      	ldr	r2, [pc, #312]	; (8001584 <HAL_GPIO_Init+0x33c>)
 800144a:	4293      	cmp	r3, r2
 800144c:	d019      	beq.n	8001482 <HAL_GPIO_Init+0x23a>
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	4a4d      	ldr	r2, [pc, #308]	; (8001588 <HAL_GPIO_Init+0x340>)
 8001452:	4293      	cmp	r3, r2
 8001454:	d013      	beq.n	800147e <HAL_GPIO_Init+0x236>
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	4a4c      	ldr	r2, [pc, #304]	; (800158c <HAL_GPIO_Init+0x344>)
 800145a:	4293      	cmp	r3, r2
 800145c:	d00d      	beq.n	800147a <HAL_GPIO_Init+0x232>
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	4a4b      	ldr	r2, [pc, #300]	; (8001590 <HAL_GPIO_Init+0x348>)
 8001462:	4293      	cmp	r3, r2
 8001464:	d007      	beq.n	8001476 <HAL_GPIO_Init+0x22e>
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	4a4a      	ldr	r2, [pc, #296]	; (8001594 <HAL_GPIO_Init+0x34c>)
 800146a:	4293      	cmp	r3, r2
 800146c:	d101      	bne.n	8001472 <HAL_GPIO_Init+0x22a>
 800146e:	2306      	movs	r3, #6
 8001470:	e00c      	b.n	800148c <HAL_GPIO_Init+0x244>
 8001472:	2307      	movs	r3, #7
 8001474:	e00a      	b.n	800148c <HAL_GPIO_Init+0x244>
 8001476:	2305      	movs	r3, #5
 8001478:	e008      	b.n	800148c <HAL_GPIO_Init+0x244>
 800147a:	2304      	movs	r3, #4
 800147c:	e006      	b.n	800148c <HAL_GPIO_Init+0x244>
 800147e:	2303      	movs	r3, #3
 8001480:	e004      	b.n	800148c <HAL_GPIO_Init+0x244>
 8001482:	2302      	movs	r3, #2
 8001484:	e002      	b.n	800148c <HAL_GPIO_Init+0x244>
 8001486:	2301      	movs	r3, #1
 8001488:	e000      	b.n	800148c <HAL_GPIO_Init+0x244>
 800148a:	2300      	movs	r3, #0
 800148c:	697a      	ldr	r2, [r7, #20]
 800148e:	f002 0203 	and.w	r2, r2, #3
 8001492:	0092      	lsls	r2, r2, #2
 8001494:	4093      	lsls	r3, r2
 8001496:	693a      	ldr	r2, [r7, #16]
 8001498:	4313      	orrs	r3, r2
 800149a:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 800149c:	4937      	ldr	r1, [pc, #220]	; (800157c <HAL_GPIO_Init+0x334>)
 800149e:	697b      	ldr	r3, [r7, #20]
 80014a0:	089b      	lsrs	r3, r3, #2
 80014a2:	3302      	adds	r3, #2
 80014a4:	693a      	ldr	r2, [r7, #16]
 80014a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR1;
 80014aa:	4b3b      	ldr	r3, [pc, #236]	; (8001598 <HAL_GPIO_Init+0x350>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80014b0:	68fb      	ldr	r3, [r7, #12]
 80014b2:	43db      	mvns	r3, r3
 80014b4:	693a      	ldr	r2, [r7, #16]
 80014b6:	4013      	ands	r3, r2
 80014b8:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80014ba:	683b      	ldr	r3, [r7, #0]
 80014bc:	685b      	ldr	r3, [r3, #4]
 80014be:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d003      	beq.n	80014ce <HAL_GPIO_Init+0x286>
        {
          temp |= iocurrent;
 80014c6:	693a      	ldr	r2, [r7, #16]
 80014c8:	68fb      	ldr	r3, [r7, #12]
 80014ca:	4313      	orrs	r3, r2
 80014cc:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR1 = temp;
 80014ce:	4a32      	ldr	r2, [pc, #200]	; (8001598 <HAL_GPIO_Init+0x350>)
 80014d0:	693b      	ldr	r3, [r7, #16]
 80014d2:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR1;
 80014d4:	4b30      	ldr	r3, [pc, #192]	; (8001598 <HAL_GPIO_Init+0x350>)
 80014d6:	685b      	ldr	r3, [r3, #4]
 80014d8:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80014da:	68fb      	ldr	r3, [r7, #12]
 80014dc:	43db      	mvns	r3, r3
 80014de:	693a      	ldr	r2, [r7, #16]
 80014e0:	4013      	ands	r3, r2
 80014e2:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80014e4:	683b      	ldr	r3, [r7, #0]
 80014e6:	685b      	ldr	r3, [r3, #4]
 80014e8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d003      	beq.n	80014f8 <HAL_GPIO_Init+0x2b0>
        {
          temp |= iocurrent;
 80014f0:	693a      	ldr	r2, [r7, #16]
 80014f2:	68fb      	ldr	r3, [r7, #12]
 80014f4:	4313      	orrs	r3, r2
 80014f6:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR1 = temp;
 80014f8:	4a27      	ldr	r2, [pc, #156]	; (8001598 <HAL_GPIO_Init+0x350>)
 80014fa:	693b      	ldr	r3, [r7, #16]
 80014fc:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 80014fe:	4b26      	ldr	r3, [pc, #152]	; (8001598 <HAL_GPIO_Init+0x350>)
 8001500:	689b      	ldr	r3, [r3, #8]
 8001502:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001504:	68fb      	ldr	r3, [r7, #12]
 8001506:	43db      	mvns	r3, r3
 8001508:	693a      	ldr	r2, [r7, #16]
 800150a:	4013      	ands	r3, r2
 800150c:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800150e:	683b      	ldr	r3, [r7, #0]
 8001510:	685b      	ldr	r3, [r3, #4]
 8001512:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001516:	2b00      	cmp	r3, #0
 8001518:	d003      	beq.n	8001522 <HAL_GPIO_Init+0x2da>
        {
          temp |= iocurrent;
 800151a:	693a      	ldr	r2, [r7, #16]
 800151c:	68fb      	ldr	r3, [r7, #12]
 800151e:	4313      	orrs	r3, r2
 8001520:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 8001522:	4a1d      	ldr	r2, [pc, #116]	; (8001598 <HAL_GPIO_Init+0x350>)
 8001524:	693b      	ldr	r3, [r7, #16]
 8001526:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR1;
 8001528:	4b1b      	ldr	r3, [pc, #108]	; (8001598 <HAL_GPIO_Init+0x350>)
 800152a:	68db      	ldr	r3, [r3, #12]
 800152c:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800152e:	68fb      	ldr	r3, [r7, #12]
 8001530:	43db      	mvns	r3, r3
 8001532:	693a      	ldr	r2, [r7, #16]
 8001534:	4013      	ands	r3, r2
 8001536:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001538:	683b      	ldr	r3, [r7, #0]
 800153a:	685b      	ldr	r3, [r3, #4]
 800153c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001540:	2b00      	cmp	r3, #0
 8001542:	d003      	beq.n	800154c <HAL_GPIO_Init+0x304>
        {
          temp |= iocurrent;
 8001544:	693a      	ldr	r2, [r7, #16]
 8001546:	68fb      	ldr	r3, [r7, #12]
 8001548:	4313      	orrs	r3, r2
 800154a:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 800154c:	4a12      	ldr	r2, [pc, #72]	; (8001598 <HAL_GPIO_Init+0x350>)
 800154e:	693b      	ldr	r3, [r7, #16]
 8001550:	60d3      	str	r3, [r2, #12]
      }
    }

    position++;
 8001552:	697b      	ldr	r3, [r7, #20]
 8001554:	3301      	adds	r3, #1
 8001556:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001558:	683b      	ldr	r3, [r7, #0]
 800155a:	681a      	ldr	r2, [r3, #0]
 800155c:	697b      	ldr	r3, [r7, #20]
 800155e:	fa22 f303 	lsr.w	r3, r2, r3
 8001562:	2b00      	cmp	r3, #0
 8001564:	f47f ae78 	bne.w	8001258 <HAL_GPIO_Init+0x10>
  }
}
 8001568:	bf00      	nop
 800156a:	bf00      	nop
 800156c:	371c      	adds	r7, #28
 800156e:	46bd      	mov	sp, r7
 8001570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001574:	4770      	bx	lr
 8001576:	bf00      	nop
 8001578:	40021000 	.word	0x40021000
 800157c:	40010000 	.word	0x40010000
 8001580:	48000400 	.word	0x48000400
 8001584:	48000800 	.word	0x48000800
 8001588:	48000c00 	.word	0x48000c00
 800158c:	48001000 	.word	0x48001000
 8001590:	48001400 	.word	0x48001400
 8001594:	48001800 	.word	0x48001800
 8001598:	40010400 	.word	0x40010400

0800159c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800159c:	b580      	push	{r7, lr}
 800159e:	b082      	sub	sp, #8
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	4603      	mov	r3, r0
 80015a4:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 80015a6:	4b08      	ldr	r3, [pc, #32]	; (80015c8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80015a8:	695a      	ldr	r2, [r3, #20]
 80015aa:	88fb      	ldrh	r3, [r7, #6]
 80015ac:	4013      	ands	r3, r2
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d006      	beq.n	80015c0 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80015b2:	4a05      	ldr	r2, [pc, #20]	; (80015c8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80015b4:	88fb      	ldrh	r3, [r7, #6]
 80015b6:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80015b8:	88fb      	ldrh	r3, [r7, #6]
 80015ba:	4618      	mov	r0, r3
 80015bc:	f7ff faf4 	bl	8000ba8 <HAL_GPIO_EXTI_Callback>
  }
}
 80015c0:	bf00      	nop
 80015c2:	3708      	adds	r7, #8
 80015c4:	46bd      	mov	sp, r7
 80015c6:	bd80      	pop	{r7, pc}
 80015c8:	40010400 	.word	0x40010400

080015cc <findslot>:
 80015cc:	4b0a      	ldr	r3, [pc, #40]	; (80015f8 <findslot+0x2c>)
 80015ce:	b510      	push	{r4, lr}
 80015d0:	4604      	mov	r4, r0
 80015d2:	6818      	ldr	r0, [r3, #0]
 80015d4:	b118      	cbz	r0, 80015de <findslot+0x12>
 80015d6:	6a03      	ldr	r3, [r0, #32]
 80015d8:	b90b      	cbnz	r3, 80015de <findslot+0x12>
 80015da:	f000 ff7b 	bl	80024d4 <__sinit>
 80015de:	2c13      	cmp	r4, #19
 80015e0:	d807      	bhi.n	80015f2 <findslot+0x26>
 80015e2:	4806      	ldr	r0, [pc, #24]	; (80015fc <findslot+0x30>)
 80015e4:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 80015e8:	3201      	adds	r2, #1
 80015ea:	d002      	beq.n	80015f2 <findslot+0x26>
 80015ec:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 80015f0:	bd10      	pop	{r4, pc}
 80015f2:	2000      	movs	r0, #0
 80015f4:	e7fc      	b.n	80015f0 <findslot+0x24>
 80015f6:	bf00      	nop
 80015f8:	2000006c 	.word	0x2000006c
 80015fc:	2000021c 	.word	0x2000021c

08001600 <error>:
 8001600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001602:	4604      	mov	r4, r0
 8001604:	f001 f934 	bl	8002870 <__errno>
 8001608:	2613      	movs	r6, #19
 800160a:	4605      	mov	r5, r0
 800160c:	2700      	movs	r7, #0
 800160e:	4630      	mov	r0, r6
 8001610:	4639      	mov	r1, r7
 8001612:	beab      	bkpt	0x00ab
 8001614:	4606      	mov	r6, r0
 8001616:	602e      	str	r6, [r5, #0]
 8001618:	4620      	mov	r0, r4
 800161a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800161c <checkerror>:
 800161c:	1c43      	adds	r3, r0, #1
 800161e:	d101      	bne.n	8001624 <checkerror+0x8>
 8001620:	f7ff bfee 	b.w	8001600 <error>
 8001624:	4770      	bx	lr

08001626 <_swiread>:
 8001626:	b530      	push	{r4, r5, lr}
 8001628:	b085      	sub	sp, #20
 800162a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800162e:	9203      	str	r2, [sp, #12]
 8001630:	2406      	movs	r4, #6
 8001632:	ad01      	add	r5, sp, #4
 8001634:	4620      	mov	r0, r4
 8001636:	4629      	mov	r1, r5
 8001638:	beab      	bkpt	0x00ab
 800163a:	4604      	mov	r4, r0
 800163c:	4620      	mov	r0, r4
 800163e:	f7ff ffed 	bl	800161c <checkerror>
 8001642:	b005      	add	sp, #20
 8001644:	bd30      	pop	{r4, r5, pc}

08001646 <_read>:
 8001646:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001648:	4615      	mov	r5, r2
 800164a:	9101      	str	r1, [sp, #4]
 800164c:	f7ff ffbe 	bl	80015cc <findslot>
 8001650:	9901      	ldr	r1, [sp, #4]
 8001652:	4604      	mov	r4, r0
 8001654:	b938      	cbnz	r0, 8001666 <_read+0x20>
 8001656:	f001 f90b 	bl	8002870 <__errno>
 800165a:	2309      	movs	r3, #9
 800165c:	6003      	str	r3, [r0, #0]
 800165e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001662:	b003      	add	sp, #12
 8001664:	bd30      	pop	{r4, r5, pc}
 8001666:	6800      	ldr	r0, [r0, #0]
 8001668:	462a      	mov	r2, r5
 800166a:	f7ff ffdc 	bl	8001626 <_swiread>
 800166e:	1c43      	adds	r3, r0, #1
 8001670:	d0f7      	beq.n	8001662 <_read+0x1c>
 8001672:	6863      	ldr	r3, [r4, #4]
 8001674:	1a2a      	subs	r2, r5, r0
 8001676:	4413      	add	r3, r2
 8001678:	6063      	str	r3, [r4, #4]
 800167a:	4610      	mov	r0, r2
 800167c:	e7f1      	b.n	8001662 <_read+0x1c>

0800167e <_swilseek>:
 800167e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001680:	460c      	mov	r4, r1
 8001682:	4616      	mov	r6, r2
 8001684:	f7ff ffa2 	bl	80015cc <findslot>
 8001688:	4605      	mov	r5, r0
 800168a:	b940      	cbnz	r0, 800169e <_swilseek+0x20>
 800168c:	f001 f8f0 	bl	8002870 <__errno>
 8001690:	2309      	movs	r3, #9
 8001692:	6003      	str	r3, [r0, #0]
 8001694:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001698:	4620      	mov	r0, r4
 800169a:	b003      	add	sp, #12
 800169c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800169e:	2e02      	cmp	r6, #2
 80016a0:	d903      	bls.n	80016aa <_swilseek+0x2c>
 80016a2:	f001 f8e5 	bl	8002870 <__errno>
 80016a6:	2316      	movs	r3, #22
 80016a8:	e7f3      	b.n	8001692 <_swilseek+0x14>
 80016aa:	2e01      	cmp	r6, #1
 80016ac:	d112      	bne.n	80016d4 <_swilseek+0x56>
 80016ae:	6843      	ldr	r3, [r0, #4]
 80016b0:	18e4      	adds	r4, r4, r3
 80016b2:	d4f6      	bmi.n	80016a2 <_swilseek+0x24>
 80016b4:	682b      	ldr	r3, [r5, #0]
 80016b6:	260a      	movs	r6, #10
 80016b8:	e9cd 3400 	strd	r3, r4, [sp]
 80016bc:	466f      	mov	r7, sp
 80016be:	4630      	mov	r0, r6
 80016c0:	4639      	mov	r1, r7
 80016c2:	beab      	bkpt	0x00ab
 80016c4:	4606      	mov	r6, r0
 80016c6:	4630      	mov	r0, r6
 80016c8:	f7ff ffa8 	bl	800161c <checkerror>
 80016cc:	2800      	cmp	r0, #0
 80016ce:	dbe1      	blt.n	8001694 <_swilseek+0x16>
 80016d0:	606c      	str	r4, [r5, #4]
 80016d2:	e7e1      	b.n	8001698 <_swilseek+0x1a>
 80016d4:	2e02      	cmp	r6, #2
 80016d6:	6803      	ldr	r3, [r0, #0]
 80016d8:	d1ec      	bne.n	80016b4 <_swilseek+0x36>
 80016da:	9300      	str	r3, [sp, #0]
 80016dc:	260c      	movs	r6, #12
 80016de:	466f      	mov	r7, sp
 80016e0:	4630      	mov	r0, r6
 80016e2:	4639      	mov	r1, r7
 80016e4:	beab      	bkpt	0x00ab
 80016e6:	4606      	mov	r6, r0
 80016e8:	4630      	mov	r0, r6
 80016ea:	f7ff ff97 	bl	800161c <checkerror>
 80016ee:	1c43      	adds	r3, r0, #1
 80016f0:	d0d0      	beq.n	8001694 <_swilseek+0x16>
 80016f2:	4404      	add	r4, r0
 80016f4:	e7de      	b.n	80016b4 <_swilseek+0x36>

080016f6 <_lseek>:
 80016f6:	f7ff bfc2 	b.w	800167e <_swilseek>

080016fa <_swiwrite>:
 80016fa:	b530      	push	{r4, r5, lr}
 80016fc:	b085      	sub	sp, #20
 80016fe:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001702:	9203      	str	r2, [sp, #12]
 8001704:	2405      	movs	r4, #5
 8001706:	ad01      	add	r5, sp, #4
 8001708:	4620      	mov	r0, r4
 800170a:	4629      	mov	r1, r5
 800170c:	beab      	bkpt	0x00ab
 800170e:	4604      	mov	r4, r0
 8001710:	4620      	mov	r0, r4
 8001712:	f7ff ff83 	bl	800161c <checkerror>
 8001716:	b005      	add	sp, #20
 8001718:	bd30      	pop	{r4, r5, pc}

0800171a <_write>:
 800171a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800171c:	4615      	mov	r5, r2
 800171e:	9101      	str	r1, [sp, #4]
 8001720:	f7ff ff54 	bl	80015cc <findslot>
 8001724:	9901      	ldr	r1, [sp, #4]
 8001726:	4604      	mov	r4, r0
 8001728:	b930      	cbnz	r0, 8001738 <_write+0x1e>
 800172a:	f001 f8a1 	bl	8002870 <__errno>
 800172e:	2309      	movs	r3, #9
 8001730:	6003      	str	r3, [r0, #0]
 8001732:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001736:	e012      	b.n	800175e <_write+0x44>
 8001738:	6800      	ldr	r0, [r0, #0]
 800173a:	462a      	mov	r2, r5
 800173c:	f7ff ffdd 	bl	80016fa <_swiwrite>
 8001740:	2800      	cmp	r0, #0
 8001742:	dbf6      	blt.n	8001732 <_write+0x18>
 8001744:	6862      	ldr	r2, [r4, #4]
 8001746:	1a2b      	subs	r3, r5, r0
 8001748:	441a      	add	r2, r3
 800174a:	42a8      	cmp	r0, r5
 800174c:	6062      	str	r2, [r4, #4]
 800174e:	d105      	bne.n	800175c <_write+0x42>
 8001750:	2000      	movs	r0, #0
 8001752:	b003      	add	sp, #12
 8001754:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001758:	f7ff bf52 	b.w	8001600 <error>
 800175c:	4618      	mov	r0, r3
 800175e:	b003      	add	sp, #12
 8001760:	bd30      	pop	{r4, r5, pc}

08001762 <_swiclose>:
 8001762:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001764:	2402      	movs	r4, #2
 8001766:	9001      	str	r0, [sp, #4]
 8001768:	ad01      	add	r5, sp, #4
 800176a:	4620      	mov	r0, r4
 800176c:	4629      	mov	r1, r5
 800176e:	beab      	bkpt	0x00ab
 8001770:	4604      	mov	r4, r0
 8001772:	4620      	mov	r0, r4
 8001774:	f7ff ff52 	bl	800161c <checkerror>
 8001778:	b003      	add	sp, #12
 800177a:	bd30      	pop	{r4, r5, pc}

0800177c <_close>:
 800177c:	b538      	push	{r3, r4, r5, lr}
 800177e:	4605      	mov	r5, r0
 8001780:	f7ff ff24 	bl	80015cc <findslot>
 8001784:	4604      	mov	r4, r0
 8001786:	b930      	cbnz	r0, 8001796 <_close+0x1a>
 8001788:	f001 f872 	bl	8002870 <__errno>
 800178c:	2309      	movs	r3, #9
 800178e:	6003      	str	r3, [r0, #0]
 8001790:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001794:	bd38      	pop	{r3, r4, r5, pc}
 8001796:	3d01      	subs	r5, #1
 8001798:	2d01      	cmp	r5, #1
 800179a:	d809      	bhi.n	80017b0 <_close+0x34>
 800179c:	4b09      	ldr	r3, [pc, #36]	; (80017c4 <_close+0x48>)
 800179e:	689a      	ldr	r2, [r3, #8]
 80017a0:	691b      	ldr	r3, [r3, #16]
 80017a2:	429a      	cmp	r2, r3
 80017a4:	d104      	bne.n	80017b0 <_close+0x34>
 80017a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80017aa:	6003      	str	r3, [r0, #0]
 80017ac:	2000      	movs	r0, #0
 80017ae:	e7f1      	b.n	8001794 <_close+0x18>
 80017b0:	6820      	ldr	r0, [r4, #0]
 80017b2:	f7ff ffd6 	bl	8001762 <_swiclose>
 80017b6:	2800      	cmp	r0, #0
 80017b8:	d1ec      	bne.n	8001794 <_close+0x18>
 80017ba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80017be:	6023      	str	r3, [r4, #0]
 80017c0:	e7e8      	b.n	8001794 <_close+0x18>
 80017c2:	bf00      	nop
 80017c4:	2000021c 	.word	0x2000021c

080017c8 <_getpid>:
 80017c8:	2001      	movs	r0, #1
 80017ca:	4770      	bx	lr

080017cc <_swistat>:
 80017cc:	b570      	push	{r4, r5, r6, lr}
 80017ce:	460c      	mov	r4, r1
 80017d0:	f7ff fefc 	bl	80015cc <findslot>
 80017d4:	4605      	mov	r5, r0
 80017d6:	b930      	cbnz	r0, 80017e6 <_swistat+0x1a>
 80017d8:	f001 f84a 	bl	8002870 <__errno>
 80017dc:	2309      	movs	r3, #9
 80017de:	6003      	str	r3, [r0, #0]
 80017e0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80017e4:	bd70      	pop	{r4, r5, r6, pc}
 80017e6:	6863      	ldr	r3, [r4, #4]
 80017e8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80017ec:	6063      	str	r3, [r4, #4]
 80017ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80017f2:	64a3      	str	r3, [r4, #72]	; 0x48
 80017f4:	260c      	movs	r6, #12
 80017f6:	4630      	mov	r0, r6
 80017f8:	4629      	mov	r1, r5
 80017fa:	beab      	bkpt	0x00ab
 80017fc:	4605      	mov	r5, r0
 80017fe:	4628      	mov	r0, r5
 8001800:	f7ff ff0c 	bl	800161c <checkerror>
 8001804:	1c43      	adds	r3, r0, #1
 8001806:	bf1c      	itt	ne
 8001808:	6120      	strne	r0, [r4, #16]
 800180a:	2000      	movne	r0, #0
 800180c:	e7ea      	b.n	80017e4 <_swistat+0x18>

0800180e <_fstat>:
 800180e:	460b      	mov	r3, r1
 8001810:	b510      	push	{r4, lr}
 8001812:	2100      	movs	r1, #0
 8001814:	4604      	mov	r4, r0
 8001816:	2258      	movs	r2, #88	; 0x58
 8001818:	4618      	mov	r0, r3
 800181a:	f000 ffd7 	bl	80027cc <memset>
 800181e:	4601      	mov	r1, r0
 8001820:	4620      	mov	r0, r4
 8001822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001826:	f7ff bfd1 	b.w	80017cc <_swistat>

0800182a <_stat>:
 800182a:	b538      	push	{r3, r4, r5, lr}
 800182c:	460d      	mov	r5, r1
 800182e:	4604      	mov	r4, r0
 8001830:	2258      	movs	r2, #88	; 0x58
 8001832:	2100      	movs	r1, #0
 8001834:	4628      	mov	r0, r5
 8001836:	f000 ffc9 	bl	80027cc <memset>
 800183a:	4620      	mov	r0, r4
 800183c:	2100      	movs	r1, #0
 800183e:	f000 f811 	bl	8001864 <_swiopen>
 8001842:	1c43      	adds	r3, r0, #1
 8001844:	4604      	mov	r4, r0
 8001846:	d00b      	beq.n	8001860 <_stat+0x36>
 8001848:	686b      	ldr	r3, [r5, #4]
 800184a:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800184e:	606b      	str	r3, [r5, #4]
 8001850:	4629      	mov	r1, r5
 8001852:	f7ff ffbb 	bl	80017cc <_swistat>
 8001856:	4605      	mov	r5, r0
 8001858:	4620      	mov	r0, r4
 800185a:	f7ff ff8f 	bl	800177c <_close>
 800185e:	462c      	mov	r4, r5
 8001860:	4620      	mov	r0, r4
 8001862:	bd38      	pop	{r3, r4, r5, pc}

08001864 <_swiopen>:
 8001864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001868:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8001914 <_swiopen+0xb0>
 800186c:	b097      	sub	sp, #92	; 0x5c
 800186e:	4607      	mov	r7, r0
 8001870:	460e      	mov	r6, r1
 8001872:	2500      	movs	r5, #0
 8001874:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 8001878:	1c61      	adds	r1, r4, #1
 800187a:	d037      	beq.n	80018ec <_swiopen+0x88>
 800187c:	3501      	adds	r5, #1
 800187e:	2d14      	cmp	r5, #20
 8001880:	d1f8      	bne.n	8001874 <_swiopen+0x10>
 8001882:	f000 fff5 	bl	8002870 <__errno>
 8001886:	2318      	movs	r3, #24
 8001888:	6003      	str	r3, [r0, #0]
 800188a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800188e:	e03d      	b.n	800190c <_swiopen+0xa8>
 8001890:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8001894:	f240 6301 	movw	r3, #1537	; 0x601
 8001898:	07b2      	lsls	r2, r6, #30
 800189a:	bf48      	it	mi
 800189c:	f044 0402 	orrmi.w	r4, r4, #2
 80018a0:	421e      	tst	r6, r3
 80018a2:	bf18      	it	ne
 80018a4:	f044 0404 	orrne.w	r4, r4, #4
 80018a8:	0733      	lsls	r3, r6, #28
 80018aa:	bf48      	it	mi
 80018ac:	f024 0404 	bicmi.w	r4, r4, #4
 80018b0:	4638      	mov	r0, r7
 80018b2:	bf48      	it	mi
 80018b4:	f044 0408 	orrmi.w	r4, r4, #8
 80018b8:	9700      	str	r7, [sp, #0]
 80018ba:	f7fe fcd9 	bl	8000270 <strlen>
 80018be:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80018c2:	2401      	movs	r4, #1
 80018c4:	4620      	mov	r0, r4
 80018c6:	4649      	mov	r1, r9
 80018c8:	beab      	bkpt	0x00ab
 80018ca:	4604      	mov	r4, r0
 80018cc:	2c00      	cmp	r4, #0
 80018ce:	db08      	blt.n	80018e2 <_swiopen+0x7e>
 80018d0:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 80018d4:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 80018d8:	2300      	movs	r3, #0
 80018da:	f8c8 3004 	str.w	r3, [r8, #4]
 80018de:	462c      	mov	r4, r5
 80018e0:	e014      	b.n	800190c <_swiopen+0xa8>
 80018e2:	4620      	mov	r0, r4
 80018e4:	f7ff fe8c 	bl	8001600 <error>
 80018e8:	4604      	mov	r4, r0
 80018ea:	e00f      	b.n	800190c <_swiopen+0xa8>
 80018ec:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 80018f0:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 80018f4:	46e9      	mov	r9, sp
 80018f6:	d1cb      	bne.n	8001890 <_swiopen+0x2c>
 80018f8:	4649      	mov	r1, r9
 80018fa:	4638      	mov	r0, r7
 80018fc:	f7ff ff95 	bl	800182a <_stat>
 8001900:	3001      	adds	r0, #1
 8001902:	d0c5      	beq.n	8001890 <_swiopen+0x2c>
 8001904:	f000 ffb4 	bl	8002870 <__errno>
 8001908:	2311      	movs	r3, #17
 800190a:	6003      	str	r3, [r0, #0]
 800190c:	4620      	mov	r0, r4
 800190e:	b017      	add	sp, #92	; 0x5c
 8001910:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001914:	2000021c 	.word	0x2000021c

08001918 <_get_semihosting_exts>:
 8001918:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800191c:	4606      	mov	r6, r0
 800191e:	460f      	mov	r7, r1
 8001920:	482a      	ldr	r0, [pc, #168]	; (80019cc <_get_semihosting_exts+0xb4>)
 8001922:	2100      	movs	r1, #0
 8001924:	4615      	mov	r5, r2
 8001926:	f7ff ff9d 	bl	8001864 <_swiopen>
 800192a:	462a      	mov	r2, r5
 800192c:	4604      	mov	r4, r0
 800192e:	2100      	movs	r1, #0
 8001930:	4630      	mov	r0, r6
 8001932:	f000 ff4b 	bl	80027cc <memset>
 8001936:	1c63      	adds	r3, r4, #1
 8001938:	d016      	beq.n	8001968 <_get_semihosting_exts+0x50>
 800193a:	4620      	mov	r0, r4
 800193c:	f7ff fe46 	bl	80015cc <findslot>
 8001940:	f04f 080c 	mov.w	r8, #12
 8001944:	4681      	mov	r9, r0
 8001946:	4640      	mov	r0, r8
 8001948:	4649      	mov	r1, r9
 800194a:	beab      	bkpt	0x00ab
 800194c:	4680      	mov	r8, r0
 800194e:	4640      	mov	r0, r8
 8001950:	f7ff fe64 	bl	800161c <checkerror>
 8001954:	2803      	cmp	r0, #3
 8001956:	dd02      	ble.n	800195e <_get_semihosting_exts+0x46>
 8001958:	1ec3      	subs	r3, r0, #3
 800195a:	42ab      	cmp	r3, r5
 800195c:	dc08      	bgt.n	8001970 <_get_semihosting_exts+0x58>
 800195e:	4620      	mov	r0, r4
 8001960:	f7ff ff0c 	bl	800177c <_close>
 8001964:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001968:	4620      	mov	r0, r4
 800196a:	b003      	add	sp, #12
 800196c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001970:	2204      	movs	r2, #4
 8001972:	eb0d 0102 	add.w	r1, sp, r2
 8001976:	4620      	mov	r0, r4
 8001978:	f7ff fe65 	bl	8001646 <_read>
 800197c:	2803      	cmp	r0, #3
 800197e:	ddee      	ble.n	800195e <_get_semihosting_exts+0x46>
 8001980:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001984:	2b53      	cmp	r3, #83	; 0x53
 8001986:	d1ea      	bne.n	800195e <_get_semihosting_exts+0x46>
 8001988:	f89d 3005 	ldrb.w	r3, [sp, #5]
 800198c:	2b48      	cmp	r3, #72	; 0x48
 800198e:	d1e6      	bne.n	800195e <_get_semihosting_exts+0x46>
 8001990:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001994:	2b46      	cmp	r3, #70	; 0x46
 8001996:	d1e2      	bne.n	800195e <_get_semihosting_exts+0x46>
 8001998:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800199c:	2b42      	cmp	r3, #66	; 0x42
 800199e:	d1de      	bne.n	800195e <_get_semihosting_exts+0x46>
 80019a0:	2201      	movs	r2, #1
 80019a2:	4639      	mov	r1, r7
 80019a4:	4620      	mov	r0, r4
 80019a6:	f7ff fe6a 	bl	800167e <_swilseek>
 80019aa:	2800      	cmp	r0, #0
 80019ac:	dbd7      	blt.n	800195e <_get_semihosting_exts+0x46>
 80019ae:	462a      	mov	r2, r5
 80019b0:	4631      	mov	r1, r6
 80019b2:	4620      	mov	r0, r4
 80019b4:	f7ff fe47 	bl	8001646 <_read>
 80019b8:	4605      	mov	r5, r0
 80019ba:	4620      	mov	r0, r4
 80019bc:	f7ff fede 	bl	800177c <_close>
 80019c0:	4628      	mov	r0, r5
 80019c2:	f7ff fe2b 	bl	800161c <checkerror>
 80019c6:	4604      	mov	r4, r0
 80019c8:	e7ce      	b.n	8001968 <_get_semihosting_exts+0x50>
 80019ca:	bf00      	nop
 80019cc:	080045d7 	.word	0x080045d7

080019d0 <initialise_semihosting_exts>:
 80019d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80019d2:	4d0a      	ldr	r5, [pc, #40]	; (80019fc <initialise_semihosting_exts+0x2c>)
 80019d4:	4c0a      	ldr	r4, [pc, #40]	; (8001a00 <initialise_semihosting_exts+0x30>)
 80019d6:	2100      	movs	r1, #0
 80019d8:	2201      	movs	r2, #1
 80019da:	a801      	add	r0, sp, #4
 80019dc:	6029      	str	r1, [r5, #0]
 80019de:	6022      	str	r2, [r4, #0]
 80019e0:	f7ff ff9a 	bl	8001918 <_get_semihosting_exts>
 80019e4:	2800      	cmp	r0, #0
 80019e6:	dd07      	ble.n	80019f8 <initialise_semihosting_exts+0x28>
 80019e8:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80019ec:	f003 0201 	and.w	r2, r3, #1
 80019f0:	f003 0302 	and.w	r3, r3, #2
 80019f4:	602a      	str	r2, [r5, #0]
 80019f6:	6023      	str	r3, [r4, #0]
 80019f8:	b003      	add	sp, #12
 80019fa:	bd30      	pop	{r4, r5, pc}
 80019fc:	2000000c 	.word	0x2000000c
 8001a00:	20000010 	.word	0x20000010

08001a04 <_has_ext_stdout_stderr>:
 8001a04:	b510      	push	{r4, lr}
 8001a06:	4c04      	ldr	r4, [pc, #16]	; (8001a18 <_has_ext_stdout_stderr+0x14>)
 8001a08:	6823      	ldr	r3, [r4, #0]
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	da01      	bge.n	8001a12 <_has_ext_stdout_stderr+0xe>
 8001a0e:	f7ff ffdf 	bl	80019d0 <initialise_semihosting_exts>
 8001a12:	6820      	ldr	r0, [r4, #0]
 8001a14:	bd10      	pop	{r4, pc}
 8001a16:	bf00      	nop
 8001a18:	20000010 	.word	0x20000010

08001a1c <initialise_monitor_handles>:
 8001a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001a20:	b085      	sub	sp, #20
 8001a22:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8001ad4 <initialise_monitor_handles+0xb8>
 8001a26:	f8cd 9004 	str.w	r9, [sp, #4]
 8001a2a:	2303      	movs	r3, #3
 8001a2c:	2400      	movs	r4, #0
 8001a2e:	9303      	str	r3, [sp, #12]
 8001a30:	af01      	add	r7, sp, #4
 8001a32:	9402      	str	r4, [sp, #8]
 8001a34:	2501      	movs	r5, #1
 8001a36:	4628      	mov	r0, r5
 8001a38:	4639      	mov	r1, r7
 8001a3a:	beab      	bkpt	0x00ab
 8001a3c:	4605      	mov	r5, r0
 8001a3e:	f8df 8098 	ldr.w	r8, [pc, #152]	; 8001ad8 <initialise_monitor_handles+0xbc>
 8001a42:	4623      	mov	r3, r4
 8001a44:	4c20      	ldr	r4, [pc, #128]	; (8001ac8 <initialise_monitor_handles+0xac>)
 8001a46:	f8c8 5000 	str.w	r5, [r8]
 8001a4a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001a4e:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 8001a52:	3301      	adds	r3, #1
 8001a54:	2b14      	cmp	r3, #20
 8001a56:	d1fa      	bne.n	8001a4e <initialise_monitor_handles+0x32>
 8001a58:	f7ff ffd4 	bl	8001a04 <_has_ext_stdout_stderr>
 8001a5c:	4d1b      	ldr	r5, [pc, #108]	; (8001acc <initialise_monitor_handles+0xb0>)
 8001a5e:	b1d0      	cbz	r0, 8001a96 <initialise_monitor_handles+0x7a>
 8001a60:	f04f 0a03 	mov.w	sl, #3
 8001a64:	2304      	movs	r3, #4
 8001a66:	f8cd 9004 	str.w	r9, [sp, #4]
 8001a6a:	2601      	movs	r6, #1
 8001a6c:	f8cd a00c 	str.w	sl, [sp, #12]
 8001a70:	9302      	str	r3, [sp, #8]
 8001a72:	4630      	mov	r0, r6
 8001a74:	4639      	mov	r1, r7
 8001a76:	beab      	bkpt	0x00ab
 8001a78:	4683      	mov	fp, r0
 8001a7a:	4b15      	ldr	r3, [pc, #84]	; (8001ad0 <initialise_monitor_handles+0xb4>)
 8001a7c:	f8cd 9004 	str.w	r9, [sp, #4]
 8001a80:	f8c3 b000 	str.w	fp, [r3]
 8001a84:	2308      	movs	r3, #8
 8001a86:	f8cd a00c 	str.w	sl, [sp, #12]
 8001a8a:	9302      	str	r3, [sp, #8]
 8001a8c:	4630      	mov	r0, r6
 8001a8e:	4639      	mov	r1, r7
 8001a90:	beab      	bkpt	0x00ab
 8001a92:	4606      	mov	r6, r0
 8001a94:	602e      	str	r6, [r5, #0]
 8001a96:	682b      	ldr	r3, [r5, #0]
 8001a98:	3301      	adds	r3, #1
 8001a9a:	bf02      	ittt	eq
 8001a9c:	4b0c      	ldreq	r3, [pc, #48]	; (8001ad0 <initialise_monitor_handles+0xb4>)
 8001a9e:	681b      	ldreq	r3, [r3, #0]
 8001aa0:	602b      	streq	r3, [r5, #0]
 8001aa2:	2600      	movs	r6, #0
 8001aa4:	f8d8 3000 	ldr.w	r3, [r8]
 8001aa8:	6023      	str	r3, [r4, #0]
 8001aaa:	6066      	str	r6, [r4, #4]
 8001aac:	f7ff ffaa 	bl	8001a04 <_has_ext_stdout_stderr>
 8001ab0:	b130      	cbz	r0, 8001ac0 <initialise_monitor_handles+0xa4>
 8001ab2:	4b07      	ldr	r3, [pc, #28]	; (8001ad0 <initialise_monitor_handles+0xb4>)
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001aba:	682b      	ldr	r3, [r5, #0]
 8001abc:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8001ac0:	b005      	add	sp, #20
 8001ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001ac6:	bf00      	nop
 8001ac8:	2000021c 	.word	0x2000021c
 8001acc:	20000210 	.word	0x20000210
 8001ad0:	20000218 	.word	0x20000218
 8001ad4:	080045ed 	.word	0x080045ed
 8001ad8:	20000214 	.word	0x20000214

08001adc <_isatty>:
 8001adc:	b570      	push	{r4, r5, r6, lr}
 8001ade:	f7ff fd75 	bl	80015cc <findslot>
 8001ae2:	2509      	movs	r5, #9
 8001ae4:	4604      	mov	r4, r0
 8001ae6:	b920      	cbnz	r0, 8001af2 <_isatty+0x16>
 8001ae8:	f000 fec2 	bl	8002870 <__errno>
 8001aec:	6005      	str	r5, [r0, #0]
 8001aee:	4620      	mov	r0, r4
 8001af0:	bd70      	pop	{r4, r5, r6, pc}
 8001af2:	4628      	mov	r0, r5
 8001af4:	4621      	mov	r1, r4
 8001af6:	beab      	bkpt	0x00ab
 8001af8:	4604      	mov	r4, r0
 8001afa:	2c01      	cmp	r4, #1
 8001afc:	d0f7      	beq.n	8001aee <_isatty+0x12>
 8001afe:	f000 feb7 	bl	8002870 <__errno>
 8001b02:	2400      	movs	r4, #0
 8001b04:	4605      	mov	r5, r0
 8001b06:	2613      	movs	r6, #19
 8001b08:	4630      	mov	r0, r6
 8001b0a:	4621      	mov	r1, r4
 8001b0c:	beab      	bkpt	0x00ab
 8001b0e:	4606      	mov	r6, r0
 8001b10:	602e      	str	r6, [r5, #0]
 8001b12:	e7ec      	b.n	8001aee <_isatty+0x12>

08001b14 <__cvt>:
 8001b14:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b18:	ec55 4b10 	vmov	r4, r5, d0
 8001b1c:	2d00      	cmp	r5, #0
 8001b1e:	460e      	mov	r6, r1
 8001b20:	4619      	mov	r1, r3
 8001b22:	462b      	mov	r3, r5
 8001b24:	bfbb      	ittet	lt
 8001b26:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001b2a:	461d      	movlt	r5, r3
 8001b2c:	2300      	movge	r3, #0
 8001b2e:	232d      	movlt	r3, #45	; 0x2d
 8001b30:	700b      	strb	r3, [r1, #0]
 8001b32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001b34:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001b38:	4691      	mov	r9, r2
 8001b3a:	f023 0820 	bic.w	r8, r3, #32
 8001b3e:	bfbc      	itt	lt
 8001b40:	4622      	movlt	r2, r4
 8001b42:	4614      	movlt	r4, r2
 8001b44:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001b48:	d005      	beq.n	8001b56 <__cvt+0x42>
 8001b4a:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001b4e:	d100      	bne.n	8001b52 <__cvt+0x3e>
 8001b50:	3601      	adds	r6, #1
 8001b52:	2102      	movs	r1, #2
 8001b54:	e000      	b.n	8001b58 <__cvt+0x44>
 8001b56:	2103      	movs	r1, #3
 8001b58:	ab03      	add	r3, sp, #12
 8001b5a:	9301      	str	r3, [sp, #4]
 8001b5c:	ab02      	add	r3, sp, #8
 8001b5e:	9300      	str	r3, [sp, #0]
 8001b60:	ec45 4b10 	vmov	d0, r4, r5
 8001b64:	4653      	mov	r3, sl
 8001b66:	4632      	mov	r2, r6
 8001b68:	f000 ff62 	bl	8002a30 <_dtoa_r>
 8001b6c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001b70:	4607      	mov	r7, r0
 8001b72:	d102      	bne.n	8001b7a <__cvt+0x66>
 8001b74:	f019 0f01 	tst.w	r9, #1
 8001b78:	d022      	beq.n	8001bc0 <__cvt+0xac>
 8001b7a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001b7e:	eb07 0906 	add.w	r9, r7, r6
 8001b82:	d110      	bne.n	8001ba6 <__cvt+0x92>
 8001b84:	783b      	ldrb	r3, [r7, #0]
 8001b86:	2b30      	cmp	r3, #48	; 0x30
 8001b88:	d10a      	bne.n	8001ba0 <__cvt+0x8c>
 8001b8a:	2200      	movs	r2, #0
 8001b8c:	2300      	movs	r3, #0
 8001b8e:	4620      	mov	r0, r4
 8001b90:	4629      	mov	r1, r5
 8001b92:	f7fe ff99 	bl	8000ac8 <__aeabi_dcmpeq>
 8001b96:	b918      	cbnz	r0, 8001ba0 <__cvt+0x8c>
 8001b98:	f1c6 0601 	rsb	r6, r6, #1
 8001b9c:	f8ca 6000 	str.w	r6, [sl]
 8001ba0:	f8da 3000 	ldr.w	r3, [sl]
 8001ba4:	4499      	add	r9, r3
 8001ba6:	2200      	movs	r2, #0
 8001ba8:	2300      	movs	r3, #0
 8001baa:	4620      	mov	r0, r4
 8001bac:	4629      	mov	r1, r5
 8001bae:	f7fe ff8b 	bl	8000ac8 <__aeabi_dcmpeq>
 8001bb2:	b108      	cbz	r0, 8001bb8 <__cvt+0xa4>
 8001bb4:	f8cd 900c 	str.w	r9, [sp, #12]
 8001bb8:	2230      	movs	r2, #48	; 0x30
 8001bba:	9b03      	ldr	r3, [sp, #12]
 8001bbc:	454b      	cmp	r3, r9
 8001bbe:	d307      	bcc.n	8001bd0 <__cvt+0xbc>
 8001bc0:	9b03      	ldr	r3, [sp, #12]
 8001bc2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001bc4:	1bdb      	subs	r3, r3, r7
 8001bc6:	4638      	mov	r0, r7
 8001bc8:	6013      	str	r3, [r2, #0]
 8001bca:	b004      	add	sp, #16
 8001bcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001bd0:	1c59      	adds	r1, r3, #1
 8001bd2:	9103      	str	r1, [sp, #12]
 8001bd4:	701a      	strb	r2, [r3, #0]
 8001bd6:	e7f0      	b.n	8001bba <__cvt+0xa6>

08001bd8 <__exponent>:
 8001bd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001bda:	4603      	mov	r3, r0
 8001bdc:	2900      	cmp	r1, #0
 8001bde:	bfb8      	it	lt
 8001be0:	4249      	neglt	r1, r1
 8001be2:	f803 2b02 	strb.w	r2, [r3], #2
 8001be6:	bfb4      	ite	lt
 8001be8:	222d      	movlt	r2, #45	; 0x2d
 8001bea:	222b      	movge	r2, #43	; 0x2b
 8001bec:	2909      	cmp	r1, #9
 8001bee:	7042      	strb	r2, [r0, #1]
 8001bf0:	dd2a      	ble.n	8001c48 <__exponent+0x70>
 8001bf2:	f10d 0207 	add.w	r2, sp, #7
 8001bf6:	4617      	mov	r7, r2
 8001bf8:	260a      	movs	r6, #10
 8001bfa:	4694      	mov	ip, r2
 8001bfc:	fb91 f5f6 	sdiv	r5, r1, r6
 8001c00:	fb06 1415 	mls	r4, r6, r5, r1
 8001c04:	3430      	adds	r4, #48	; 0x30
 8001c06:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8001c0a:	460c      	mov	r4, r1
 8001c0c:	2c63      	cmp	r4, #99	; 0x63
 8001c0e:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8001c12:	4629      	mov	r1, r5
 8001c14:	dcf1      	bgt.n	8001bfa <__exponent+0x22>
 8001c16:	3130      	adds	r1, #48	; 0x30
 8001c18:	f1ac 0402 	sub.w	r4, ip, #2
 8001c1c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001c20:	1c41      	adds	r1, r0, #1
 8001c22:	4622      	mov	r2, r4
 8001c24:	42ba      	cmp	r2, r7
 8001c26:	d30a      	bcc.n	8001c3e <__exponent+0x66>
 8001c28:	f10d 0209 	add.w	r2, sp, #9
 8001c2c:	eba2 020c 	sub.w	r2, r2, ip
 8001c30:	42bc      	cmp	r4, r7
 8001c32:	bf88      	it	hi
 8001c34:	2200      	movhi	r2, #0
 8001c36:	4413      	add	r3, r2
 8001c38:	1a18      	subs	r0, r3, r0
 8001c3a:	b003      	add	sp, #12
 8001c3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c3e:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001c42:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001c46:	e7ed      	b.n	8001c24 <__exponent+0x4c>
 8001c48:	2330      	movs	r3, #48	; 0x30
 8001c4a:	3130      	adds	r1, #48	; 0x30
 8001c4c:	7083      	strb	r3, [r0, #2]
 8001c4e:	70c1      	strb	r1, [r0, #3]
 8001c50:	1d03      	adds	r3, r0, #4
 8001c52:	e7f1      	b.n	8001c38 <__exponent+0x60>

08001c54 <_printf_float>:
 8001c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c58:	ed2d 8b02 	vpush	{d8}
 8001c5c:	b08d      	sub	sp, #52	; 0x34
 8001c5e:	460c      	mov	r4, r1
 8001c60:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001c64:	4616      	mov	r6, r2
 8001c66:	461f      	mov	r7, r3
 8001c68:	4605      	mov	r5, r0
 8001c6a:	f000 fdb7 	bl	80027dc <_localeconv_r>
 8001c6e:	f8d0 a000 	ldr.w	sl, [r0]
 8001c72:	4650      	mov	r0, sl
 8001c74:	f7fe fafc 	bl	8000270 <strlen>
 8001c78:	2300      	movs	r3, #0
 8001c7a:	930a      	str	r3, [sp, #40]	; 0x28
 8001c7c:	6823      	ldr	r3, [r4, #0]
 8001c7e:	9305      	str	r3, [sp, #20]
 8001c80:	f8d8 3000 	ldr.w	r3, [r8]
 8001c84:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001c88:	3307      	adds	r3, #7
 8001c8a:	f023 0307 	bic.w	r3, r3, #7
 8001c8e:	f103 0208 	add.w	r2, r3, #8
 8001c92:	f8c8 2000 	str.w	r2, [r8]
 8001c96:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001c9a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001c9e:	9307      	str	r3, [sp, #28]
 8001ca0:	f8cd 8018 	str.w	r8, [sp, #24]
 8001ca4:	ee08 0a10 	vmov	s16, r0
 8001ca8:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001cac:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001cb0:	4b9e      	ldr	r3, [pc, #632]	; (8001f2c <_printf_float+0x2d8>)
 8001cb2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001cb6:	f7fe ff39 	bl	8000b2c <__aeabi_dcmpun>
 8001cba:	bb88      	cbnz	r0, 8001d20 <_printf_float+0xcc>
 8001cbc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001cc0:	4b9a      	ldr	r3, [pc, #616]	; (8001f2c <_printf_float+0x2d8>)
 8001cc2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001cc6:	f7fe ff13 	bl	8000af0 <__aeabi_dcmple>
 8001cca:	bb48      	cbnz	r0, 8001d20 <_printf_float+0xcc>
 8001ccc:	2200      	movs	r2, #0
 8001cce:	2300      	movs	r3, #0
 8001cd0:	4640      	mov	r0, r8
 8001cd2:	4649      	mov	r1, r9
 8001cd4:	f7fe ff02 	bl	8000adc <__aeabi_dcmplt>
 8001cd8:	b110      	cbz	r0, 8001ce0 <_printf_float+0x8c>
 8001cda:	232d      	movs	r3, #45	; 0x2d
 8001cdc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001ce0:	4a93      	ldr	r2, [pc, #588]	; (8001f30 <_printf_float+0x2dc>)
 8001ce2:	4b94      	ldr	r3, [pc, #592]	; (8001f34 <_printf_float+0x2e0>)
 8001ce4:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8001ce8:	bf94      	ite	ls
 8001cea:	4690      	movls	r8, r2
 8001cec:	4698      	movhi	r8, r3
 8001cee:	2303      	movs	r3, #3
 8001cf0:	6123      	str	r3, [r4, #16]
 8001cf2:	9b05      	ldr	r3, [sp, #20]
 8001cf4:	f023 0304 	bic.w	r3, r3, #4
 8001cf8:	6023      	str	r3, [r4, #0]
 8001cfa:	f04f 0900 	mov.w	r9, #0
 8001cfe:	9700      	str	r7, [sp, #0]
 8001d00:	4633      	mov	r3, r6
 8001d02:	aa0b      	add	r2, sp, #44	; 0x2c
 8001d04:	4621      	mov	r1, r4
 8001d06:	4628      	mov	r0, r5
 8001d08:	f000 f9da 	bl	80020c0 <_printf_common>
 8001d0c:	3001      	adds	r0, #1
 8001d0e:	f040 8090 	bne.w	8001e32 <_printf_float+0x1de>
 8001d12:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d16:	b00d      	add	sp, #52	; 0x34
 8001d18:	ecbd 8b02 	vpop	{d8}
 8001d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d20:	4642      	mov	r2, r8
 8001d22:	464b      	mov	r3, r9
 8001d24:	4640      	mov	r0, r8
 8001d26:	4649      	mov	r1, r9
 8001d28:	f7fe ff00 	bl	8000b2c <__aeabi_dcmpun>
 8001d2c:	b140      	cbz	r0, 8001d40 <_printf_float+0xec>
 8001d2e:	464b      	mov	r3, r9
 8001d30:	2b00      	cmp	r3, #0
 8001d32:	bfbc      	itt	lt
 8001d34:	232d      	movlt	r3, #45	; 0x2d
 8001d36:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001d3a:	4a7f      	ldr	r2, [pc, #508]	; (8001f38 <_printf_float+0x2e4>)
 8001d3c:	4b7f      	ldr	r3, [pc, #508]	; (8001f3c <_printf_float+0x2e8>)
 8001d3e:	e7d1      	b.n	8001ce4 <_printf_float+0x90>
 8001d40:	6863      	ldr	r3, [r4, #4]
 8001d42:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001d46:	9206      	str	r2, [sp, #24]
 8001d48:	1c5a      	adds	r2, r3, #1
 8001d4a:	d13f      	bne.n	8001dcc <_printf_float+0x178>
 8001d4c:	2306      	movs	r3, #6
 8001d4e:	6063      	str	r3, [r4, #4]
 8001d50:	9b05      	ldr	r3, [sp, #20]
 8001d52:	6861      	ldr	r1, [r4, #4]
 8001d54:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001d58:	2300      	movs	r3, #0
 8001d5a:	9303      	str	r3, [sp, #12]
 8001d5c:	ab0a      	add	r3, sp, #40	; 0x28
 8001d5e:	e9cd b301 	strd	fp, r3, [sp, #4]
 8001d62:	ab09      	add	r3, sp, #36	; 0x24
 8001d64:	ec49 8b10 	vmov	d0, r8, r9
 8001d68:	9300      	str	r3, [sp, #0]
 8001d6a:	6022      	str	r2, [r4, #0]
 8001d6c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001d70:	4628      	mov	r0, r5
 8001d72:	f7ff fecf 	bl	8001b14 <__cvt>
 8001d76:	9b06      	ldr	r3, [sp, #24]
 8001d78:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001d7a:	2b47      	cmp	r3, #71	; 0x47
 8001d7c:	4680      	mov	r8, r0
 8001d7e:	d108      	bne.n	8001d92 <_printf_float+0x13e>
 8001d80:	1cc8      	adds	r0, r1, #3
 8001d82:	db02      	blt.n	8001d8a <_printf_float+0x136>
 8001d84:	6863      	ldr	r3, [r4, #4]
 8001d86:	4299      	cmp	r1, r3
 8001d88:	dd41      	ble.n	8001e0e <_printf_float+0x1ba>
 8001d8a:	f1ab 0302 	sub.w	r3, fp, #2
 8001d8e:	fa5f fb83 	uxtb.w	fp, r3
 8001d92:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001d96:	d820      	bhi.n	8001dda <_printf_float+0x186>
 8001d98:	3901      	subs	r1, #1
 8001d9a:	465a      	mov	r2, fp
 8001d9c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001da0:	9109      	str	r1, [sp, #36]	; 0x24
 8001da2:	f7ff ff19 	bl	8001bd8 <__exponent>
 8001da6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001da8:	1813      	adds	r3, r2, r0
 8001daa:	2a01      	cmp	r2, #1
 8001dac:	4681      	mov	r9, r0
 8001dae:	6123      	str	r3, [r4, #16]
 8001db0:	dc02      	bgt.n	8001db8 <_printf_float+0x164>
 8001db2:	6822      	ldr	r2, [r4, #0]
 8001db4:	07d2      	lsls	r2, r2, #31
 8001db6:	d501      	bpl.n	8001dbc <_printf_float+0x168>
 8001db8:	3301      	adds	r3, #1
 8001dba:	6123      	str	r3, [r4, #16]
 8001dbc:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001dc0:	2b00      	cmp	r3, #0
 8001dc2:	d09c      	beq.n	8001cfe <_printf_float+0xaa>
 8001dc4:	232d      	movs	r3, #45	; 0x2d
 8001dc6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001dca:	e798      	b.n	8001cfe <_printf_float+0xaa>
 8001dcc:	9a06      	ldr	r2, [sp, #24]
 8001dce:	2a47      	cmp	r2, #71	; 0x47
 8001dd0:	d1be      	bne.n	8001d50 <_printf_float+0xfc>
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	d1bc      	bne.n	8001d50 <_printf_float+0xfc>
 8001dd6:	2301      	movs	r3, #1
 8001dd8:	e7b9      	b.n	8001d4e <_printf_float+0xfa>
 8001dda:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8001dde:	d118      	bne.n	8001e12 <_printf_float+0x1be>
 8001de0:	2900      	cmp	r1, #0
 8001de2:	6863      	ldr	r3, [r4, #4]
 8001de4:	dd0b      	ble.n	8001dfe <_printf_float+0x1aa>
 8001de6:	6121      	str	r1, [r4, #16]
 8001de8:	b913      	cbnz	r3, 8001df0 <_printf_float+0x19c>
 8001dea:	6822      	ldr	r2, [r4, #0]
 8001dec:	07d0      	lsls	r0, r2, #31
 8001dee:	d502      	bpl.n	8001df6 <_printf_float+0x1a2>
 8001df0:	3301      	adds	r3, #1
 8001df2:	440b      	add	r3, r1
 8001df4:	6123      	str	r3, [r4, #16]
 8001df6:	65a1      	str	r1, [r4, #88]	; 0x58
 8001df8:	f04f 0900 	mov.w	r9, #0
 8001dfc:	e7de      	b.n	8001dbc <_printf_float+0x168>
 8001dfe:	b913      	cbnz	r3, 8001e06 <_printf_float+0x1b2>
 8001e00:	6822      	ldr	r2, [r4, #0]
 8001e02:	07d2      	lsls	r2, r2, #31
 8001e04:	d501      	bpl.n	8001e0a <_printf_float+0x1b6>
 8001e06:	3302      	adds	r3, #2
 8001e08:	e7f4      	b.n	8001df4 <_printf_float+0x1a0>
 8001e0a:	2301      	movs	r3, #1
 8001e0c:	e7f2      	b.n	8001df4 <_printf_float+0x1a0>
 8001e0e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001e12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001e14:	4299      	cmp	r1, r3
 8001e16:	db05      	blt.n	8001e24 <_printf_float+0x1d0>
 8001e18:	6823      	ldr	r3, [r4, #0]
 8001e1a:	6121      	str	r1, [r4, #16]
 8001e1c:	07d8      	lsls	r0, r3, #31
 8001e1e:	d5ea      	bpl.n	8001df6 <_printf_float+0x1a2>
 8001e20:	1c4b      	adds	r3, r1, #1
 8001e22:	e7e7      	b.n	8001df4 <_printf_float+0x1a0>
 8001e24:	2900      	cmp	r1, #0
 8001e26:	bfd4      	ite	le
 8001e28:	f1c1 0202 	rsble	r2, r1, #2
 8001e2c:	2201      	movgt	r2, #1
 8001e2e:	4413      	add	r3, r2
 8001e30:	e7e0      	b.n	8001df4 <_printf_float+0x1a0>
 8001e32:	6823      	ldr	r3, [r4, #0]
 8001e34:	055a      	lsls	r2, r3, #21
 8001e36:	d407      	bmi.n	8001e48 <_printf_float+0x1f4>
 8001e38:	6923      	ldr	r3, [r4, #16]
 8001e3a:	4642      	mov	r2, r8
 8001e3c:	4631      	mov	r1, r6
 8001e3e:	4628      	mov	r0, r5
 8001e40:	47b8      	blx	r7
 8001e42:	3001      	adds	r0, #1
 8001e44:	d12c      	bne.n	8001ea0 <_printf_float+0x24c>
 8001e46:	e764      	b.n	8001d12 <_printf_float+0xbe>
 8001e48:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001e4c:	f240 80e0 	bls.w	8002010 <_printf_float+0x3bc>
 8001e50:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001e54:	2200      	movs	r2, #0
 8001e56:	2300      	movs	r3, #0
 8001e58:	f7fe fe36 	bl	8000ac8 <__aeabi_dcmpeq>
 8001e5c:	2800      	cmp	r0, #0
 8001e5e:	d034      	beq.n	8001eca <_printf_float+0x276>
 8001e60:	4a37      	ldr	r2, [pc, #220]	; (8001f40 <_printf_float+0x2ec>)
 8001e62:	2301      	movs	r3, #1
 8001e64:	4631      	mov	r1, r6
 8001e66:	4628      	mov	r0, r5
 8001e68:	47b8      	blx	r7
 8001e6a:	3001      	adds	r0, #1
 8001e6c:	f43f af51 	beq.w	8001d12 <_printf_float+0xbe>
 8001e70:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e74:	429a      	cmp	r2, r3
 8001e76:	db02      	blt.n	8001e7e <_printf_float+0x22a>
 8001e78:	6823      	ldr	r3, [r4, #0]
 8001e7a:	07d8      	lsls	r0, r3, #31
 8001e7c:	d510      	bpl.n	8001ea0 <_printf_float+0x24c>
 8001e7e:	ee18 3a10 	vmov	r3, s16
 8001e82:	4652      	mov	r2, sl
 8001e84:	4631      	mov	r1, r6
 8001e86:	4628      	mov	r0, r5
 8001e88:	47b8      	blx	r7
 8001e8a:	3001      	adds	r0, #1
 8001e8c:	f43f af41 	beq.w	8001d12 <_printf_float+0xbe>
 8001e90:	f04f 0800 	mov.w	r8, #0
 8001e94:	f104 091a 	add.w	r9, r4, #26
 8001e98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001e9a:	3b01      	subs	r3, #1
 8001e9c:	4543      	cmp	r3, r8
 8001e9e:	dc09      	bgt.n	8001eb4 <_printf_float+0x260>
 8001ea0:	6823      	ldr	r3, [r4, #0]
 8001ea2:	079b      	lsls	r3, r3, #30
 8001ea4:	f100 8107 	bmi.w	80020b6 <_printf_float+0x462>
 8001ea8:	68e0      	ldr	r0, [r4, #12]
 8001eaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001eac:	4298      	cmp	r0, r3
 8001eae:	bfb8      	it	lt
 8001eb0:	4618      	movlt	r0, r3
 8001eb2:	e730      	b.n	8001d16 <_printf_float+0xc2>
 8001eb4:	2301      	movs	r3, #1
 8001eb6:	464a      	mov	r2, r9
 8001eb8:	4631      	mov	r1, r6
 8001eba:	4628      	mov	r0, r5
 8001ebc:	47b8      	blx	r7
 8001ebe:	3001      	adds	r0, #1
 8001ec0:	f43f af27 	beq.w	8001d12 <_printf_float+0xbe>
 8001ec4:	f108 0801 	add.w	r8, r8, #1
 8001ec8:	e7e6      	b.n	8001e98 <_printf_float+0x244>
 8001eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001ecc:	2b00      	cmp	r3, #0
 8001ece:	dc39      	bgt.n	8001f44 <_printf_float+0x2f0>
 8001ed0:	4a1b      	ldr	r2, [pc, #108]	; (8001f40 <_printf_float+0x2ec>)
 8001ed2:	2301      	movs	r3, #1
 8001ed4:	4631      	mov	r1, r6
 8001ed6:	4628      	mov	r0, r5
 8001ed8:	47b8      	blx	r7
 8001eda:	3001      	adds	r0, #1
 8001edc:	f43f af19 	beq.w	8001d12 <_printf_float+0xbe>
 8001ee0:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001ee4:	4313      	orrs	r3, r2
 8001ee6:	d102      	bne.n	8001eee <_printf_float+0x29a>
 8001ee8:	6823      	ldr	r3, [r4, #0]
 8001eea:	07d9      	lsls	r1, r3, #31
 8001eec:	d5d8      	bpl.n	8001ea0 <_printf_float+0x24c>
 8001eee:	ee18 3a10 	vmov	r3, s16
 8001ef2:	4652      	mov	r2, sl
 8001ef4:	4631      	mov	r1, r6
 8001ef6:	4628      	mov	r0, r5
 8001ef8:	47b8      	blx	r7
 8001efa:	3001      	adds	r0, #1
 8001efc:	f43f af09 	beq.w	8001d12 <_printf_float+0xbe>
 8001f00:	f04f 0900 	mov.w	r9, #0
 8001f04:	f104 0a1a 	add.w	sl, r4, #26
 8001f08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001f0a:	425b      	negs	r3, r3
 8001f0c:	454b      	cmp	r3, r9
 8001f0e:	dc01      	bgt.n	8001f14 <_printf_float+0x2c0>
 8001f10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001f12:	e792      	b.n	8001e3a <_printf_float+0x1e6>
 8001f14:	2301      	movs	r3, #1
 8001f16:	4652      	mov	r2, sl
 8001f18:	4631      	mov	r1, r6
 8001f1a:	4628      	mov	r0, r5
 8001f1c:	47b8      	blx	r7
 8001f1e:	3001      	adds	r0, #1
 8001f20:	f43f aef7 	beq.w	8001d12 <_printf_float+0xbe>
 8001f24:	f109 0901 	add.w	r9, r9, #1
 8001f28:	e7ee      	b.n	8001f08 <_printf_float+0x2b4>
 8001f2a:	bf00      	nop
 8001f2c:	7fefffff 	.word	0x7fefffff
 8001f30:	080045f1 	.word	0x080045f1
 8001f34:	080045f5 	.word	0x080045f5
 8001f38:	080045f9 	.word	0x080045f9
 8001f3c:	080045fd 	.word	0x080045fd
 8001f40:	08004601 	.word	0x08004601
 8001f44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001f46:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001f48:	429a      	cmp	r2, r3
 8001f4a:	bfa8      	it	ge
 8001f4c:	461a      	movge	r2, r3
 8001f4e:	2a00      	cmp	r2, #0
 8001f50:	4691      	mov	r9, r2
 8001f52:	dc37      	bgt.n	8001fc4 <_printf_float+0x370>
 8001f54:	f04f 0b00 	mov.w	fp, #0
 8001f58:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f5c:	f104 021a 	add.w	r2, r4, #26
 8001f60:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001f62:	9305      	str	r3, [sp, #20]
 8001f64:	eba3 0309 	sub.w	r3, r3, r9
 8001f68:	455b      	cmp	r3, fp
 8001f6a:	dc33      	bgt.n	8001fd4 <_printf_float+0x380>
 8001f6c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001f70:	429a      	cmp	r2, r3
 8001f72:	db3b      	blt.n	8001fec <_printf_float+0x398>
 8001f74:	6823      	ldr	r3, [r4, #0]
 8001f76:	07da      	lsls	r2, r3, #31
 8001f78:	d438      	bmi.n	8001fec <_printf_float+0x398>
 8001f7a:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001f7e:	eba2 0903 	sub.w	r9, r2, r3
 8001f82:	9b05      	ldr	r3, [sp, #20]
 8001f84:	1ad2      	subs	r2, r2, r3
 8001f86:	4591      	cmp	r9, r2
 8001f88:	bfa8      	it	ge
 8001f8a:	4691      	movge	r9, r2
 8001f8c:	f1b9 0f00 	cmp.w	r9, #0
 8001f90:	dc35      	bgt.n	8001ffe <_printf_float+0x3aa>
 8001f92:	f04f 0800 	mov.w	r8, #0
 8001f96:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f9a:	f104 0a1a 	add.w	sl, r4, #26
 8001f9e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001fa2:	1a9b      	subs	r3, r3, r2
 8001fa4:	eba3 0309 	sub.w	r3, r3, r9
 8001fa8:	4543      	cmp	r3, r8
 8001faa:	f77f af79 	ble.w	8001ea0 <_printf_float+0x24c>
 8001fae:	2301      	movs	r3, #1
 8001fb0:	4652      	mov	r2, sl
 8001fb2:	4631      	mov	r1, r6
 8001fb4:	4628      	mov	r0, r5
 8001fb6:	47b8      	blx	r7
 8001fb8:	3001      	adds	r0, #1
 8001fba:	f43f aeaa 	beq.w	8001d12 <_printf_float+0xbe>
 8001fbe:	f108 0801 	add.w	r8, r8, #1
 8001fc2:	e7ec      	b.n	8001f9e <_printf_float+0x34a>
 8001fc4:	4613      	mov	r3, r2
 8001fc6:	4631      	mov	r1, r6
 8001fc8:	4642      	mov	r2, r8
 8001fca:	4628      	mov	r0, r5
 8001fcc:	47b8      	blx	r7
 8001fce:	3001      	adds	r0, #1
 8001fd0:	d1c0      	bne.n	8001f54 <_printf_float+0x300>
 8001fd2:	e69e      	b.n	8001d12 <_printf_float+0xbe>
 8001fd4:	2301      	movs	r3, #1
 8001fd6:	4631      	mov	r1, r6
 8001fd8:	4628      	mov	r0, r5
 8001fda:	9205      	str	r2, [sp, #20]
 8001fdc:	47b8      	blx	r7
 8001fde:	3001      	adds	r0, #1
 8001fe0:	f43f ae97 	beq.w	8001d12 <_printf_float+0xbe>
 8001fe4:	9a05      	ldr	r2, [sp, #20]
 8001fe6:	f10b 0b01 	add.w	fp, fp, #1
 8001fea:	e7b9      	b.n	8001f60 <_printf_float+0x30c>
 8001fec:	ee18 3a10 	vmov	r3, s16
 8001ff0:	4652      	mov	r2, sl
 8001ff2:	4631      	mov	r1, r6
 8001ff4:	4628      	mov	r0, r5
 8001ff6:	47b8      	blx	r7
 8001ff8:	3001      	adds	r0, #1
 8001ffa:	d1be      	bne.n	8001f7a <_printf_float+0x326>
 8001ffc:	e689      	b.n	8001d12 <_printf_float+0xbe>
 8001ffe:	9a05      	ldr	r2, [sp, #20]
 8002000:	464b      	mov	r3, r9
 8002002:	4442      	add	r2, r8
 8002004:	4631      	mov	r1, r6
 8002006:	4628      	mov	r0, r5
 8002008:	47b8      	blx	r7
 800200a:	3001      	adds	r0, #1
 800200c:	d1c1      	bne.n	8001f92 <_printf_float+0x33e>
 800200e:	e680      	b.n	8001d12 <_printf_float+0xbe>
 8002010:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002012:	2a01      	cmp	r2, #1
 8002014:	dc01      	bgt.n	800201a <_printf_float+0x3c6>
 8002016:	07db      	lsls	r3, r3, #31
 8002018:	d53a      	bpl.n	8002090 <_printf_float+0x43c>
 800201a:	2301      	movs	r3, #1
 800201c:	4642      	mov	r2, r8
 800201e:	4631      	mov	r1, r6
 8002020:	4628      	mov	r0, r5
 8002022:	47b8      	blx	r7
 8002024:	3001      	adds	r0, #1
 8002026:	f43f ae74 	beq.w	8001d12 <_printf_float+0xbe>
 800202a:	ee18 3a10 	vmov	r3, s16
 800202e:	4652      	mov	r2, sl
 8002030:	4631      	mov	r1, r6
 8002032:	4628      	mov	r0, r5
 8002034:	47b8      	blx	r7
 8002036:	3001      	adds	r0, #1
 8002038:	f43f ae6b 	beq.w	8001d12 <_printf_float+0xbe>
 800203c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002040:	2200      	movs	r2, #0
 8002042:	2300      	movs	r3, #0
 8002044:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002048:	f7fe fd3e 	bl	8000ac8 <__aeabi_dcmpeq>
 800204c:	b9d8      	cbnz	r0, 8002086 <_printf_float+0x432>
 800204e:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 8002052:	f108 0201 	add.w	r2, r8, #1
 8002056:	4631      	mov	r1, r6
 8002058:	4628      	mov	r0, r5
 800205a:	47b8      	blx	r7
 800205c:	3001      	adds	r0, #1
 800205e:	d10e      	bne.n	800207e <_printf_float+0x42a>
 8002060:	e657      	b.n	8001d12 <_printf_float+0xbe>
 8002062:	2301      	movs	r3, #1
 8002064:	4652      	mov	r2, sl
 8002066:	4631      	mov	r1, r6
 8002068:	4628      	mov	r0, r5
 800206a:	47b8      	blx	r7
 800206c:	3001      	adds	r0, #1
 800206e:	f43f ae50 	beq.w	8001d12 <_printf_float+0xbe>
 8002072:	f108 0801 	add.w	r8, r8, #1
 8002076:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002078:	3b01      	subs	r3, #1
 800207a:	4543      	cmp	r3, r8
 800207c:	dcf1      	bgt.n	8002062 <_printf_float+0x40e>
 800207e:	464b      	mov	r3, r9
 8002080:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002084:	e6da      	b.n	8001e3c <_printf_float+0x1e8>
 8002086:	f04f 0800 	mov.w	r8, #0
 800208a:	f104 0a1a 	add.w	sl, r4, #26
 800208e:	e7f2      	b.n	8002076 <_printf_float+0x422>
 8002090:	2301      	movs	r3, #1
 8002092:	4642      	mov	r2, r8
 8002094:	e7df      	b.n	8002056 <_printf_float+0x402>
 8002096:	2301      	movs	r3, #1
 8002098:	464a      	mov	r2, r9
 800209a:	4631      	mov	r1, r6
 800209c:	4628      	mov	r0, r5
 800209e:	47b8      	blx	r7
 80020a0:	3001      	adds	r0, #1
 80020a2:	f43f ae36 	beq.w	8001d12 <_printf_float+0xbe>
 80020a6:	f108 0801 	add.w	r8, r8, #1
 80020aa:	68e3      	ldr	r3, [r4, #12]
 80020ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80020ae:	1a5b      	subs	r3, r3, r1
 80020b0:	4543      	cmp	r3, r8
 80020b2:	dcf0      	bgt.n	8002096 <_printf_float+0x442>
 80020b4:	e6f8      	b.n	8001ea8 <_printf_float+0x254>
 80020b6:	f04f 0800 	mov.w	r8, #0
 80020ba:	f104 0919 	add.w	r9, r4, #25
 80020be:	e7f4      	b.n	80020aa <_printf_float+0x456>

080020c0 <_printf_common>:
 80020c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80020c4:	4616      	mov	r6, r2
 80020c6:	4699      	mov	r9, r3
 80020c8:	688a      	ldr	r2, [r1, #8]
 80020ca:	690b      	ldr	r3, [r1, #16]
 80020cc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80020d0:	4293      	cmp	r3, r2
 80020d2:	bfb8      	it	lt
 80020d4:	4613      	movlt	r3, r2
 80020d6:	6033      	str	r3, [r6, #0]
 80020d8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80020dc:	4607      	mov	r7, r0
 80020de:	460c      	mov	r4, r1
 80020e0:	b10a      	cbz	r2, 80020e6 <_printf_common+0x26>
 80020e2:	3301      	adds	r3, #1
 80020e4:	6033      	str	r3, [r6, #0]
 80020e6:	6823      	ldr	r3, [r4, #0]
 80020e8:	0699      	lsls	r1, r3, #26
 80020ea:	bf42      	ittt	mi
 80020ec:	6833      	ldrmi	r3, [r6, #0]
 80020ee:	3302      	addmi	r3, #2
 80020f0:	6033      	strmi	r3, [r6, #0]
 80020f2:	6825      	ldr	r5, [r4, #0]
 80020f4:	f015 0506 	ands.w	r5, r5, #6
 80020f8:	d106      	bne.n	8002108 <_printf_common+0x48>
 80020fa:	f104 0a19 	add.w	sl, r4, #25
 80020fe:	68e3      	ldr	r3, [r4, #12]
 8002100:	6832      	ldr	r2, [r6, #0]
 8002102:	1a9b      	subs	r3, r3, r2
 8002104:	42ab      	cmp	r3, r5
 8002106:	dc26      	bgt.n	8002156 <_printf_common+0x96>
 8002108:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800210c:	1e13      	subs	r3, r2, #0
 800210e:	6822      	ldr	r2, [r4, #0]
 8002110:	bf18      	it	ne
 8002112:	2301      	movne	r3, #1
 8002114:	0692      	lsls	r2, r2, #26
 8002116:	d42b      	bmi.n	8002170 <_printf_common+0xb0>
 8002118:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800211c:	4649      	mov	r1, r9
 800211e:	4638      	mov	r0, r7
 8002120:	47c0      	blx	r8
 8002122:	3001      	adds	r0, #1
 8002124:	d01e      	beq.n	8002164 <_printf_common+0xa4>
 8002126:	6823      	ldr	r3, [r4, #0]
 8002128:	6922      	ldr	r2, [r4, #16]
 800212a:	f003 0306 	and.w	r3, r3, #6
 800212e:	2b04      	cmp	r3, #4
 8002130:	bf02      	ittt	eq
 8002132:	68e5      	ldreq	r5, [r4, #12]
 8002134:	6833      	ldreq	r3, [r6, #0]
 8002136:	1aed      	subeq	r5, r5, r3
 8002138:	68a3      	ldr	r3, [r4, #8]
 800213a:	bf0c      	ite	eq
 800213c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002140:	2500      	movne	r5, #0
 8002142:	4293      	cmp	r3, r2
 8002144:	bfc4      	itt	gt
 8002146:	1a9b      	subgt	r3, r3, r2
 8002148:	18ed      	addgt	r5, r5, r3
 800214a:	2600      	movs	r6, #0
 800214c:	341a      	adds	r4, #26
 800214e:	42b5      	cmp	r5, r6
 8002150:	d11a      	bne.n	8002188 <_printf_common+0xc8>
 8002152:	2000      	movs	r0, #0
 8002154:	e008      	b.n	8002168 <_printf_common+0xa8>
 8002156:	2301      	movs	r3, #1
 8002158:	4652      	mov	r2, sl
 800215a:	4649      	mov	r1, r9
 800215c:	4638      	mov	r0, r7
 800215e:	47c0      	blx	r8
 8002160:	3001      	adds	r0, #1
 8002162:	d103      	bne.n	800216c <_printf_common+0xac>
 8002164:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800216c:	3501      	adds	r5, #1
 800216e:	e7c6      	b.n	80020fe <_printf_common+0x3e>
 8002170:	18e1      	adds	r1, r4, r3
 8002172:	1c5a      	adds	r2, r3, #1
 8002174:	2030      	movs	r0, #48	; 0x30
 8002176:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800217a:	4422      	add	r2, r4
 800217c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002180:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002184:	3302      	adds	r3, #2
 8002186:	e7c7      	b.n	8002118 <_printf_common+0x58>
 8002188:	2301      	movs	r3, #1
 800218a:	4622      	mov	r2, r4
 800218c:	4649      	mov	r1, r9
 800218e:	4638      	mov	r0, r7
 8002190:	47c0      	blx	r8
 8002192:	3001      	adds	r0, #1
 8002194:	d0e6      	beq.n	8002164 <_printf_common+0xa4>
 8002196:	3601      	adds	r6, #1
 8002198:	e7d9      	b.n	800214e <_printf_common+0x8e>
	...

0800219c <_printf_i>:
 800219c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80021a0:	7e0f      	ldrb	r7, [r1, #24]
 80021a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80021a4:	2f78      	cmp	r7, #120	; 0x78
 80021a6:	4691      	mov	r9, r2
 80021a8:	4680      	mov	r8, r0
 80021aa:	460c      	mov	r4, r1
 80021ac:	469a      	mov	sl, r3
 80021ae:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80021b2:	d807      	bhi.n	80021c4 <_printf_i+0x28>
 80021b4:	2f62      	cmp	r7, #98	; 0x62
 80021b6:	d80a      	bhi.n	80021ce <_printf_i+0x32>
 80021b8:	2f00      	cmp	r7, #0
 80021ba:	f000 80d4 	beq.w	8002366 <_printf_i+0x1ca>
 80021be:	2f58      	cmp	r7, #88	; 0x58
 80021c0:	f000 80c0 	beq.w	8002344 <_printf_i+0x1a8>
 80021c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80021c8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80021cc:	e03a      	b.n	8002244 <_printf_i+0xa8>
 80021ce:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80021d2:	2b15      	cmp	r3, #21
 80021d4:	d8f6      	bhi.n	80021c4 <_printf_i+0x28>
 80021d6:	a101      	add	r1, pc, #4	; (adr r1, 80021dc <_printf_i+0x40>)
 80021d8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80021dc:	08002235 	.word	0x08002235
 80021e0:	08002249 	.word	0x08002249
 80021e4:	080021c5 	.word	0x080021c5
 80021e8:	080021c5 	.word	0x080021c5
 80021ec:	080021c5 	.word	0x080021c5
 80021f0:	080021c5 	.word	0x080021c5
 80021f4:	08002249 	.word	0x08002249
 80021f8:	080021c5 	.word	0x080021c5
 80021fc:	080021c5 	.word	0x080021c5
 8002200:	080021c5 	.word	0x080021c5
 8002204:	080021c5 	.word	0x080021c5
 8002208:	0800234d 	.word	0x0800234d
 800220c:	08002275 	.word	0x08002275
 8002210:	08002307 	.word	0x08002307
 8002214:	080021c5 	.word	0x080021c5
 8002218:	080021c5 	.word	0x080021c5
 800221c:	0800236f 	.word	0x0800236f
 8002220:	080021c5 	.word	0x080021c5
 8002224:	08002275 	.word	0x08002275
 8002228:	080021c5 	.word	0x080021c5
 800222c:	080021c5 	.word	0x080021c5
 8002230:	0800230f 	.word	0x0800230f
 8002234:	682b      	ldr	r3, [r5, #0]
 8002236:	1d1a      	adds	r2, r3, #4
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	602a      	str	r2, [r5, #0]
 800223c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002240:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002244:	2301      	movs	r3, #1
 8002246:	e09f      	b.n	8002388 <_printf_i+0x1ec>
 8002248:	6820      	ldr	r0, [r4, #0]
 800224a:	682b      	ldr	r3, [r5, #0]
 800224c:	0607      	lsls	r7, r0, #24
 800224e:	f103 0104 	add.w	r1, r3, #4
 8002252:	6029      	str	r1, [r5, #0]
 8002254:	d501      	bpl.n	800225a <_printf_i+0xbe>
 8002256:	681e      	ldr	r6, [r3, #0]
 8002258:	e003      	b.n	8002262 <_printf_i+0xc6>
 800225a:	0646      	lsls	r6, r0, #25
 800225c:	d5fb      	bpl.n	8002256 <_printf_i+0xba>
 800225e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8002262:	2e00      	cmp	r6, #0
 8002264:	da03      	bge.n	800226e <_printf_i+0xd2>
 8002266:	232d      	movs	r3, #45	; 0x2d
 8002268:	4276      	negs	r6, r6
 800226a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800226e:	485a      	ldr	r0, [pc, #360]	; (80023d8 <_printf_i+0x23c>)
 8002270:	230a      	movs	r3, #10
 8002272:	e012      	b.n	800229a <_printf_i+0xfe>
 8002274:	682b      	ldr	r3, [r5, #0]
 8002276:	6820      	ldr	r0, [r4, #0]
 8002278:	1d19      	adds	r1, r3, #4
 800227a:	6029      	str	r1, [r5, #0]
 800227c:	0605      	lsls	r5, r0, #24
 800227e:	d501      	bpl.n	8002284 <_printf_i+0xe8>
 8002280:	681e      	ldr	r6, [r3, #0]
 8002282:	e002      	b.n	800228a <_printf_i+0xee>
 8002284:	0641      	lsls	r1, r0, #25
 8002286:	d5fb      	bpl.n	8002280 <_printf_i+0xe4>
 8002288:	881e      	ldrh	r6, [r3, #0]
 800228a:	4853      	ldr	r0, [pc, #332]	; (80023d8 <_printf_i+0x23c>)
 800228c:	2f6f      	cmp	r7, #111	; 0x6f
 800228e:	bf0c      	ite	eq
 8002290:	2308      	moveq	r3, #8
 8002292:	230a      	movne	r3, #10
 8002294:	2100      	movs	r1, #0
 8002296:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800229a:	6865      	ldr	r5, [r4, #4]
 800229c:	60a5      	str	r5, [r4, #8]
 800229e:	2d00      	cmp	r5, #0
 80022a0:	bfa2      	ittt	ge
 80022a2:	6821      	ldrge	r1, [r4, #0]
 80022a4:	f021 0104 	bicge.w	r1, r1, #4
 80022a8:	6021      	strge	r1, [r4, #0]
 80022aa:	b90e      	cbnz	r6, 80022b0 <_printf_i+0x114>
 80022ac:	2d00      	cmp	r5, #0
 80022ae:	d04b      	beq.n	8002348 <_printf_i+0x1ac>
 80022b0:	4615      	mov	r5, r2
 80022b2:	fbb6 f1f3 	udiv	r1, r6, r3
 80022b6:	fb03 6711 	mls	r7, r3, r1, r6
 80022ba:	5dc7      	ldrb	r7, [r0, r7]
 80022bc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80022c0:	4637      	mov	r7, r6
 80022c2:	42bb      	cmp	r3, r7
 80022c4:	460e      	mov	r6, r1
 80022c6:	d9f4      	bls.n	80022b2 <_printf_i+0x116>
 80022c8:	2b08      	cmp	r3, #8
 80022ca:	d10b      	bne.n	80022e4 <_printf_i+0x148>
 80022cc:	6823      	ldr	r3, [r4, #0]
 80022ce:	07de      	lsls	r6, r3, #31
 80022d0:	d508      	bpl.n	80022e4 <_printf_i+0x148>
 80022d2:	6923      	ldr	r3, [r4, #16]
 80022d4:	6861      	ldr	r1, [r4, #4]
 80022d6:	4299      	cmp	r1, r3
 80022d8:	bfde      	ittt	le
 80022da:	2330      	movle	r3, #48	; 0x30
 80022dc:	f805 3c01 	strble.w	r3, [r5, #-1]
 80022e0:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80022e4:	1b52      	subs	r2, r2, r5
 80022e6:	6122      	str	r2, [r4, #16]
 80022e8:	f8cd a000 	str.w	sl, [sp]
 80022ec:	464b      	mov	r3, r9
 80022ee:	aa03      	add	r2, sp, #12
 80022f0:	4621      	mov	r1, r4
 80022f2:	4640      	mov	r0, r8
 80022f4:	f7ff fee4 	bl	80020c0 <_printf_common>
 80022f8:	3001      	adds	r0, #1
 80022fa:	d14a      	bne.n	8002392 <_printf_i+0x1f6>
 80022fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002300:	b004      	add	sp, #16
 8002302:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002306:	6823      	ldr	r3, [r4, #0]
 8002308:	f043 0320 	orr.w	r3, r3, #32
 800230c:	6023      	str	r3, [r4, #0]
 800230e:	4833      	ldr	r0, [pc, #204]	; (80023dc <_printf_i+0x240>)
 8002310:	2778      	movs	r7, #120	; 0x78
 8002312:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002316:	6823      	ldr	r3, [r4, #0]
 8002318:	6829      	ldr	r1, [r5, #0]
 800231a:	061f      	lsls	r7, r3, #24
 800231c:	f851 6b04 	ldr.w	r6, [r1], #4
 8002320:	d402      	bmi.n	8002328 <_printf_i+0x18c>
 8002322:	065f      	lsls	r7, r3, #25
 8002324:	bf48      	it	mi
 8002326:	b2b6      	uxthmi	r6, r6
 8002328:	07df      	lsls	r7, r3, #31
 800232a:	bf48      	it	mi
 800232c:	f043 0320 	orrmi.w	r3, r3, #32
 8002330:	6029      	str	r1, [r5, #0]
 8002332:	bf48      	it	mi
 8002334:	6023      	strmi	r3, [r4, #0]
 8002336:	b91e      	cbnz	r6, 8002340 <_printf_i+0x1a4>
 8002338:	6823      	ldr	r3, [r4, #0]
 800233a:	f023 0320 	bic.w	r3, r3, #32
 800233e:	6023      	str	r3, [r4, #0]
 8002340:	2310      	movs	r3, #16
 8002342:	e7a7      	b.n	8002294 <_printf_i+0xf8>
 8002344:	4824      	ldr	r0, [pc, #144]	; (80023d8 <_printf_i+0x23c>)
 8002346:	e7e4      	b.n	8002312 <_printf_i+0x176>
 8002348:	4615      	mov	r5, r2
 800234a:	e7bd      	b.n	80022c8 <_printf_i+0x12c>
 800234c:	682b      	ldr	r3, [r5, #0]
 800234e:	6826      	ldr	r6, [r4, #0]
 8002350:	6961      	ldr	r1, [r4, #20]
 8002352:	1d18      	adds	r0, r3, #4
 8002354:	6028      	str	r0, [r5, #0]
 8002356:	0635      	lsls	r5, r6, #24
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	d501      	bpl.n	8002360 <_printf_i+0x1c4>
 800235c:	6019      	str	r1, [r3, #0]
 800235e:	e002      	b.n	8002366 <_printf_i+0x1ca>
 8002360:	0670      	lsls	r0, r6, #25
 8002362:	d5fb      	bpl.n	800235c <_printf_i+0x1c0>
 8002364:	8019      	strh	r1, [r3, #0]
 8002366:	2300      	movs	r3, #0
 8002368:	6123      	str	r3, [r4, #16]
 800236a:	4615      	mov	r5, r2
 800236c:	e7bc      	b.n	80022e8 <_printf_i+0x14c>
 800236e:	682b      	ldr	r3, [r5, #0]
 8002370:	1d1a      	adds	r2, r3, #4
 8002372:	602a      	str	r2, [r5, #0]
 8002374:	681d      	ldr	r5, [r3, #0]
 8002376:	6862      	ldr	r2, [r4, #4]
 8002378:	2100      	movs	r1, #0
 800237a:	4628      	mov	r0, r5
 800237c:	f7fd ff28 	bl	80001d0 <memchr>
 8002380:	b108      	cbz	r0, 8002386 <_printf_i+0x1ea>
 8002382:	1b40      	subs	r0, r0, r5
 8002384:	6060      	str	r0, [r4, #4]
 8002386:	6863      	ldr	r3, [r4, #4]
 8002388:	6123      	str	r3, [r4, #16]
 800238a:	2300      	movs	r3, #0
 800238c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002390:	e7aa      	b.n	80022e8 <_printf_i+0x14c>
 8002392:	6923      	ldr	r3, [r4, #16]
 8002394:	462a      	mov	r2, r5
 8002396:	4649      	mov	r1, r9
 8002398:	4640      	mov	r0, r8
 800239a:	47d0      	blx	sl
 800239c:	3001      	adds	r0, #1
 800239e:	d0ad      	beq.n	80022fc <_printf_i+0x160>
 80023a0:	6823      	ldr	r3, [r4, #0]
 80023a2:	079b      	lsls	r3, r3, #30
 80023a4:	d413      	bmi.n	80023ce <_printf_i+0x232>
 80023a6:	68e0      	ldr	r0, [r4, #12]
 80023a8:	9b03      	ldr	r3, [sp, #12]
 80023aa:	4298      	cmp	r0, r3
 80023ac:	bfb8      	it	lt
 80023ae:	4618      	movlt	r0, r3
 80023b0:	e7a6      	b.n	8002300 <_printf_i+0x164>
 80023b2:	2301      	movs	r3, #1
 80023b4:	4632      	mov	r2, r6
 80023b6:	4649      	mov	r1, r9
 80023b8:	4640      	mov	r0, r8
 80023ba:	47d0      	blx	sl
 80023bc:	3001      	adds	r0, #1
 80023be:	d09d      	beq.n	80022fc <_printf_i+0x160>
 80023c0:	3501      	adds	r5, #1
 80023c2:	68e3      	ldr	r3, [r4, #12]
 80023c4:	9903      	ldr	r1, [sp, #12]
 80023c6:	1a5b      	subs	r3, r3, r1
 80023c8:	42ab      	cmp	r3, r5
 80023ca:	dcf2      	bgt.n	80023b2 <_printf_i+0x216>
 80023cc:	e7eb      	b.n	80023a6 <_printf_i+0x20a>
 80023ce:	2500      	movs	r5, #0
 80023d0:	f104 0619 	add.w	r6, r4, #25
 80023d4:	e7f5      	b.n	80023c2 <_printf_i+0x226>
 80023d6:	bf00      	nop
 80023d8:	08004603 	.word	0x08004603
 80023dc:	08004614 	.word	0x08004614

080023e0 <std>:
 80023e0:	2300      	movs	r3, #0
 80023e2:	b510      	push	{r4, lr}
 80023e4:	4604      	mov	r4, r0
 80023e6:	e9c0 3300 	strd	r3, r3, [r0]
 80023ea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80023ee:	6083      	str	r3, [r0, #8]
 80023f0:	8181      	strh	r1, [r0, #12]
 80023f2:	6643      	str	r3, [r0, #100]	; 0x64
 80023f4:	81c2      	strh	r2, [r0, #14]
 80023f6:	6183      	str	r3, [r0, #24]
 80023f8:	4619      	mov	r1, r3
 80023fa:	2208      	movs	r2, #8
 80023fc:	305c      	adds	r0, #92	; 0x5c
 80023fe:	f000 f9e5 	bl	80027cc <memset>
 8002402:	4b05      	ldr	r3, [pc, #20]	; (8002418 <std+0x38>)
 8002404:	6263      	str	r3, [r4, #36]	; 0x24
 8002406:	4b05      	ldr	r3, [pc, #20]	; (800241c <std+0x3c>)
 8002408:	62a3      	str	r3, [r4, #40]	; 0x28
 800240a:	4b05      	ldr	r3, [pc, #20]	; (8002420 <std+0x40>)
 800240c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800240e:	4b05      	ldr	r3, [pc, #20]	; (8002424 <std+0x44>)
 8002410:	6224      	str	r4, [r4, #32]
 8002412:	6323      	str	r3, [r4, #48]	; 0x30
 8002414:	bd10      	pop	{r4, pc}
 8002416:	bf00      	nop
 8002418:	0800261d 	.word	0x0800261d
 800241c:	0800263f 	.word	0x0800263f
 8002420:	08002677 	.word	0x08002677
 8002424:	0800269b 	.word	0x0800269b

08002428 <stdio_exit_handler>:
 8002428:	4a02      	ldr	r2, [pc, #8]	; (8002434 <stdio_exit_handler+0xc>)
 800242a:	4903      	ldr	r1, [pc, #12]	; (8002438 <stdio_exit_handler+0x10>)
 800242c:	4803      	ldr	r0, [pc, #12]	; (800243c <stdio_exit_handler+0x14>)
 800242e:	f000 b869 	b.w	8002504 <_fwalk_sglue>
 8002432:	bf00      	nop
 8002434:	20000014 	.word	0x20000014
 8002438:	080042a1 	.word	0x080042a1
 800243c:	20000020 	.word	0x20000020

08002440 <cleanup_stdio>:
 8002440:	6841      	ldr	r1, [r0, #4]
 8002442:	4b0c      	ldr	r3, [pc, #48]	; (8002474 <cleanup_stdio+0x34>)
 8002444:	4299      	cmp	r1, r3
 8002446:	b510      	push	{r4, lr}
 8002448:	4604      	mov	r4, r0
 800244a:	d001      	beq.n	8002450 <cleanup_stdio+0x10>
 800244c:	f001 ff28 	bl	80042a0 <_fflush_r>
 8002450:	68a1      	ldr	r1, [r4, #8]
 8002452:	4b09      	ldr	r3, [pc, #36]	; (8002478 <cleanup_stdio+0x38>)
 8002454:	4299      	cmp	r1, r3
 8002456:	d002      	beq.n	800245e <cleanup_stdio+0x1e>
 8002458:	4620      	mov	r0, r4
 800245a:	f001 ff21 	bl	80042a0 <_fflush_r>
 800245e:	68e1      	ldr	r1, [r4, #12]
 8002460:	4b06      	ldr	r3, [pc, #24]	; (800247c <cleanup_stdio+0x3c>)
 8002462:	4299      	cmp	r1, r3
 8002464:	d004      	beq.n	8002470 <cleanup_stdio+0x30>
 8002466:	4620      	mov	r0, r4
 8002468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800246c:	f001 bf18 	b.w	80042a0 <_fflush_r>
 8002470:	bd10      	pop	{r4, pc}
 8002472:	bf00      	nop
 8002474:	200002bc 	.word	0x200002bc
 8002478:	20000324 	.word	0x20000324
 800247c:	2000038c 	.word	0x2000038c

08002480 <global_stdio_init.part.0>:
 8002480:	b510      	push	{r4, lr}
 8002482:	4b0b      	ldr	r3, [pc, #44]	; (80024b0 <global_stdio_init.part.0+0x30>)
 8002484:	4c0b      	ldr	r4, [pc, #44]	; (80024b4 <global_stdio_init.part.0+0x34>)
 8002486:	4a0c      	ldr	r2, [pc, #48]	; (80024b8 <global_stdio_init.part.0+0x38>)
 8002488:	601a      	str	r2, [r3, #0]
 800248a:	4620      	mov	r0, r4
 800248c:	2200      	movs	r2, #0
 800248e:	2104      	movs	r1, #4
 8002490:	f7ff ffa6 	bl	80023e0 <std>
 8002494:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002498:	2201      	movs	r2, #1
 800249a:	2109      	movs	r1, #9
 800249c:	f7ff ffa0 	bl	80023e0 <std>
 80024a0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80024a4:	2202      	movs	r2, #2
 80024a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80024aa:	2112      	movs	r1, #18
 80024ac:	f7ff bf98 	b.w	80023e0 <std>
 80024b0:	200003f4 	.word	0x200003f4
 80024b4:	200002bc 	.word	0x200002bc
 80024b8:	08002429 	.word	0x08002429

080024bc <__sfp_lock_acquire>:
 80024bc:	4801      	ldr	r0, [pc, #4]	; (80024c4 <__sfp_lock_acquire+0x8>)
 80024be:	f000 ba01 	b.w	80028c4 <__retarget_lock_acquire_recursive>
 80024c2:	bf00      	nop
 80024c4:	200003fd 	.word	0x200003fd

080024c8 <__sfp_lock_release>:
 80024c8:	4801      	ldr	r0, [pc, #4]	; (80024d0 <__sfp_lock_release+0x8>)
 80024ca:	f000 b9fc 	b.w	80028c6 <__retarget_lock_release_recursive>
 80024ce:	bf00      	nop
 80024d0:	200003fd 	.word	0x200003fd

080024d4 <__sinit>:
 80024d4:	b510      	push	{r4, lr}
 80024d6:	4604      	mov	r4, r0
 80024d8:	f7ff fff0 	bl	80024bc <__sfp_lock_acquire>
 80024dc:	6a23      	ldr	r3, [r4, #32]
 80024de:	b11b      	cbz	r3, 80024e8 <__sinit+0x14>
 80024e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80024e4:	f7ff bff0 	b.w	80024c8 <__sfp_lock_release>
 80024e8:	4b04      	ldr	r3, [pc, #16]	; (80024fc <__sinit+0x28>)
 80024ea:	6223      	str	r3, [r4, #32]
 80024ec:	4b04      	ldr	r3, [pc, #16]	; (8002500 <__sinit+0x2c>)
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	d1f5      	bne.n	80024e0 <__sinit+0xc>
 80024f4:	f7ff ffc4 	bl	8002480 <global_stdio_init.part.0>
 80024f8:	e7f2      	b.n	80024e0 <__sinit+0xc>
 80024fa:	bf00      	nop
 80024fc:	08002441 	.word	0x08002441
 8002500:	200003f4 	.word	0x200003f4

08002504 <_fwalk_sglue>:
 8002504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002508:	4607      	mov	r7, r0
 800250a:	4688      	mov	r8, r1
 800250c:	4614      	mov	r4, r2
 800250e:	2600      	movs	r6, #0
 8002510:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002514:	f1b9 0901 	subs.w	r9, r9, #1
 8002518:	d505      	bpl.n	8002526 <_fwalk_sglue+0x22>
 800251a:	6824      	ldr	r4, [r4, #0]
 800251c:	2c00      	cmp	r4, #0
 800251e:	d1f7      	bne.n	8002510 <_fwalk_sglue+0xc>
 8002520:	4630      	mov	r0, r6
 8002522:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002526:	89ab      	ldrh	r3, [r5, #12]
 8002528:	2b01      	cmp	r3, #1
 800252a:	d907      	bls.n	800253c <_fwalk_sglue+0x38>
 800252c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002530:	3301      	adds	r3, #1
 8002532:	d003      	beq.n	800253c <_fwalk_sglue+0x38>
 8002534:	4629      	mov	r1, r5
 8002536:	4638      	mov	r0, r7
 8002538:	47c0      	blx	r8
 800253a:	4306      	orrs	r6, r0
 800253c:	3568      	adds	r5, #104	; 0x68
 800253e:	e7e9      	b.n	8002514 <_fwalk_sglue+0x10>

08002540 <iprintf>:
 8002540:	b40f      	push	{r0, r1, r2, r3}
 8002542:	b507      	push	{r0, r1, r2, lr}
 8002544:	4906      	ldr	r1, [pc, #24]	; (8002560 <iprintf+0x20>)
 8002546:	ab04      	add	r3, sp, #16
 8002548:	6808      	ldr	r0, [r1, #0]
 800254a:	f853 2b04 	ldr.w	r2, [r3], #4
 800254e:	6881      	ldr	r1, [r0, #8]
 8002550:	9301      	str	r3, [sp, #4]
 8002552:	f001 fd05 	bl	8003f60 <_vfiprintf_r>
 8002556:	b003      	add	sp, #12
 8002558:	f85d eb04 	ldr.w	lr, [sp], #4
 800255c:	b004      	add	sp, #16
 800255e:	4770      	bx	lr
 8002560:	2000006c 	.word	0x2000006c

08002564 <_puts_r>:
 8002564:	6a03      	ldr	r3, [r0, #32]
 8002566:	b570      	push	{r4, r5, r6, lr}
 8002568:	6884      	ldr	r4, [r0, #8]
 800256a:	4605      	mov	r5, r0
 800256c:	460e      	mov	r6, r1
 800256e:	b90b      	cbnz	r3, 8002574 <_puts_r+0x10>
 8002570:	f7ff ffb0 	bl	80024d4 <__sinit>
 8002574:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002576:	07db      	lsls	r3, r3, #31
 8002578:	d405      	bmi.n	8002586 <_puts_r+0x22>
 800257a:	89a3      	ldrh	r3, [r4, #12]
 800257c:	0598      	lsls	r0, r3, #22
 800257e:	d402      	bmi.n	8002586 <_puts_r+0x22>
 8002580:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002582:	f000 f99f 	bl	80028c4 <__retarget_lock_acquire_recursive>
 8002586:	89a3      	ldrh	r3, [r4, #12]
 8002588:	0719      	lsls	r1, r3, #28
 800258a:	d513      	bpl.n	80025b4 <_puts_r+0x50>
 800258c:	6923      	ldr	r3, [r4, #16]
 800258e:	b18b      	cbz	r3, 80025b4 <_puts_r+0x50>
 8002590:	3e01      	subs	r6, #1
 8002592:	68a3      	ldr	r3, [r4, #8]
 8002594:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002598:	3b01      	subs	r3, #1
 800259a:	60a3      	str	r3, [r4, #8]
 800259c:	b9e9      	cbnz	r1, 80025da <_puts_r+0x76>
 800259e:	2b00      	cmp	r3, #0
 80025a0:	da2e      	bge.n	8002600 <_puts_r+0x9c>
 80025a2:	4622      	mov	r2, r4
 80025a4:	210a      	movs	r1, #10
 80025a6:	4628      	mov	r0, r5
 80025a8:	f000 f87b 	bl	80026a2 <__swbuf_r>
 80025ac:	3001      	adds	r0, #1
 80025ae:	d007      	beq.n	80025c0 <_puts_r+0x5c>
 80025b0:	250a      	movs	r5, #10
 80025b2:	e007      	b.n	80025c4 <_puts_r+0x60>
 80025b4:	4621      	mov	r1, r4
 80025b6:	4628      	mov	r0, r5
 80025b8:	f000 f8b0 	bl	800271c <__swsetup_r>
 80025bc:	2800      	cmp	r0, #0
 80025be:	d0e7      	beq.n	8002590 <_puts_r+0x2c>
 80025c0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80025c4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80025c6:	07da      	lsls	r2, r3, #31
 80025c8:	d405      	bmi.n	80025d6 <_puts_r+0x72>
 80025ca:	89a3      	ldrh	r3, [r4, #12]
 80025cc:	059b      	lsls	r3, r3, #22
 80025ce:	d402      	bmi.n	80025d6 <_puts_r+0x72>
 80025d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80025d2:	f000 f978 	bl	80028c6 <__retarget_lock_release_recursive>
 80025d6:	4628      	mov	r0, r5
 80025d8:	bd70      	pop	{r4, r5, r6, pc}
 80025da:	2b00      	cmp	r3, #0
 80025dc:	da04      	bge.n	80025e8 <_puts_r+0x84>
 80025de:	69a2      	ldr	r2, [r4, #24]
 80025e0:	429a      	cmp	r2, r3
 80025e2:	dc06      	bgt.n	80025f2 <_puts_r+0x8e>
 80025e4:	290a      	cmp	r1, #10
 80025e6:	d004      	beq.n	80025f2 <_puts_r+0x8e>
 80025e8:	6823      	ldr	r3, [r4, #0]
 80025ea:	1c5a      	adds	r2, r3, #1
 80025ec:	6022      	str	r2, [r4, #0]
 80025ee:	7019      	strb	r1, [r3, #0]
 80025f0:	e7cf      	b.n	8002592 <_puts_r+0x2e>
 80025f2:	4622      	mov	r2, r4
 80025f4:	4628      	mov	r0, r5
 80025f6:	f000 f854 	bl	80026a2 <__swbuf_r>
 80025fa:	3001      	adds	r0, #1
 80025fc:	d1c9      	bne.n	8002592 <_puts_r+0x2e>
 80025fe:	e7df      	b.n	80025c0 <_puts_r+0x5c>
 8002600:	6823      	ldr	r3, [r4, #0]
 8002602:	250a      	movs	r5, #10
 8002604:	1c5a      	adds	r2, r3, #1
 8002606:	6022      	str	r2, [r4, #0]
 8002608:	701d      	strb	r5, [r3, #0]
 800260a:	e7db      	b.n	80025c4 <_puts_r+0x60>

0800260c <puts>:
 800260c:	4b02      	ldr	r3, [pc, #8]	; (8002618 <puts+0xc>)
 800260e:	4601      	mov	r1, r0
 8002610:	6818      	ldr	r0, [r3, #0]
 8002612:	f7ff bfa7 	b.w	8002564 <_puts_r>
 8002616:	bf00      	nop
 8002618:	2000006c 	.word	0x2000006c

0800261c <__sread>:
 800261c:	b510      	push	{r4, lr}
 800261e:	460c      	mov	r4, r1
 8002620:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002624:	f000 f900 	bl	8002828 <_read_r>
 8002628:	2800      	cmp	r0, #0
 800262a:	bfab      	itete	ge
 800262c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800262e:	89a3      	ldrhlt	r3, [r4, #12]
 8002630:	181b      	addge	r3, r3, r0
 8002632:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002636:	bfac      	ite	ge
 8002638:	6563      	strge	r3, [r4, #84]	; 0x54
 800263a:	81a3      	strhlt	r3, [r4, #12]
 800263c:	bd10      	pop	{r4, pc}

0800263e <__swrite>:
 800263e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002642:	461f      	mov	r7, r3
 8002644:	898b      	ldrh	r3, [r1, #12]
 8002646:	05db      	lsls	r3, r3, #23
 8002648:	4605      	mov	r5, r0
 800264a:	460c      	mov	r4, r1
 800264c:	4616      	mov	r6, r2
 800264e:	d505      	bpl.n	800265c <__swrite+0x1e>
 8002650:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002654:	2302      	movs	r3, #2
 8002656:	2200      	movs	r2, #0
 8002658:	f000 f8d4 	bl	8002804 <_lseek_r>
 800265c:	89a3      	ldrh	r3, [r4, #12]
 800265e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002662:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002666:	81a3      	strh	r3, [r4, #12]
 8002668:	4632      	mov	r2, r6
 800266a:	463b      	mov	r3, r7
 800266c:	4628      	mov	r0, r5
 800266e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002672:	f000 b8eb 	b.w	800284c <_write_r>

08002676 <__sseek>:
 8002676:	b510      	push	{r4, lr}
 8002678:	460c      	mov	r4, r1
 800267a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800267e:	f000 f8c1 	bl	8002804 <_lseek_r>
 8002682:	1c43      	adds	r3, r0, #1
 8002684:	89a3      	ldrh	r3, [r4, #12]
 8002686:	bf15      	itete	ne
 8002688:	6560      	strne	r0, [r4, #84]	; 0x54
 800268a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800268e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002692:	81a3      	strheq	r3, [r4, #12]
 8002694:	bf18      	it	ne
 8002696:	81a3      	strhne	r3, [r4, #12]
 8002698:	bd10      	pop	{r4, pc}

0800269a <__sclose>:
 800269a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800269e:	f000 b8a1 	b.w	80027e4 <_close_r>

080026a2 <__swbuf_r>:
 80026a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026a4:	460e      	mov	r6, r1
 80026a6:	4614      	mov	r4, r2
 80026a8:	4605      	mov	r5, r0
 80026aa:	b118      	cbz	r0, 80026b4 <__swbuf_r+0x12>
 80026ac:	6a03      	ldr	r3, [r0, #32]
 80026ae:	b90b      	cbnz	r3, 80026b4 <__swbuf_r+0x12>
 80026b0:	f7ff ff10 	bl	80024d4 <__sinit>
 80026b4:	69a3      	ldr	r3, [r4, #24]
 80026b6:	60a3      	str	r3, [r4, #8]
 80026b8:	89a3      	ldrh	r3, [r4, #12]
 80026ba:	071a      	lsls	r2, r3, #28
 80026bc:	d525      	bpl.n	800270a <__swbuf_r+0x68>
 80026be:	6923      	ldr	r3, [r4, #16]
 80026c0:	b31b      	cbz	r3, 800270a <__swbuf_r+0x68>
 80026c2:	6823      	ldr	r3, [r4, #0]
 80026c4:	6922      	ldr	r2, [r4, #16]
 80026c6:	1a98      	subs	r0, r3, r2
 80026c8:	6963      	ldr	r3, [r4, #20]
 80026ca:	b2f6      	uxtb	r6, r6
 80026cc:	4283      	cmp	r3, r0
 80026ce:	4637      	mov	r7, r6
 80026d0:	dc04      	bgt.n	80026dc <__swbuf_r+0x3a>
 80026d2:	4621      	mov	r1, r4
 80026d4:	4628      	mov	r0, r5
 80026d6:	f001 fde3 	bl	80042a0 <_fflush_r>
 80026da:	b9e0      	cbnz	r0, 8002716 <__swbuf_r+0x74>
 80026dc:	68a3      	ldr	r3, [r4, #8]
 80026de:	3b01      	subs	r3, #1
 80026e0:	60a3      	str	r3, [r4, #8]
 80026e2:	6823      	ldr	r3, [r4, #0]
 80026e4:	1c5a      	adds	r2, r3, #1
 80026e6:	6022      	str	r2, [r4, #0]
 80026e8:	701e      	strb	r6, [r3, #0]
 80026ea:	6962      	ldr	r2, [r4, #20]
 80026ec:	1c43      	adds	r3, r0, #1
 80026ee:	429a      	cmp	r2, r3
 80026f0:	d004      	beq.n	80026fc <__swbuf_r+0x5a>
 80026f2:	89a3      	ldrh	r3, [r4, #12]
 80026f4:	07db      	lsls	r3, r3, #31
 80026f6:	d506      	bpl.n	8002706 <__swbuf_r+0x64>
 80026f8:	2e0a      	cmp	r6, #10
 80026fa:	d104      	bne.n	8002706 <__swbuf_r+0x64>
 80026fc:	4621      	mov	r1, r4
 80026fe:	4628      	mov	r0, r5
 8002700:	f001 fdce 	bl	80042a0 <_fflush_r>
 8002704:	b938      	cbnz	r0, 8002716 <__swbuf_r+0x74>
 8002706:	4638      	mov	r0, r7
 8002708:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800270a:	4621      	mov	r1, r4
 800270c:	4628      	mov	r0, r5
 800270e:	f000 f805 	bl	800271c <__swsetup_r>
 8002712:	2800      	cmp	r0, #0
 8002714:	d0d5      	beq.n	80026c2 <__swbuf_r+0x20>
 8002716:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800271a:	e7f4      	b.n	8002706 <__swbuf_r+0x64>

0800271c <__swsetup_r>:
 800271c:	b538      	push	{r3, r4, r5, lr}
 800271e:	4b2a      	ldr	r3, [pc, #168]	; (80027c8 <__swsetup_r+0xac>)
 8002720:	4605      	mov	r5, r0
 8002722:	6818      	ldr	r0, [r3, #0]
 8002724:	460c      	mov	r4, r1
 8002726:	b118      	cbz	r0, 8002730 <__swsetup_r+0x14>
 8002728:	6a03      	ldr	r3, [r0, #32]
 800272a:	b90b      	cbnz	r3, 8002730 <__swsetup_r+0x14>
 800272c:	f7ff fed2 	bl	80024d4 <__sinit>
 8002730:	89a3      	ldrh	r3, [r4, #12]
 8002732:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002736:	0718      	lsls	r0, r3, #28
 8002738:	d422      	bmi.n	8002780 <__swsetup_r+0x64>
 800273a:	06d9      	lsls	r1, r3, #27
 800273c:	d407      	bmi.n	800274e <__swsetup_r+0x32>
 800273e:	2309      	movs	r3, #9
 8002740:	602b      	str	r3, [r5, #0]
 8002742:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8002746:	81a3      	strh	r3, [r4, #12]
 8002748:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800274c:	e034      	b.n	80027b8 <__swsetup_r+0x9c>
 800274e:	0758      	lsls	r0, r3, #29
 8002750:	d512      	bpl.n	8002778 <__swsetup_r+0x5c>
 8002752:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002754:	b141      	cbz	r1, 8002768 <__swsetup_r+0x4c>
 8002756:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800275a:	4299      	cmp	r1, r3
 800275c:	d002      	beq.n	8002764 <__swsetup_r+0x48>
 800275e:	4628      	mov	r0, r5
 8002760:	f000 ff58 	bl	8003614 <_free_r>
 8002764:	2300      	movs	r3, #0
 8002766:	6363      	str	r3, [r4, #52]	; 0x34
 8002768:	89a3      	ldrh	r3, [r4, #12]
 800276a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800276e:	81a3      	strh	r3, [r4, #12]
 8002770:	2300      	movs	r3, #0
 8002772:	6063      	str	r3, [r4, #4]
 8002774:	6923      	ldr	r3, [r4, #16]
 8002776:	6023      	str	r3, [r4, #0]
 8002778:	89a3      	ldrh	r3, [r4, #12]
 800277a:	f043 0308 	orr.w	r3, r3, #8
 800277e:	81a3      	strh	r3, [r4, #12]
 8002780:	6923      	ldr	r3, [r4, #16]
 8002782:	b94b      	cbnz	r3, 8002798 <__swsetup_r+0x7c>
 8002784:	89a3      	ldrh	r3, [r4, #12]
 8002786:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800278a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800278e:	d003      	beq.n	8002798 <__swsetup_r+0x7c>
 8002790:	4621      	mov	r1, r4
 8002792:	4628      	mov	r0, r5
 8002794:	f001 fde4 	bl	8004360 <__smakebuf_r>
 8002798:	89a0      	ldrh	r0, [r4, #12]
 800279a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800279e:	f010 0301 	ands.w	r3, r0, #1
 80027a2:	d00a      	beq.n	80027ba <__swsetup_r+0x9e>
 80027a4:	2300      	movs	r3, #0
 80027a6:	60a3      	str	r3, [r4, #8]
 80027a8:	6963      	ldr	r3, [r4, #20]
 80027aa:	425b      	negs	r3, r3
 80027ac:	61a3      	str	r3, [r4, #24]
 80027ae:	6923      	ldr	r3, [r4, #16]
 80027b0:	b943      	cbnz	r3, 80027c4 <__swsetup_r+0xa8>
 80027b2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80027b6:	d1c4      	bne.n	8002742 <__swsetup_r+0x26>
 80027b8:	bd38      	pop	{r3, r4, r5, pc}
 80027ba:	0781      	lsls	r1, r0, #30
 80027bc:	bf58      	it	pl
 80027be:	6963      	ldrpl	r3, [r4, #20]
 80027c0:	60a3      	str	r3, [r4, #8]
 80027c2:	e7f4      	b.n	80027ae <__swsetup_r+0x92>
 80027c4:	2000      	movs	r0, #0
 80027c6:	e7f7      	b.n	80027b8 <__swsetup_r+0x9c>
 80027c8:	2000006c 	.word	0x2000006c

080027cc <memset>:
 80027cc:	4402      	add	r2, r0
 80027ce:	4603      	mov	r3, r0
 80027d0:	4293      	cmp	r3, r2
 80027d2:	d100      	bne.n	80027d6 <memset+0xa>
 80027d4:	4770      	bx	lr
 80027d6:	f803 1b01 	strb.w	r1, [r3], #1
 80027da:	e7f9      	b.n	80027d0 <memset+0x4>

080027dc <_localeconv_r>:
 80027dc:	4800      	ldr	r0, [pc, #0]	; (80027e0 <_localeconv_r+0x4>)
 80027de:	4770      	bx	lr
 80027e0:	20000160 	.word	0x20000160

080027e4 <_close_r>:
 80027e4:	b538      	push	{r3, r4, r5, lr}
 80027e6:	4d06      	ldr	r5, [pc, #24]	; (8002800 <_close_r+0x1c>)
 80027e8:	2300      	movs	r3, #0
 80027ea:	4604      	mov	r4, r0
 80027ec:	4608      	mov	r0, r1
 80027ee:	602b      	str	r3, [r5, #0]
 80027f0:	f7fe ffc4 	bl	800177c <_close>
 80027f4:	1c43      	adds	r3, r0, #1
 80027f6:	d102      	bne.n	80027fe <_close_r+0x1a>
 80027f8:	682b      	ldr	r3, [r5, #0]
 80027fa:	b103      	cbz	r3, 80027fe <_close_r+0x1a>
 80027fc:	6023      	str	r3, [r4, #0]
 80027fe:	bd38      	pop	{r3, r4, r5, pc}
 8002800:	200003f8 	.word	0x200003f8

08002804 <_lseek_r>:
 8002804:	b538      	push	{r3, r4, r5, lr}
 8002806:	4d07      	ldr	r5, [pc, #28]	; (8002824 <_lseek_r+0x20>)
 8002808:	4604      	mov	r4, r0
 800280a:	4608      	mov	r0, r1
 800280c:	4611      	mov	r1, r2
 800280e:	2200      	movs	r2, #0
 8002810:	602a      	str	r2, [r5, #0]
 8002812:	461a      	mov	r2, r3
 8002814:	f7fe ff6f 	bl	80016f6 <_lseek>
 8002818:	1c43      	adds	r3, r0, #1
 800281a:	d102      	bne.n	8002822 <_lseek_r+0x1e>
 800281c:	682b      	ldr	r3, [r5, #0]
 800281e:	b103      	cbz	r3, 8002822 <_lseek_r+0x1e>
 8002820:	6023      	str	r3, [r4, #0]
 8002822:	bd38      	pop	{r3, r4, r5, pc}
 8002824:	200003f8 	.word	0x200003f8

08002828 <_read_r>:
 8002828:	b538      	push	{r3, r4, r5, lr}
 800282a:	4d07      	ldr	r5, [pc, #28]	; (8002848 <_read_r+0x20>)
 800282c:	4604      	mov	r4, r0
 800282e:	4608      	mov	r0, r1
 8002830:	4611      	mov	r1, r2
 8002832:	2200      	movs	r2, #0
 8002834:	602a      	str	r2, [r5, #0]
 8002836:	461a      	mov	r2, r3
 8002838:	f7fe ff05 	bl	8001646 <_read>
 800283c:	1c43      	adds	r3, r0, #1
 800283e:	d102      	bne.n	8002846 <_read_r+0x1e>
 8002840:	682b      	ldr	r3, [r5, #0]
 8002842:	b103      	cbz	r3, 8002846 <_read_r+0x1e>
 8002844:	6023      	str	r3, [r4, #0]
 8002846:	bd38      	pop	{r3, r4, r5, pc}
 8002848:	200003f8 	.word	0x200003f8

0800284c <_write_r>:
 800284c:	b538      	push	{r3, r4, r5, lr}
 800284e:	4d07      	ldr	r5, [pc, #28]	; (800286c <_write_r+0x20>)
 8002850:	4604      	mov	r4, r0
 8002852:	4608      	mov	r0, r1
 8002854:	4611      	mov	r1, r2
 8002856:	2200      	movs	r2, #0
 8002858:	602a      	str	r2, [r5, #0]
 800285a:	461a      	mov	r2, r3
 800285c:	f7fe ff5d 	bl	800171a <_write>
 8002860:	1c43      	adds	r3, r0, #1
 8002862:	d102      	bne.n	800286a <_write_r+0x1e>
 8002864:	682b      	ldr	r3, [r5, #0]
 8002866:	b103      	cbz	r3, 800286a <_write_r+0x1e>
 8002868:	6023      	str	r3, [r4, #0]
 800286a:	bd38      	pop	{r3, r4, r5, pc}
 800286c:	200003f8 	.word	0x200003f8

08002870 <__errno>:
 8002870:	4b01      	ldr	r3, [pc, #4]	; (8002878 <__errno+0x8>)
 8002872:	6818      	ldr	r0, [r3, #0]
 8002874:	4770      	bx	lr
 8002876:	bf00      	nop
 8002878:	2000006c 	.word	0x2000006c

0800287c <__libc_init_array>:
 800287c:	b570      	push	{r4, r5, r6, lr}
 800287e:	4d0d      	ldr	r5, [pc, #52]	; (80028b4 <__libc_init_array+0x38>)
 8002880:	4c0d      	ldr	r4, [pc, #52]	; (80028b8 <__libc_init_array+0x3c>)
 8002882:	1b64      	subs	r4, r4, r5
 8002884:	10a4      	asrs	r4, r4, #2
 8002886:	2600      	movs	r6, #0
 8002888:	42a6      	cmp	r6, r4
 800288a:	d109      	bne.n	80028a0 <__libc_init_array+0x24>
 800288c:	4d0b      	ldr	r5, [pc, #44]	; (80028bc <__libc_init_array+0x40>)
 800288e:	4c0c      	ldr	r4, [pc, #48]	; (80028c0 <__libc_init_array+0x44>)
 8002890:	f001 fe5e 	bl	8004550 <_init>
 8002894:	1b64      	subs	r4, r4, r5
 8002896:	10a4      	asrs	r4, r4, #2
 8002898:	2600      	movs	r6, #0
 800289a:	42a6      	cmp	r6, r4
 800289c:	d105      	bne.n	80028aa <__libc_init_array+0x2e>
 800289e:	bd70      	pop	{r4, r5, r6, pc}
 80028a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80028a4:	4798      	blx	r3
 80028a6:	3601      	adds	r6, #1
 80028a8:	e7ee      	b.n	8002888 <__libc_init_array+0xc>
 80028aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80028ae:	4798      	blx	r3
 80028b0:	3601      	adds	r6, #1
 80028b2:	e7f2      	b.n	800289a <__libc_init_array+0x1e>
 80028b4:	08004960 	.word	0x08004960
 80028b8:	08004960 	.word	0x08004960
 80028bc:	08004960 	.word	0x08004960
 80028c0:	08004964 	.word	0x08004964

080028c4 <__retarget_lock_acquire_recursive>:
 80028c4:	4770      	bx	lr

080028c6 <__retarget_lock_release_recursive>:
 80028c6:	4770      	bx	lr

080028c8 <memcpy>:
 80028c8:	440a      	add	r2, r1
 80028ca:	4291      	cmp	r1, r2
 80028cc:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80028d0:	d100      	bne.n	80028d4 <memcpy+0xc>
 80028d2:	4770      	bx	lr
 80028d4:	b510      	push	{r4, lr}
 80028d6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80028da:	f803 4f01 	strb.w	r4, [r3, #1]!
 80028de:	4291      	cmp	r1, r2
 80028e0:	d1f9      	bne.n	80028d6 <memcpy+0xe>
 80028e2:	bd10      	pop	{r4, pc}

080028e4 <__assert_func>:
 80028e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80028e6:	4614      	mov	r4, r2
 80028e8:	461a      	mov	r2, r3
 80028ea:	4b09      	ldr	r3, [pc, #36]	; (8002910 <__assert_func+0x2c>)
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	4605      	mov	r5, r0
 80028f0:	68d8      	ldr	r0, [r3, #12]
 80028f2:	b14c      	cbz	r4, 8002908 <__assert_func+0x24>
 80028f4:	4b07      	ldr	r3, [pc, #28]	; (8002914 <__assert_func+0x30>)
 80028f6:	9100      	str	r1, [sp, #0]
 80028f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80028fc:	4906      	ldr	r1, [pc, #24]	; (8002918 <__assert_func+0x34>)
 80028fe:	462b      	mov	r3, r5
 8002900:	f001 fcf6 	bl	80042f0 <fiprintf>
 8002904:	f001 fd9a 	bl	800443c <abort>
 8002908:	4b04      	ldr	r3, [pc, #16]	; (800291c <__assert_func+0x38>)
 800290a:	461c      	mov	r4, r3
 800290c:	e7f3      	b.n	80028f6 <__assert_func+0x12>
 800290e:	bf00      	nop
 8002910:	2000006c 	.word	0x2000006c
 8002914:	08004625 	.word	0x08004625
 8002918:	08004632 	.word	0x08004632
 800291c:	08004660 	.word	0x08004660

08002920 <quorem>:
 8002920:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002924:	6903      	ldr	r3, [r0, #16]
 8002926:	690c      	ldr	r4, [r1, #16]
 8002928:	42a3      	cmp	r3, r4
 800292a:	4607      	mov	r7, r0
 800292c:	db7e      	blt.n	8002a2c <quorem+0x10c>
 800292e:	3c01      	subs	r4, #1
 8002930:	f101 0814 	add.w	r8, r1, #20
 8002934:	f100 0514 	add.w	r5, r0, #20
 8002938:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800293c:	9301      	str	r3, [sp, #4]
 800293e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002942:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002946:	3301      	adds	r3, #1
 8002948:	429a      	cmp	r2, r3
 800294a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800294e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002952:	fbb2 f6f3 	udiv	r6, r2, r3
 8002956:	d331      	bcc.n	80029bc <quorem+0x9c>
 8002958:	f04f 0e00 	mov.w	lr, #0
 800295c:	4640      	mov	r0, r8
 800295e:	46ac      	mov	ip, r5
 8002960:	46f2      	mov	sl, lr
 8002962:	f850 2b04 	ldr.w	r2, [r0], #4
 8002966:	b293      	uxth	r3, r2
 8002968:	fb06 e303 	mla	r3, r6, r3, lr
 800296c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002970:	0c1a      	lsrs	r2, r3, #16
 8002972:	b29b      	uxth	r3, r3
 8002974:	ebaa 0303 	sub.w	r3, sl, r3
 8002978:	f8dc a000 	ldr.w	sl, [ip]
 800297c:	fa13 f38a 	uxtah	r3, r3, sl
 8002980:	fb06 220e 	mla	r2, r6, lr, r2
 8002984:	9300      	str	r3, [sp, #0]
 8002986:	9b00      	ldr	r3, [sp, #0]
 8002988:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800298c:	b292      	uxth	r2, r2
 800298e:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002992:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002996:	f8bd 3000 	ldrh.w	r3, [sp]
 800299a:	4581      	cmp	r9, r0
 800299c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80029a0:	f84c 3b04 	str.w	r3, [ip], #4
 80029a4:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80029a8:	d2db      	bcs.n	8002962 <quorem+0x42>
 80029aa:	f855 300b 	ldr.w	r3, [r5, fp]
 80029ae:	b92b      	cbnz	r3, 80029bc <quorem+0x9c>
 80029b0:	9b01      	ldr	r3, [sp, #4]
 80029b2:	3b04      	subs	r3, #4
 80029b4:	429d      	cmp	r5, r3
 80029b6:	461a      	mov	r2, r3
 80029b8:	d32c      	bcc.n	8002a14 <quorem+0xf4>
 80029ba:	613c      	str	r4, [r7, #16]
 80029bc:	4638      	mov	r0, r7
 80029be:	f001 f9a5 	bl	8003d0c <__mcmp>
 80029c2:	2800      	cmp	r0, #0
 80029c4:	db22      	blt.n	8002a0c <quorem+0xec>
 80029c6:	3601      	adds	r6, #1
 80029c8:	4629      	mov	r1, r5
 80029ca:	2000      	movs	r0, #0
 80029cc:	f858 2b04 	ldr.w	r2, [r8], #4
 80029d0:	f8d1 c000 	ldr.w	ip, [r1]
 80029d4:	b293      	uxth	r3, r2
 80029d6:	1ac3      	subs	r3, r0, r3
 80029d8:	0c12      	lsrs	r2, r2, #16
 80029da:	fa13 f38c 	uxtah	r3, r3, ip
 80029de:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80029e2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80029e6:	b29b      	uxth	r3, r3
 80029e8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80029ec:	45c1      	cmp	r9, r8
 80029ee:	f841 3b04 	str.w	r3, [r1], #4
 80029f2:	ea4f 4022 	mov.w	r0, r2, asr #16
 80029f6:	d2e9      	bcs.n	80029cc <quorem+0xac>
 80029f8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80029fc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002a00:	b922      	cbnz	r2, 8002a0c <quorem+0xec>
 8002a02:	3b04      	subs	r3, #4
 8002a04:	429d      	cmp	r5, r3
 8002a06:	461a      	mov	r2, r3
 8002a08:	d30a      	bcc.n	8002a20 <quorem+0x100>
 8002a0a:	613c      	str	r4, [r7, #16]
 8002a0c:	4630      	mov	r0, r6
 8002a0e:	b003      	add	sp, #12
 8002a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a14:	6812      	ldr	r2, [r2, #0]
 8002a16:	3b04      	subs	r3, #4
 8002a18:	2a00      	cmp	r2, #0
 8002a1a:	d1ce      	bne.n	80029ba <quorem+0x9a>
 8002a1c:	3c01      	subs	r4, #1
 8002a1e:	e7c9      	b.n	80029b4 <quorem+0x94>
 8002a20:	6812      	ldr	r2, [r2, #0]
 8002a22:	3b04      	subs	r3, #4
 8002a24:	2a00      	cmp	r2, #0
 8002a26:	d1f0      	bne.n	8002a0a <quorem+0xea>
 8002a28:	3c01      	subs	r4, #1
 8002a2a:	e7eb      	b.n	8002a04 <quorem+0xe4>
 8002a2c:	2000      	movs	r0, #0
 8002a2e:	e7ee      	b.n	8002a0e <quorem+0xee>

08002a30 <_dtoa_r>:
 8002a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a34:	ed2d 8b04 	vpush	{d8-d9}
 8002a38:	69c5      	ldr	r5, [r0, #28]
 8002a3a:	b093      	sub	sp, #76	; 0x4c
 8002a3c:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002a40:	ec57 6b10 	vmov	r6, r7, d0
 8002a44:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002a48:	9107      	str	r1, [sp, #28]
 8002a4a:	4604      	mov	r4, r0
 8002a4c:	920a      	str	r2, [sp, #40]	; 0x28
 8002a4e:	930d      	str	r3, [sp, #52]	; 0x34
 8002a50:	b975      	cbnz	r5, 8002a70 <_dtoa_r+0x40>
 8002a52:	2010      	movs	r0, #16
 8002a54:	f000 fe2a 	bl	80036ac <malloc>
 8002a58:	4602      	mov	r2, r0
 8002a5a:	61e0      	str	r0, [r4, #28]
 8002a5c:	b920      	cbnz	r0, 8002a68 <_dtoa_r+0x38>
 8002a5e:	4bae      	ldr	r3, [pc, #696]	; (8002d18 <_dtoa_r+0x2e8>)
 8002a60:	21ef      	movs	r1, #239	; 0xef
 8002a62:	48ae      	ldr	r0, [pc, #696]	; (8002d1c <_dtoa_r+0x2ec>)
 8002a64:	f7ff ff3e 	bl	80028e4 <__assert_func>
 8002a68:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002a6c:	6005      	str	r5, [r0, #0]
 8002a6e:	60c5      	str	r5, [r0, #12]
 8002a70:	69e3      	ldr	r3, [r4, #28]
 8002a72:	6819      	ldr	r1, [r3, #0]
 8002a74:	b151      	cbz	r1, 8002a8c <_dtoa_r+0x5c>
 8002a76:	685a      	ldr	r2, [r3, #4]
 8002a78:	604a      	str	r2, [r1, #4]
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	4093      	lsls	r3, r2
 8002a7e:	608b      	str	r3, [r1, #8]
 8002a80:	4620      	mov	r0, r4
 8002a82:	f000 ff07 	bl	8003894 <_Bfree>
 8002a86:	69e3      	ldr	r3, [r4, #28]
 8002a88:	2200      	movs	r2, #0
 8002a8a:	601a      	str	r2, [r3, #0]
 8002a8c:	1e3b      	subs	r3, r7, #0
 8002a8e:	bfbb      	ittet	lt
 8002a90:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002a94:	9303      	strlt	r3, [sp, #12]
 8002a96:	2300      	movge	r3, #0
 8002a98:	2201      	movlt	r2, #1
 8002a9a:	bfac      	ite	ge
 8002a9c:	f8c8 3000 	strge.w	r3, [r8]
 8002aa0:	f8c8 2000 	strlt.w	r2, [r8]
 8002aa4:	4b9e      	ldr	r3, [pc, #632]	; (8002d20 <_dtoa_r+0x2f0>)
 8002aa6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8002aaa:	ea33 0308 	bics.w	r3, r3, r8
 8002aae:	d11b      	bne.n	8002ae8 <_dtoa_r+0xb8>
 8002ab0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002ab2:	f242 730f 	movw	r3, #9999	; 0x270f
 8002ab6:	6013      	str	r3, [r2, #0]
 8002ab8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002abc:	4333      	orrs	r3, r6
 8002abe:	f000 8593 	beq.w	80035e8 <_dtoa_r+0xbb8>
 8002ac2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002ac4:	b963      	cbnz	r3, 8002ae0 <_dtoa_r+0xb0>
 8002ac6:	4b97      	ldr	r3, [pc, #604]	; (8002d24 <_dtoa_r+0x2f4>)
 8002ac8:	e027      	b.n	8002b1a <_dtoa_r+0xea>
 8002aca:	4b97      	ldr	r3, [pc, #604]	; (8002d28 <_dtoa_r+0x2f8>)
 8002acc:	9300      	str	r3, [sp, #0]
 8002ace:	3308      	adds	r3, #8
 8002ad0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002ad2:	6013      	str	r3, [r2, #0]
 8002ad4:	9800      	ldr	r0, [sp, #0]
 8002ad6:	b013      	add	sp, #76	; 0x4c
 8002ad8:	ecbd 8b04 	vpop	{d8-d9}
 8002adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ae0:	4b90      	ldr	r3, [pc, #576]	; (8002d24 <_dtoa_r+0x2f4>)
 8002ae2:	9300      	str	r3, [sp, #0]
 8002ae4:	3303      	adds	r3, #3
 8002ae6:	e7f3      	b.n	8002ad0 <_dtoa_r+0xa0>
 8002ae8:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002aec:	2200      	movs	r2, #0
 8002aee:	ec51 0b17 	vmov	r0, r1, d7
 8002af2:	eeb0 8a47 	vmov.f32	s16, s14
 8002af6:	eef0 8a67 	vmov.f32	s17, s15
 8002afa:	2300      	movs	r3, #0
 8002afc:	f7fd ffe4 	bl	8000ac8 <__aeabi_dcmpeq>
 8002b00:	4681      	mov	r9, r0
 8002b02:	b160      	cbz	r0, 8002b1e <_dtoa_r+0xee>
 8002b04:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002b06:	2301      	movs	r3, #1
 8002b08:	6013      	str	r3, [r2, #0]
 8002b0a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002b0c:	2b00      	cmp	r3, #0
 8002b0e:	f000 8568 	beq.w	80035e2 <_dtoa_r+0xbb2>
 8002b12:	4b86      	ldr	r3, [pc, #536]	; (8002d2c <_dtoa_r+0x2fc>)
 8002b14:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002b16:	6013      	str	r3, [r2, #0]
 8002b18:	3b01      	subs	r3, #1
 8002b1a:	9300      	str	r3, [sp, #0]
 8002b1c:	e7da      	b.n	8002ad4 <_dtoa_r+0xa4>
 8002b1e:	aa10      	add	r2, sp, #64	; 0x40
 8002b20:	a911      	add	r1, sp, #68	; 0x44
 8002b22:	4620      	mov	r0, r4
 8002b24:	eeb0 0a48 	vmov.f32	s0, s16
 8002b28:	eef0 0a68 	vmov.f32	s1, s17
 8002b2c:	f001 f994 	bl	8003e58 <__d2b>
 8002b30:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8002b34:	4682      	mov	sl, r0
 8002b36:	2d00      	cmp	r5, #0
 8002b38:	d07f      	beq.n	8002c3a <_dtoa_r+0x20a>
 8002b3a:	ee18 3a90 	vmov	r3, s17
 8002b3e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b42:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8002b46:	ec51 0b18 	vmov	r0, r1, d8
 8002b4a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8002b4e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002b52:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8002b56:	4619      	mov	r1, r3
 8002b58:	2200      	movs	r2, #0
 8002b5a:	4b75      	ldr	r3, [pc, #468]	; (8002d30 <_dtoa_r+0x300>)
 8002b5c:	f7fd fb94 	bl	8000288 <__aeabi_dsub>
 8002b60:	a367      	add	r3, pc, #412	; (adr r3, 8002d00 <_dtoa_r+0x2d0>)
 8002b62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b66:	f7fd fd47 	bl	80005f8 <__aeabi_dmul>
 8002b6a:	a367      	add	r3, pc, #412	; (adr r3, 8002d08 <_dtoa_r+0x2d8>)
 8002b6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b70:	f7fd fb8c 	bl	800028c <__adddf3>
 8002b74:	4606      	mov	r6, r0
 8002b76:	4628      	mov	r0, r5
 8002b78:	460f      	mov	r7, r1
 8002b7a:	f7fd fcd3 	bl	8000524 <__aeabi_i2d>
 8002b7e:	a364      	add	r3, pc, #400	; (adr r3, 8002d10 <_dtoa_r+0x2e0>)
 8002b80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b84:	f7fd fd38 	bl	80005f8 <__aeabi_dmul>
 8002b88:	4602      	mov	r2, r0
 8002b8a:	460b      	mov	r3, r1
 8002b8c:	4630      	mov	r0, r6
 8002b8e:	4639      	mov	r1, r7
 8002b90:	f7fd fb7c 	bl	800028c <__adddf3>
 8002b94:	4606      	mov	r6, r0
 8002b96:	460f      	mov	r7, r1
 8002b98:	f7fd ffde 	bl	8000b58 <__aeabi_d2iz>
 8002b9c:	2200      	movs	r2, #0
 8002b9e:	4683      	mov	fp, r0
 8002ba0:	2300      	movs	r3, #0
 8002ba2:	4630      	mov	r0, r6
 8002ba4:	4639      	mov	r1, r7
 8002ba6:	f7fd ff99 	bl	8000adc <__aeabi_dcmplt>
 8002baa:	b148      	cbz	r0, 8002bc0 <_dtoa_r+0x190>
 8002bac:	4658      	mov	r0, fp
 8002bae:	f7fd fcb9 	bl	8000524 <__aeabi_i2d>
 8002bb2:	4632      	mov	r2, r6
 8002bb4:	463b      	mov	r3, r7
 8002bb6:	f7fd ff87 	bl	8000ac8 <__aeabi_dcmpeq>
 8002bba:	b908      	cbnz	r0, 8002bc0 <_dtoa_r+0x190>
 8002bbc:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002bc0:	f1bb 0f16 	cmp.w	fp, #22
 8002bc4:	d857      	bhi.n	8002c76 <_dtoa_r+0x246>
 8002bc6:	4b5b      	ldr	r3, [pc, #364]	; (8002d34 <_dtoa_r+0x304>)
 8002bc8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002bcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bd0:	ec51 0b18 	vmov	r0, r1, d8
 8002bd4:	f7fd ff82 	bl	8000adc <__aeabi_dcmplt>
 8002bd8:	2800      	cmp	r0, #0
 8002bda:	d04e      	beq.n	8002c7a <_dtoa_r+0x24a>
 8002bdc:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8002be0:	2300      	movs	r3, #0
 8002be2:	930c      	str	r3, [sp, #48]	; 0x30
 8002be4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002be6:	1b5b      	subs	r3, r3, r5
 8002be8:	1e5a      	subs	r2, r3, #1
 8002bea:	bf45      	ittet	mi
 8002bec:	f1c3 0301 	rsbmi	r3, r3, #1
 8002bf0:	9305      	strmi	r3, [sp, #20]
 8002bf2:	2300      	movpl	r3, #0
 8002bf4:	2300      	movmi	r3, #0
 8002bf6:	9206      	str	r2, [sp, #24]
 8002bf8:	bf54      	ite	pl
 8002bfa:	9305      	strpl	r3, [sp, #20]
 8002bfc:	9306      	strmi	r3, [sp, #24]
 8002bfe:	f1bb 0f00 	cmp.w	fp, #0
 8002c02:	db3c      	blt.n	8002c7e <_dtoa_r+0x24e>
 8002c04:	9b06      	ldr	r3, [sp, #24]
 8002c06:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8002c0a:	445b      	add	r3, fp
 8002c0c:	9306      	str	r3, [sp, #24]
 8002c0e:	2300      	movs	r3, #0
 8002c10:	9308      	str	r3, [sp, #32]
 8002c12:	9b07      	ldr	r3, [sp, #28]
 8002c14:	2b09      	cmp	r3, #9
 8002c16:	d868      	bhi.n	8002cea <_dtoa_r+0x2ba>
 8002c18:	2b05      	cmp	r3, #5
 8002c1a:	bfc4      	itt	gt
 8002c1c:	3b04      	subgt	r3, #4
 8002c1e:	9307      	strgt	r3, [sp, #28]
 8002c20:	9b07      	ldr	r3, [sp, #28]
 8002c22:	f1a3 0302 	sub.w	r3, r3, #2
 8002c26:	bfcc      	ite	gt
 8002c28:	2500      	movgt	r5, #0
 8002c2a:	2501      	movle	r5, #1
 8002c2c:	2b03      	cmp	r3, #3
 8002c2e:	f200 8085 	bhi.w	8002d3c <_dtoa_r+0x30c>
 8002c32:	e8df f003 	tbb	[pc, r3]
 8002c36:	3b2e      	.short	0x3b2e
 8002c38:	5839      	.short	0x5839
 8002c3a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8002c3e:	441d      	add	r5, r3
 8002c40:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8002c44:	2b20      	cmp	r3, #32
 8002c46:	bfc1      	itttt	gt
 8002c48:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8002c4c:	fa08 f803 	lslgt.w	r8, r8, r3
 8002c50:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8002c54:	fa26 f303 	lsrgt.w	r3, r6, r3
 8002c58:	bfd6      	itet	le
 8002c5a:	f1c3 0320 	rsble	r3, r3, #32
 8002c5e:	ea48 0003 	orrgt.w	r0, r8, r3
 8002c62:	fa06 f003 	lslle.w	r0, r6, r3
 8002c66:	f7fd fc4d 	bl	8000504 <__aeabi_ui2d>
 8002c6a:	2201      	movs	r2, #1
 8002c6c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8002c70:	3d01      	subs	r5, #1
 8002c72:	920e      	str	r2, [sp, #56]	; 0x38
 8002c74:	e76f      	b.n	8002b56 <_dtoa_r+0x126>
 8002c76:	2301      	movs	r3, #1
 8002c78:	e7b3      	b.n	8002be2 <_dtoa_r+0x1b2>
 8002c7a:	900c      	str	r0, [sp, #48]	; 0x30
 8002c7c:	e7b2      	b.n	8002be4 <_dtoa_r+0x1b4>
 8002c7e:	9b05      	ldr	r3, [sp, #20]
 8002c80:	eba3 030b 	sub.w	r3, r3, fp
 8002c84:	9305      	str	r3, [sp, #20]
 8002c86:	f1cb 0300 	rsb	r3, fp, #0
 8002c8a:	9308      	str	r3, [sp, #32]
 8002c8c:	2300      	movs	r3, #0
 8002c8e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002c90:	e7bf      	b.n	8002c12 <_dtoa_r+0x1e2>
 8002c92:	2300      	movs	r3, #0
 8002c94:	9309      	str	r3, [sp, #36]	; 0x24
 8002c96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	dc52      	bgt.n	8002d42 <_dtoa_r+0x312>
 8002c9c:	2301      	movs	r3, #1
 8002c9e:	9301      	str	r3, [sp, #4]
 8002ca0:	9304      	str	r3, [sp, #16]
 8002ca2:	461a      	mov	r2, r3
 8002ca4:	920a      	str	r2, [sp, #40]	; 0x28
 8002ca6:	e00b      	b.n	8002cc0 <_dtoa_r+0x290>
 8002ca8:	2301      	movs	r3, #1
 8002caa:	e7f3      	b.n	8002c94 <_dtoa_r+0x264>
 8002cac:	2300      	movs	r3, #0
 8002cae:	9309      	str	r3, [sp, #36]	; 0x24
 8002cb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002cb2:	445b      	add	r3, fp
 8002cb4:	9301      	str	r3, [sp, #4]
 8002cb6:	3301      	adds	r3, #1
 8002cb8:	2b01      	cmp	r3, #1
 8002cba:	9304      	str	r3, [sp, #16]
 8002cbc:	bfb8      	it	lt
 8002cbe:	2301      	movlt	r3, #1
 8002cc0:	69e0      	ldr	r0, [r4, #28]
 8002cc2:	2100      	movs	r1, #0
 8002cc4:	2204      	movs	r2, #4
 8002cc6:	f102 0614 	add.w	r6, r2, #20
 8002cca:	429e      	cmp	r6, r3
 8002ccc:	d93d      	bls.n	8002d4a <_dtoa_r+0x31a>
 8002cce:	6041      	str	r1, [r0, #4]
 8002cd0:	4620      	mov	r0, r4
 8002cd2:	f000 fd9f 	bl	8003814 <_Balloc>
 8002cd6:	9000      	str	r0, [sp, #0]
 8002cd8:	2800      	cmp	r0, #0
 8002cda:	d139      	bne.n	8002d50 <_dtoa_r+0x320>
 8002cdc:	4b16      	ldr	r3, [pc, #88]	; (8002d38 <_dtoa_r+0x308>)
 8002cde:	4602      	mov	r2, r0
 8002ce0:	f240 11af 	movw	r1, #431	; 0x1af
 8002ce4:	e6bd      	b.n	8002a62 <_dtoa_r+0x32>
 8002ce6:	2301      	movs	r3, #1
 8002ce8:	e7e1      	b.n	8002cae <_dtoa_r+0x27e>
 8002cea:	2501      	movs	r5, #1
 8002cec:	2300      	movs	r3, #0
 8002cee:	9307      	str	r3, [sp, #28]
 8002cf0:	9509      	str	r5, [sp, #36]	; 0x24
 8002cf2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002cf6:	9301      	str	r3, [sp, #4]
 8002cf8:	9304      	str	r3, [sp, #16]
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	2312      	movs	r3, #18
 8002cfe:	e7d1      	b.n	8002ca4 <_dtoa_r+0x274>
 8002d00:	636f4361 	.word	0x636f4361
 8002d04:	3fd287a7 	.word	0x3fd287a7
 8002d08:	8b60c8b3 	.word	0x8b60c8b3
 8002d0c:	3fc68a28 	.word	0x3fc68a28
 8002d10:	509f79fb 	.word	0x509f79fb
 8002d14:	3fd34413 	.word	0x3fd34413
 8002d18:	0800466e 	.word	0x0800466e
 8002d1c:	08004685 	.word	0x08004685
 8002d20:	7ff00000 	.word	0x7ff00000
 8002d24:	0800466a 	.word	0x0800466a
 8002d28:	08004661 	.word	0x08004661
 8002d2c:	08004602 	.word	0x08004602
 8002d30:	3ff80000 	.word	0x3ff80000
 8002d34:	08004770 	.word	0x08004770
 8002d38:	080046dd 	.word	0x080046dd
 8002d3c:	2301      	movs	r3, #1
 8002d3e:	9309      	str	r3, [sp, #36]	; 0x24
 8002d40:	e7d7      	b.n	8002cf2 <_dtoa_r+0x2c2>
 8002d42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002d44:	9301      	str	r3, [sp, #4]
 8002d46:	9304      	str	r3, [sp, #16]
 8002d48:	e7ba      	b.n	8002cc0 <_dtoa_r+0x290>
 8002d4a:	3101      	adds	r1, #1
 8002d4c:	0052      	lsls	r2, r2, #1
 8002d4e:	e7ba      	b.n	8002cc6 <_dtoa_r+0x296>
 8002d50:	69e3      	ldr	r3, [r4, #28]
 8002d52:	9a00      	ldr	r2, [sp, #0]
 8002d54:	601a      	str	r2, [r3, #0]
 8002d56:	9b04      	ldr	r3, [sp, #16]
 8002d58:	2b0e      	cmp	r3, #14
 8002d5a:	f200 80a8 	bhi.w	8002eae <_dtoa_r+0x47e>
 8002d5e:	2d00      	cmp	r5, #0
 8002d60:	f000 80a5 	beq.w	8002eae <_dtoa_r+0x47e>
 8002d64:	f1bb 0f00 	cmp.w	fp, #0
 8002d68:	dd38      	ble.n	8002ddc <_dtoa_r+0x3ac>
 8002d6a:	4bc0      	ldr	r3, [pc, #768]	; (800306c <_dtoa_r+0x63c>)
 8002d6c:	f00b 020f 	and.w	r2, fp, #15
 8002d70:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002d74:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002d78:	e9d3 6700 	ldrd	r6, r7, [r3]
 8002d7c:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002d80:	d019      	beq.n	8002db6 <_dtoa_r+0x386>
 8002d82:	4bbb      	ldr	r3, [pc, #748]	; (8003070 <_dtoa_r+0x640>)
 8002d84:	ec51 0b18 	vmov	r0, r1, d8
 8002d88:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002d8c:	f7fd fd5e 	bl	800084c <__aeabi_ddiv>
 8002d90:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002d94:	f008 080f 	and.w	r8, r8, #15
 8002d98:	2503      	movs	r5, #3
 8002d9a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8003070 <_dtoa_r+0x640>
 8002d9e:	f1b8 0f00 	cmp.w	r8, #0
 8002da2:	d10a      	bne.n	8002dba <_dtoa_r+0x38a>
 8002da4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002da8:	4632      	mov	r2, r6
 8002daa:	463b      	mov	r3, r7
 8002dac:	f7fd fd4e 	bl	800084c <__aeabi_ddiv>
 8002db0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002db4:	e02b      	b.n	8002e0e <_dtoa_r+0x3de>
 8002db6:	2502      	movs	r5, #2
 8002db8:	e7ef      	b.n	8002d9a <_dtoa_r+0x36a>
 8002dba:	f018 0f01 	tst.w	r8, #1
 8002dbe:	d008      	beq.n	8002dd2 <_dtoa_r+0x3a2>
 8002dc0:	4630      	mov	r0, r6
 8002dc2:	4639      	mov	r1, r7
 8002dc4:	e9d9 2300 	ldrd	r2, r3, [r9]
 8002dc8:	f7fd fc16 	bl	80005f8 <__aeabi_dmul>
 8002dcc:	3501      	adds	r5, #1
 8002dce:	4606      	mov	r6, r0
 8002dd0:	460f      	mov	r7, r1
 8002dd2:	ea4f 0868 	mov.w	r8, r8, asr #1
 8002dd6:	f109 0908 	add.w	r9, r9, #8
 8002dda:	e7e0      	b.n	8002d9e <_dtoa_r+0x36e>
 8002ddc:	f000 809f 	beq.w	8002f1e <_dtoa_r+0x4ee>
 8002de0:	f1cb 0600 	rsb	r6, fp, #0
 8002de4:	4ba1      	ldr	r3, [pc, #644]	; (800306c <_dtoa_r+0x63c>)
 8002de6:	4fa2      	ldr	r7, [pc, #648]	; (8003070 <_dtoa_r+0x640>)
 8002de8:	f006 020f 	and.w	r2, r6, #15
 8002dec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002df0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002df4:	ec51 0b18 	vmov	r0, r1, d8
 8002df8:	f7fd fbfe 	bl	80005f8 <__aeabi_dmul>
 8002dfc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e00:	1136      	asrs	r6, r6, #4
 8002e02:	2300      	movs	r3, #0
 8002e04:	2502      	movs	r5, #2
 8002e06:	2e00      	cmp	r6, #0
 8002e08:	d17e      	bne.n	8002f08 <_dtoa_r+0x4d8>
 8002e0a:	2b00      	cmp	r3, #0
 8002e0c:	d1d0      	bne.n	8002db0 <_dtoa_r+0x380>
 8002e0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002e10:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	f000 8084 	beq.w	8002f22 <_dtoa_r+0x4f2>
 8002e1a:	4b96      	ldr	r3, [pc, #600]	; (8003074 <_dtoa_r+0x644>)
 8002e1c:	2200      	movs	r2, #0
 8002e1e:	4640      	mov	r0, r8
 8002e20:	4649      	mov	r1, r9
 8002e22:	f7fd fe5b 	bl	8000adc <__aeabi_dcmplt>
 8002e26:	2800      	cmp	r0, #0
 8002e28:	d07b      	beq.n	8002f22 <_dtoa_r+0x4f2>
 8002e2a:	9b04      	ldr	r3, [sp, #16]
 8002e2c:	2b00      	cmp	r3, #0
 8002e2e:	d078      	beq.n	8002f22 <_dtoa_r+0x4f2>
 8002e30:	9b01      	ldr	r3, [sp, #4]
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	dd39      	ble.n	8002eaa <_dtoa_r+0x47a>
 8002e36:	4b90      	ldr	r3, [pc, #576]	; (8003078 <_dtoa_r+0x648>)
 8002e38:	2200      	movs	r2, #0
 8002e3a:	4640      	mov	r0, r8
 8002e3c:	4649      	mov	r1, r9
 8002e3e:	f7fd fbdb 	bl	80005f8 <__aeabi_dmul>
 8002e42:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e46:	9e01      	ldr	r6, [sp, #4]
 8002e48:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
 8002e4c:	3501      	adds	r5, #1
 8002e4e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002e52:	4628      	mov	r0, r5
 8002e54:	f7fd fb66 	bl	8000524 <__aeabi_i2d>
 8002e58:	4642      	mov	r2, r8
 8002e5a:	464b      	mov	r3, r9
 8002e5c:	f7fd fbcc 	bl	80005f8 <__aeabi_dmul>
 8002e60:	4b86      	ldr	r3, [pc, #536]	; (800307c <_dtoa_r+0x64c>)
 8002e62:	2200      	movs	r2, #0
 8002e64:	f7fd fa12 	bl	800028c <__adddf3>
 8002e68:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8002e6c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e70:	9303      	str	r3, [sp, #12]
 8002e72:	2e00      	cmp	r6, #0
 8002e74:	d158      	bne.n	8002f28 <_dtoa_r+0x4f8>
 8002e76:	4b82      	ldr	r3, [pc, #520]	; (8003080 <_dtoa_r+0x650>)
 8002e78:	2200      	movs	r2, #0
 8002e7a:	4640      	mov	r0, r8
 8002e7c:	4649      	mov	r1, r9
 8002e7e:	f7fd fa03 	bl	8000288 <__aeabi_dsub>
 8002e82:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002e86:	4680      	mov	r8, r0
 8002e88:	4689      	mov	r9, r1
 8002e8a:	f7fd fe45 	bl	8000b18 <__aeabi_dcmpgt>
 8002e8e:	2800      	cmp	r0, #0
 8002e90:	f040 8296 	bne.w	80033c0 <_dtoa_r+0x990>
 8002e94:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002e98:	4640      	mov	r0, r8
 8002e9a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002e9e:	4649      	mov	r1, r9
 8002ea0:	f7fd fe1c 	bl	8000adc <__aeabi_dcmplt>
 8002ea4:	2800      	cmp	r0, #0
 8002ea6:	f040 8289 	bne.w	80033bc <_dtoa_r+0x98c>
 8002eaa:	ed8d 8b02 	vstr	d8, [sp, #8]
 8002eae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002eb0:	2b00      	cmp	r3, #0
 8002eb2:	f2c0 814e 	blt.w	8003152 <_dtoa_r+0x722>
 8002eb6:	f1bb 0f0e 	cmp.w	fp, #14
 8002eba:	f300 814a 	bgt.w	8003152 <_dtoa_r+0x722>
 8002ebe:	4b6b      	ldr	r3, [pc, #428]	; (800306c <_dtoa_r+0x63c>)
 8002ec0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002ec4:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002ec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	f280 80dc 	bge.w	8003088 <_dtoa_r+0x658>
 8002ed0:	9b04      	ldr	r3, [sp, #16]
 8002ed2:	2b00      	cmp	r3, #0
 8002ed4:	f300 80d8 	bgt.w	8003088 <_dtoa_r+0x658>
 8002ed8:	f040 826f 	bne.w	80033ba <_dtoa_r+0x98a>
 8002edc:	4b68      	ldr	r3, [pc, #416]	; (8003080 <_dtoa_r+0x650>)
 8002ede:	2200      	movs	r2, #0
 8002ee0:	4640      	mov	r0, r8
 8002ee2:	4649      	mov	r1, r9
 8002ee4:	f7fd fb88 	bl	80005f8 <__aeabi_dmul>
 8002ee8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002eec:	f7fd fe0a 	bl	8000b04 <__aeabi_dcmpge>
 8002ef0:	9e04      	ldr	r6, [sp, #16]
 8002ef2:	4637      	mov	r7, r6
 8002ef4:	2800      	cmp	r0, #0
 8002ef6:	f040 8245 	bne.w	8003384 <_dtoa_r+0x954>
 8002efa:	9d00      	ldr	r5, [sp, #0]
 8002efc:	2331      	movs	r3, #49	; 0x31
 8002efe:	f805 3b01 	strb.w	r3, [r5], #1
 8002f02:	f10b 0b01 	add.w	fp, fp, #1
 8002f06:	e241      	b.n	800338c <_dtoa_r+0x95c>
 8002f08:	07f2      	lsls	r2, r6, #31
 8002f0a:	d505      	bpl.n	8002f18 <_dtoa_r+0x4e8>
 8002f0c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002f10:	f7fd fb72 	bl	80005f8 <__aeabi_dmul>
 8002f14:	3501      	adds	r5, #1
 8002f16:	2301      	movs	r3, #1
 8002f18:	1076      	asrs	r6, r6, #1
 8002f1a:	3708      	adds	r7, #8
 8002f1c:	e773      	b.n	8002e06 <_dtoa_r+0x3d6>
 8002f1e:	2502      	movs	r5, #2
 8002f20:	e775      	b.n	8002e0e <_dtoa_r+0x3de>
 8002f22:	9e04      	ldr	r6, [sp, #16]
 8002f24:	465f      	mov	r7, fp
 8002f26:	e792      	b.n	8002e4e <_dtoa_r+0x41e>
 8002f28:	9900      	ldr	r1, [sp, #0]
 8002f2a:	4b50      	ldr	r3, [pc, #320]	; (800306c <_dtoa_r+0x63c>)
 8002f2c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002f30:	4431      	add	r1, r6
 8002f32:	9102      	str	r1, [sp, #8]
 8002f34:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002f36:	eeb0 9a47 	vmov.f32	s18, s14
 8002f3a:	eef0 9a67 	vmov.f32	s19, s15
 8002f3e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002f42:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002f46:	2900      	cmp	r1, #0
 8002f48:	d044      	beq.n	8002fd4 <_dtoa_r+0x5a4>
 8002f4a:	494e      	ldr	r1, [pc, #312]	; (8003084 <_dtoa_r+0x654>)
 8002f4c:	2000      	movs	r0, #0
 8002f4e:	f7fd fc7d 	bl	800084c <__aeabi_ddiv>
 8002f52:	ec53 2b19 	vmov	r2, r3, d9
 8002f56:	f7fd f997 	bl	8000288 <__aeabi_dsub>
 8002f5a:	9d00      	ldr	r5, [sp, #0]
 8002f5c:	ec41 0b19 	vmov	d9, r0, r1
 8002f60:	4649      	mov	r1, r9
 8002f62:	4640      	mov	r0, r8
 8002f64:	f7fd fdf8 	bl	8000b58 <__aeabi_d2iz>
 8002f68:	4606      	mov	r6, r0
 8002f6a:	f7fd fadb 	bl	8000524 <__aeabi_i2d>
 8002f6e:	4602      	mov	r2, r0
 8002f70:	460b      	mov	r3, r1
 8002f72:	4640      	mov	r0, r8
 8002f74:	4649      	mov	r1, r9
 8002f76:	f7fd f987 	bl	8000288 <__aeabi_dsub>
 8002f7a:	3630      	adds	r6, #48	; 0x30
 8002f7c:	f805 6b01 	strb.w	r6, [r5], #1
 8002f80:	ec53 2b19 	vmov	r2, r3, d9
 8002f84:	4680      	mov	r8, r0
 8002f86:	4689      	mov	r9, r1
 8002f88:	f7fd fda8 	bl	8000adc <__aeabi_dcmplt>
 8002f8c:	2800      	cmp	r0, #0
 8002f8e:	d164      	bne.n	800305a <_dtoa_r+0x62a>
 8002f90:	4642      	mov	r2, r8
 8002f92:	464b      	mov	r3, r9
 8002f94:	4937      	ldr	r1, [pc, #220]	; (8003074 <_dtoa_r+0x644>)
 8002f96:	2000      	movs	r0, #0
 8002f98:	f7fd f976 	bl	8000288 <__aeabi_dsub>
 8002f9c:	ec53 2b19 	vmov	r2, r3, d9
 8002fa0:	f7fd fd9c 	bl	8000adc <__aeabi_dcmplt>
 8002fa4:	2800      	cmp	r0, #0
 8002fa6:	f040 80b6 	bne.w	8003116 <_dtoa_r+0x6e6>
 8002faa:	9b02      	ldr	r3, [sp, #8]
 8002fac:	429d      	cmp	r5, r3
 8002fae:	f43f af7c 	beq.w	8002eaa <_dtoa_r+0x47a>
 8002fb2:	4b31      	ldr	r3, [pc, #196]	; (8003078 <_dtoa_r+0x648>)
 8002fb4:	ec51 0b19 	vmov	r0, r1, d9
 8002fb8:	2200      	movs	r2, #0
 8002fba:	f7fd fb1d 	bl	80005f8 <__aeabi_dmul>
 8002fbe:	4b2e      	ldr	r3, [pc, #184]	; (8003078 <_dtoa_r+0x648>)
 8002fc0:	ec41 0b19 	vmov	d9, r0, r1
 8002fc4:	2200      	movs	r2, #0
 8002fc6:	4640      	mov	r0, r8
 8002fc8:	4649      	mov	r1, r9
 8002fca:	f7fd fb15 	bl	80005f8 <__aeabi_dmul>
 8002fce:	4680      	mov	r8, r0
 8002fd0:	4689      	mov	r9, r1
 8002fd2:	e7c5      	b.n	8002f60 <_dtoa_r+0x530>
 8002fd4:	ec51 0b17 	vmov	r0, r1, d7
 8002fd8:	f7fd fb0e 	bl	80005f8 <__aeabi_dmul>
 8002fdc:	9b02      	ldr	r3, [sp, #8]
 8002fde:	9d00      	ldr	r5, [sp, #0]
 8002fe0:	930f      	str	r3, [sp, #60]	; 0x3c
 8002fe2:	ec41 0b19 	vmov	d9, r0, r1
 8002fe6:	4649      	mov	r1, r9
 8002fe8:	4640      	mov	r0, r8
 8002fea:	f7fd fdb5 	bl	8000b58 <__aeabi_d2iz>
 8002fee:	4606      	mov	r6, r0
 8002ff0:	f7fd fa98 	bl	8000524 <__aeabi_i2d>
 8002ff4:	3630      	adds	r6, #48	; 0x30
 8002ff6:	4602      	mov	r2, r0
 8002ff8:	460b      	mov	r3, r1
 8002ffa:	4640      	mov	r0, r8
 8002ffc:	4649      	mov	r1, r9
 8002ffe:	f7fd f943 	bl	8000288 <__aeabi_dsub>
 8003002:	f805 6b01 	strb.w	r6, [r5], #1
 8003006:	9b02      	ldr	r3, [sp, #8]
 8003008:	429d      	cmp	r5, r3
 800300a:	4680      	mov	r8, r0
 800300c:	4689      	mov	r9, r1
 800300e:	f04f 0200 	mov.w	r2, #0
 8003012:	d124      	bne.n	800305e <_dtoa_r+0x62e>
 8003014:	4b1b      	ldr	r3, [pc, #108]	; (8003084 <_dtoa_r+0x654>)
 8003016:	ec51 0b19 	vmov	r0, r1, d9
 800301a:	f7fd f937 	bl	800028c <__adddf3>
 800301e:	4602      	mov	r2, r0
 8003020:	460b      	mov	r3, r1
 8003022:	4640      	mov	r0, r8
 8003024:	4649      	mov	r1, r9
 8003026:	f7fd fd77 	bl	8000b18 <__aeabi_dcmpgt>
 800302a:	2800      	cmp	r0, #0
 800302c:	d173      	bne.n	8003116 <_dtoa_r+0x6e6>
 800302e:	ec53 2b19 	vmov	r2, r3, d9
 8003032:	4914      	ldr	r1, [pc, #80]	; (8003084 <_dtoa_r+0x654>)
 8003034:	2000      	movs	r0, #0
 8003036:	f7fd f927 	bl	8000288 <__aeabi_dsub>
 800303a:	4602      	mov	r2, r0
 800303c:	460b      	mov	r3, r1
 800303e:	4640      	mov	r0, r8
 8003040:	4649      	mov	r1, r9
 8003042:	f7fd fd4b 	bl	8000adc <__aeabi_dcmplt>
 8003046:	2800      	cmp	r0, #0
 8003048:	f43f af2f 	beq.w	8002eaa <_dtoa_r+0x47a>
 800304c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800304e:	1e6b      	subs	r3, r5, #1
 8003050:	930f      	str	r3, [sp, #60]	; 0x3c
 8003052:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003056:	2b30      	cmp	r3, #48	; 0x30
 8003058:	d0f8      	beq.n	800304c <_dtoa_r+0x61c>
 800305a:	46bb      	mov	fp, r7
 800305c:	e04a      	b.n	80030f4 <_dtoa_r+0x6c4>
 800305e:	4b06      	ldr	r3, [pc, #24]	; (8003078 <_dtoa_r+0x648>)
 8003060:	f7fd faca 	bl	80005f8 <__aeabi_dmul>
 8003064:	4680      	mov	r8, r0
 8003066:	4689      	mov	r9, r1
 8003068:	e7bd      	b.n	8002fe6 <_dtoa_r+0x5b6>
 800306a:	bf00      	nop
 800306c:	08004770 	.word	0x08004770
 8003070:	08004748 	.word	0x08004748
 8003074:	3ff00000 	.word	0x3ff00000
 8003078:	40240000 	.word	0x40240000
 800307c:	401c0000 	.word	0x401c0000
 8003080:	40140000 	.word	0x40140000
 8003084:	3fe00000 	.word	0x3fe00000
 8003088:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800308c:	9d00      	ldr	r5, [sp, #0]
 800308e:	4642      	mov	r2, r8
 8003090:	464b      	mov	r3, r9
 8003092:	4630      	mov	r0, r6
 8003094:	4639      	mov	r1, r7
 8003096:	f7fd fbd9 	bl	800084c <__aeabi_ddiv>
 800309a:	f7fd fd5d 	bl	8000b58 <__aeabi_d2iz>
 800309e:	9001      	str	r0, [sp, #4]
 80030a0:	f7fd fa40 	bl	8000524 <__aeabi_i2d>
 80030a4:	4642      	mov	r2, r8
 80030a6:	464b      	mov	r3, r9
 80030a8:	f7fd faa6 	bl	80005f8 <__aeabi_dmul>
 80030ac:	4602      	mov	r2, r0
 80030ae:	460b      	mov	r3, r1
 80030b0:	4630      	mov	r0, r6
 80030b2:	4639      	mov	r1, r7
 80030b4:	f7fd f8e8 	bl	8000288 <__aeabi_dsub>
 80030b8:	9e01      	ldr	r6, [sp, #4]
 80030ba:	9f04      	ldr	r7, [sp, #16]
 80030bc:	3630      	adds	r6, #48	; 0x30
 80030be:	f805 6b01 	strb.w	r6, [r5], #1
 80030c2:	9e00      	ldr	r6, [sp, #0]
 80030c4:	1bae      	subs	r6, r5, r6
 80030c6:	42b7      	cmp	r7, r6
 80030c8:	4602      	mov	r2, r0
 80030ca:	460b      	mov	r3, r1
 80030cc:	d134      	bne.n	8003138 <_dtoa_r+0x708>
 80030ce:	f7fd f8dd 	bl	800028c <__adddf3>
 80030d2:	4642      	mov	r2, r8
 80030d4:	464b      	mov	r3, r9
 80030d6:	4606      	mov	r6, r0
 80030d8:	460f      	mov	r7, r1
 80030da:	f7fd fd1d 	bl	8000b18 <__aeabi_dcmpgt>
 80030de:	b9c8      	cbnz	r0, 8003114 <_dtoa_r+0x6e4>
 80030e0:	4642      	mov	r2, r8
 80030e2:	464b      	mov	r3, r9
 80030e4:	4630      	mov	r0, r6
 80030e6:	4639      	mov	r1, r7
 80030e8:	f7fd fcee 	bl	8000ac8 <__aeabi_dcmpeq>
 80030ec:	b110      	cbz	r0, 80030f4 <_dtoa_r+0x6c4>
 80030ee:	9b01      	ldr	r3, [sp, #4]
 80030f0:	07db      	lsls	r3, r3, #31
 80030f2:	d40f      	bmi.n	8003114 <_dtoa_r+0x6e4>
 80030f4:	4651      	mov	r1, sl
 80030f6:	4620      	mov	r0, r4
 80030f8:	f000 fbcc 	bl	8003894 <_Bfree>
 80030fc:	2300      	movs	r3, #0
 80030fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003100:	702b      	strb	r3, [r5, #0]
 8003102:	f10b 0301 	add.w	r3, fp, #1
 8003106:	6013      	str	r3, [r2, #0]
 8003108:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800310a:	2b00      	cmp	r3, #0
 800310c:	f43f ace2 	beq.w	8002ad4 <_dtoa_r+0xa4>
 8003110:	601d      	str	r5, [r3, #0]
 8003112:	e4df      	b.n	8002ad4 <_dtoa_r+0xa4>
 8003114:	465f      	mov	r7, fp
 8003116:	462b      	mov	r3, r5
 8003118:	461d      	mov	r5, r3
 800311a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800311e:	2a39      	cmp	r2, #57	; 0x39
 8003120:	d106      	bne.n	8003130 <_dtoa_r+0x700>
 8003122:	9a00      	ldr	r2, [sp, #0]
 8003124:	429a      	cmp	r2, r3
 8003126:	d1f7      	bne.n	8003118 <_dtoa_r+0x6e8>
 8003128:	9900      	ldr	r1, [sp, #0]
 800312a:	2230      	movs	r2, #48	; 0x30
 800312c:	3701      	adds	r7, #1
 800312e:	700a      	strb	r2, [r1, #0]
 8003130:	781a      	ldrb	r2, [r3, #0]
 8003132:	3201      	adds	r2, #1
 8003134:	701a      	strb	r2, [r3, #0]
 8003136:	e790      	b.n	800305a <_dtoa_r+0x62a>
 8003138:	4ba3      	ldr	r3, [pc, #652]	; (80033c8 <_dtoa_r+0x998>)
 800313a:	2200      	movs	r2, #0
 800313c:	f7fd fa5c 	bl	80005f8 <__aeabi_dmul>
 8003140:	2200      	movs	r2, #0
 8003142:	2300      	movs	r3, #0
 8003144:	4606      	mov	r6, r0
 8003146:	460f      	mov	r7, r1
 8003148:	f7fd fcbe 	bl	8000ac8 <__aeabi_dcmpeq>
 800314c:	2800      	cmp	r0, #0
 800314e:	d09e      	beq.n	800308e <_dtoa_r+0x65e>
 8003150:	e7d0      	b.n	80030f4 <_dtoa_r+0x6c4>
 8003152:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003154:	2a00      	cmp	r2, #0
 8003156:	f000 80ca 	beq.w	80032ee <_dtoa_r+0x8be>
 800315a:	9a07      	ldr	r2, [sp, #28]
 800315c:	2a01      	cmp	r2, #1
 800315e:	f300 80ad 	bgt.w	80032bc <_dtoa_r+0x88c>
 8003162:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003164:	2a00      	cmp	r2, #0
 8003166:	f000 80a5 	beq.w	80032b4 <_dtoa_r+0x884>
 800316a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800316e:	9e08      	ldr	r6, [sp, #32]
 8003170:	9d05      	ldr	r5, [sp, #20]
 8003172:	9a05      	ldr	r2, [sp, #20]
 8003174:	441a      	add	r2, r3
 8003176:	9205      	str	r2, [sp, #20]
 8003178:	9a06      	ldr	r2, [sp, #24]
 800317a:	2101      	movs	r1, #1
 800317c:	441a      	add	r2, r3
 800317e:	4620      	mov	r0, r4
 8003180:	9206      	str	r2, [sp, #24]
 8003182:	f000 fc3d 	bl	8003a00 <__i2b>
 8003186:	4607      	mov	r7, r0
 8003188:	b165      	cbz	r5, 80031a4 <_dtoa_r+0x774>
 800318a:	9b06      	ldr	r3, [sp, #24]
 800318c:	2b00      	cmp	r3, #0
 800318e:	dd09      	ble.n	80031a4 <_dtoa_r+0x774>
 8003190:	42ab      	cmp	r3, r5
 8003192:	9a05      	ldr	r2, [sp, #20]
 8003194:	bfa8      	it	ge
 8003196:	462b      	movge	r3, r5
 8003198:	1ad2      	subs	r2, r2, r3
 800319a:	9205      	str	r2, [sp, #20]
 800319c:	9a06      	ldr	r2, [sp, #24]
 800319e:	1aed      	subs	r5, r5, r3
 80031a0:	1ad3      	subs	r3, r2, r3
 80031a2:	9306      	str	r3, [sp, #24]
 80031a4:	9b08      	ldr	r3, [sp, #32]
 80031a6:	b1f3      	cbz	r3, 80031e6 <_dtoa_r+0x7b6>
 80031a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	f000 80a3 	beq.w	80032f6 <_dtoa_r+0x8c6>
 80031b0:	2e00      	cmp	r6, #0
 80031b2:	dd10      	ble.n	80031d6 <_dtoa_r+0x7a6>
 80031b4:	4639      	mov	r1, r7
 80031b6:	4632      	mov	r2, r6
 80031b8:	4620      	mov	r0, r4
 80031ba:	f000 fce1 	bl	8003b80 <__pow5mult>
 80031be:	4652      	mov	r2, sl
 80031c0:	4601      	mov	r1, r0
 80031c2:	4607      	mov	r7, r0
 80031c4:	4620      	mov	r0, r4
 80031c6:	f000 fc31 	bl	8003a2c <__multiply>
 80031ca:	4651      	mov	r1, sl
 80031cc:	4680      	mov	r8, r0
 80031ce:	4620      	mov	r0, r4
 80031d0:	f000 fb60 	bl	8003894 <_Bfree>
 80031d4:	46c2      	mov	sl, r8
 80031d6:	9b08      	ldr	r3, [sp, #32]
 80031d8:	1b9a      	subs	r2, r3, r6
 80031da:	d004      	beq.n	80031e6 <_dtoa_r+0x7b6>
 80031dc:	4651      	mov	r1, sl
 80031de:	4620      	mov	r0, r4
 80031e0:	f000 fcce 	bl	8003b80 <__pow5mult>
 80031e4:	4682      	mov	sl, r0
 80031e6:	2101      	movs	r1, #1
 80031e8:	4620      	mov	r0, r4
 80031ea:	f000 fc09 	bl	8003a00 <__i2b>
 80031ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80031f0:	2b00      	cmp	r3, #0
 80031f2:	4606      	mov	r6, r0
 80031f4:	f340 8081 	ble.w	80032fa <_dtoa_r+0x8ca>
 80031f8:	461a      	mov	r2, r3
 80031fa:	4601      	mov	r1, r0
 80031fc:	4620      	mov	r0, r4
 80031fe:	f000 fcbf 	bl	8003b80 <__pow5mult>
 8003202:	9b07      	ldr	r3, [sp, #28]
 8003204:	2b01      	cmp	r3, #1
 8003206:	4606      	mov	r6, r0
 8003208:	dd7a      	ble.n	8003300 <_dtoa_r+0x8d0>
 800320a:	f04f 0800 	mov.w	r8, #0
 800320e:	6933      	ldr	r3, [r6, #16]
 8003210:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8003214:	6918      	ldr	r0, [r3, #16]
 8003216:	f000 fba5 	bl	8003964 <__hi0bits>
 800321a:	f1c0 0020 	rsb	r0, r0, #32
 800321e:	9b06      	ldr	r3, [sp, #24]
 8003220:	4418      	add	r0, r3
 8003222:	f010 001f 	ands.w	r0, r0, #31
 8003226:	f000 8094 	beq.w	8003352 <_dtoa_r+0x922>
 800322a:	f1c0 0320 	rsb	r3, r0, #32
 800322e:	2b04      	cmp	r3, #4
 8003230:	f340 8085 	ble.w	800333e <_dtoa_r+0x90e>
 8003234:	9b05      	ldr	r3, [sp, #20]
 8003236:	f1c0 001c 	rsb	r0, r0, #28
 800323a:	4403      	add	r3, r0
 800323c:	9305      	str	r3, [sp, #20]
 800323e:	9b06      	ldr	r3, [sp, #24]
 8003240:	4403      	add	r3, r0
 8003242:	4405      	add	r5, r0
 8003244:	9306      	str	r3, [sp, #24]
 8003246:	9b05      	ldr	r3, [sp, #20]
 8003248:	2b00      	cmp	r3, #0
 800324a:	dd05      	ble.n	8003258 <_dtoa_r+0x828>
 800324c:	4651      	mov	r1, sl
 800324e:	461a      	mov	r2, r3
 8003250:	4620      	mov	r0, r4
 8003252:	f000 fcef 	bl	8003c34 <__lshift>
 8003256:	4682      	mov	sl, r0
 8003258:	9b06      	ldr	r3, [sp, #24]
 800325a:	2b00      	cmp	r3, #0
 800325c:	dd05      	ble.n	800326a <_dtoa_r+0x83a>
 800325e:	4631      	mov	r1, r6
 8003260:	461a      	mov	r2, r3
 8003262:	4620      	mov	r0, r4
 8003264:	f000 fce6 	bl	8003c34 <__lshift>
 8003268:	4606      	mov	r6, r0
 800326a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800326c:	2b00      	cmp	r3, #0
 800326e:	d072      	beq.n	8003356 <_dtoa_r+0x926>
 8003270:	4631      	mov	r1, r6
 8003272:	4650      	mov	r0, sl
 8003274:	f000 fd4a 	bl	8003d0c <__mcmp>
 8003278:	2800      	cmp	r0, #0
 800327a:	da6c      	bge.n	8003356 <_dtoa_r+0x926>
 800327c:	2300      	movs	r3, #0
 800327e:	4651      	mov	r1, sl
 8003280:	220a      	movs	r2, #10
 8003282:	4620      	mov	r0, r4
 8003284:	f000 fb28 	bl	80038d8 <__multadd>
 8003288:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800328a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800328e:	4682      	mov	sl, r0
 8003290:	2b00      	cmp	r3, #0
 8003292:	f000 81b0 	beq.w	80035f6 <_dtoa_r+0xbc6>
 8003296:	2300      	movs	r3, #0
 8003298:	4639      	mov	r1, r7
 800329a:	220a      	movs	r2, #10
 800329c:	4620      	mov	r0, r4
 800329e:	f000 fb1b 	bl	80038d8 <__multadd>
 80032a2:	9b01      	ldr	r3, [sp, #4]
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	4607      	mov	r7, r0
 80032a8:	f300 8096 	bgt.w	80033d8 <_dtoa_r+0x9a8>
 80032ac:	9b07      	ldr	r3, [sp, #28]
 80032ae:	2b02      	cmp	r3, #2
 80032b0:	dc59      	bgt.n	8003366 <_dtoa_r+0x936>
 80032b2:	e091      	b.n	80033d8 <_dtoa_r+0x9a8>
 80032b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80032b6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80032ba:	e758      	b.n	800316e <_dtoa_r+0x73e>
 80032bc:	9b04      	ldr	r3, [sp, #16]
 80032be:	1e5e      	subs	r6, r3, #1
 80032c0:	9b08      	ldr	r3, [sp, #32]
 80032c2:	42b3      	cmp	r3, r6
 80032c4:	bfbf      	itttt	lt
 80032c6:	9b08      	ldrlt	r3, [sp, #32]
 80032c8:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 80032ca:	9608      	strlt	r6, [sp, #32]
 80032cc:	1af3      	sublt	r3, r6, r3
 80032ce:	bfb4      	ite	lt
 80032d0:	18d2      	addlt	r2, r2, r3
 80032d2:	1b9e      	subge	r6, r3, r6
 80032d4:	9b04      	ldr	r3, [sp, #16]
 80032d6:	bfbc      	itt	lt
 80032d8:	920b      	strlt	r2, [sp, #44]	; 0x2c
 80032da:	2600      	movlt	r6, #0
 80032dc:	2b00      	cmp	r3, #0
 80032de:	bfb7      	itett	lt
 80032e0:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 80032e4:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 80032e8:	1a9d      	sublt	r5, r3, r2
 80032ea:	2300      	movlt	r3, #0
 80032ec:	e741      	b.n	8003172 <_dtoa_r+0x742>
 80032ee:	9e08      	ldr	r6, [sp, #32]
 80032f0:	9d05      	ldr	r5, [sp, #20]
 80032f2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80032f4:	e748      	b.n	8003188 <_dtoa_r+0x758>
 80032f6:	9a08      	ldr	r2, [sp, #32]
 80032f8:	e770      	b.n	80031dc <_dtoa_r+0x7ac>
 80032fa:	9b07      	ldr	r3, [sp, #28]
 80032fc:	2b01      	cmp	r3, #1
 80032fe:	dc19      	bgt.n	8003334 <_dtoa_r+0x904>
 8003300:	9b02      	ldr	r3, [sp, #8]
 8003302:	b9bb      	cbnz	r3, 8003334 <_dtoa_r+0x904>
 8003304:	9b03      	ldr	r3, [sp, #12]
 8003306:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800330a:	b99b      	cbnz	r3, 8003334 <_dtoa_r+0x904>
 800330c:	9b03      	ldr	r3, [sp, #12]
 800330e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003312:	0d1b      	lsrs	r3, r3, #20
 8003314:	051b      	lsls	r3, r3, #20
 8003316:	b183      	cbz	r3, 800333a <_dtoa_r+0x90a>
 8003318:	9b05      	ldr	r3, [sp, #20]
 800331a:	3301      	adds	r3, #1
 800331c:	9305      	str	r3, [sp, #20]
 800331e:	9b06      	ldr	r3, [sp, #24]
 8003320:	3301      	adds	r3, #1
 8003322:	9306      	str	r3, [sp, #24]
 8003324:	f04f 0801 	mov.w	r8, #1
 8003328:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800332a:	2b00      	cmp	r3, #0
 800332c:	f47f af6f 	bne.w	800320e <_dtoa_r+0x7de>
 8003330:	2001      	movs	r0, #1
 8003332:	e774      	b.n	800321e <_dtoa_r+0x7ee>
 8003334:	f04f 0800 	mov.w	r8, #0
 8003338:	e7f6      	b.n	8003328 <_dtoa_r+0x8f8>
 800333a:	4698      	mov	r8, r3
 800333c:	e7f4      	b.n	8003328 <_dtoa_r+0x8f8>
 800333e:	d082      	beq.n	8003246 <_dtoa_r+0x816>
 8003340:	9a05      	ldr	r2, [sp, #20]
 8003342:	331c      	adds	r3, #28
 8003344:	441a      	add	r2, r3
 8003346:	9205      	str	r2, [sp, #20]
 8003348:	9a06      	ldr	r2, [sp, #24]
 800334a:	441a      	add	r2, r3
 800334c:	441d      	add	r5, r3
 800334e:	9206      	str	r2, [sp, #24]
 8003350:	e779      	b.n	8003246 <_dtoa_r+0x816>
 8003352:	4603      	mov	r3, r0
 8003354:	e7f4      	b.n	8003340 <_dtoa_r+0x910>
 8003356:	9b04      	ldr	r3, [sp, #16]
 8003358:	2b00      	cmp	r3, #0
 800335a:	dc37      	bgt.n	80033cc <_dtoa_r+0x99c>
 800335c:	9b07      	ldr	r3, [sp, #28]
 800335e:	2b02      	cmp	r3, #2
 8003360:	dd34      	ble.n	80033cc <_dtoa_r+0x99c>
 8003362:	9b04      	ldr	r3, [sp, #16]
 8003364:	9301      	str	r3, [sp, #4]
 8003366:	9b01      	ldr	r3, [sp, #4]
 8003368:	b963      	cbnz	r3, 8003384 <_dtoa_r+0x954>
 800336a:	4631      	mov	r1, r6
 800336c:	2205      	movs	r2, #5
 800336e:	4620      	mov	r0, r4
 8003370:	f000 fab2 	bl	80038d8 <__multadd>
 8003374:	4601      	mov	r1, r0
 8003376:	4606      	mov	r6, r0
 8003378:	4650      	mov	r0, sl
 800337a:	f000 fcc7 	bl	8003d0c <__mcmp>
 800337e:	2800      	cmp	r0, #0
 8003380:	f73f adbb 	bgt.w	8002efa <_dtoa_r+0x4ca>
 8003384:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003386:	9d00      	ldr	r5, [sp, #0]
 8003388:	ea6f 0b03 	mvn.w	fp, r3
 800338c:	f04f 0800 	mov.w	r8, #0
 8003390:	4631      	mov	r1, r6
 8003392:	4620      	mov	r0, r4
 8003394:	f000 fa7e 	bl	8003894 <_Bfree>
 8003398:	2f00      	cmp	r7, #0
 800339a:	f43f aeab 	beq.w	80030f4 <_dtoa_r+0x6c4>
 800339e:	f1b8 0f00 	cmp.w	r8, #0
 80033a2:	d005      	beq.n	80033b0 <_dtoa_r+0x980>
 80033a4:	45b8      	cmp	r8, r7
 80033a6:	d003      	beq.n	80033b0 <_dtoa_r+0x980>
 80033a8:	4641      	mov	r1, r8
 80033aa:	4620      	mov	r0, r4
 80033ac:	f000 fa72 	bl	8003894 <_Bfree>
 80033b0:	4639      	mov	r1, r7
 80033b2:	4620      	mov	r0, r4
 80033b4:	f000 fa6e 	bl	8003894 <_Bfree>
 80033b8:	e69c      	b.n	80030f4 <_dtoa_r+0x6c4>
 80033ba:	2600      	movs	r6, #0
 80033bc:	4637      	mov	r7, r6
 80033be:	e7e1      	b.n	8003384 <_dtoa_r+0x954>
 80033c0:	46bb      	mov	fp, r7
 80033c2:	4637      	mov	r7, r6
 80033c4:	e599      	b.n	8002efa <_dtoa_r+0x4ca>
 80033c6:	bf00      	nop
 80033c8:	40240000 	.word	0x40240000
 80033cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	f000 80c8 	beq.w	8003564 <_dtoa_r+0xb34>
 80033d4:	9b04      	ldr	r3, [sp, #16]
 80033d6:	9301      	str	r3, [sp, #4]
 80033d8:	2d00      	cmp	r5, #0
 80033da:	dd05      	ble.n	80033e8 <_dtoa_r+0x9b8>
 80033dc:	4639      	mov	r1, r7
 80033de:	462a      	mov	r2, r5
 80033e0:	4620      	mov	r0, r4
 80033e2:	f000 fc27 	bl	8003c34 <__lshift>
 80033e6:	4607      	mov	r7, r0
 80033e8:	f1b8 0f00 	cmp.w	r8, #0
 80033ec:	d05b      	beq.n	80034a6 <_dtoa_r+0xa76>
 80033ee:	6879      	ldr	r1, [r7, #4]
 80033f0:	4620      	mov	r0, r4
 80033f2:	f000 fa0f 	bl	8003814 <_Balloc>
 80033f6:	4605      	mov	r5, r0
 80033f8:	b928      	cbnz	r0, 8003406 <_dtoa_r+0x9d6>
 80033fa:	4b83      	ldr	r3, [pc, #524]	; (8003608 <_dtoa_r+0xbd8>)
 80033fc:	4602      	mov	r2, r0
 80033fe:	f240 21ef 	movw	r1, #751	; 0x2ef
 8003402:	f7ff bb2e 	b.w	8002a62 <_dtoa_r+0x32>
 8003406:	693a      	ldr	r2, [r7, #16]
 8003408:	3202      	adds	r2, #2
 800340a:	0092      	lsls	r2, r2, #2
 800340c:	f107 010c 	add.w	r1, r7, #12
 8003410:	300c      	adds	r0, #12
 8003412:	f7ff fa59 	bl	80028c8 <memcpy>
 8003416:	2201      	movs	r2, #1
 8003418:	4629      	mov	r1, r5
 800341a:	4620      	mov	r0, r4
 800341c:	f000 fc0a 	bl	8003c34 <__lshift>
 8003420:	9b00      	ldr	r3, [sp, #0]
 8003422:	3301      	adds	r3, #1
 8003424:	9304      	str	r3, [sp, #16]
 8003426:	e9dd 2300 	ldrd	r2, r3, [sp]
 800342a:	4413      	add	r3, r2
 800342c:	9308      	str	r3, [sp, #32]
 800342e:	9b02      	ldr	r3, [sp, #8]
 8003430:	f003 0301 	and.w	r3, r3, #1
 8003434:	46b8      	mov	r8, r7
 8003436:	9306      	str	r3, [sp, #24]
 8003438:	4607      	mov	r7, r0
 800343a:	9b04      	ldr	r3, [sp, #16]
 800343c:	4631      	mov	r1, r6
 800343e:	3b01      	subs	r3, #1
 8003440:	4650      	mov	r0, sl
 8003442:	9301      	str	r3, [sp, #4]
 8003444:	f7ff fa6c 	bl	8002920 <quorem>
 8003448:	4641      	mov	r1, r8
 800344a:	9002      	str	r0, [sp, #8]
 800344c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003450:	4650      	mov	r0, sl
 8003452:	f000 fc5b 	bl	8003d0c <__mcmp>
 8003456:	463a      	mov	r2, r7
 8003458:	9005      	str	r0, [sp, #20]
 800345a:	4631      	mov	r1, r6
 800345c:	4620      	mov	r0, r4
 800345e:	f000 fc71 	bl	8003d44 <__mdiff>
 8003462:	68c2      	ldr	r2, [r0, #12]
 8003464:	4605      	mov	r5, r0
 8003466:	bb02      	cbnz	r2, 80034aa <_dtoa_r+0xa7a>
 8003468:	4601      	mov	r1, r0
 800346a:	4650      	mov	r0, sl
 800346c:	f000 fc4e 	bl	8003d0c <__mcmp>
 8003470:	4602      	mov	r2, r0
 8003472:	4629      	mov	r1, r5
 8003474:	4620      	mov	r0, r4
 8003476:	9209      	str	r2, [sp, #36]	; 0x24
 8003478:	f000 fa0c 	bl	8003894 <_Bfree>
 800347c:	9b07      	ldr	r3, [sp, #28]
 800347e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003480:	9d04      	ldr	r5, [sp, #16]
 8003482:	ea43 0102 	orr.w	r1, r3, r2
 8003486:	9b06      	ldr	r3, [sp, #24]
 8003488:	4319      	orrs	r1, r3
 800348a:	d110      	bne.n	80034ae <_dtoa_r+0xa7e>
 800348c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003490:	d029      	beq.n	80034e6 <_dtoa_r+0xab6>
 8003492:	9b05      	ldr	r3, [sp, #20]
 8003494:	2b00      	cmp	r3, #0
 8003496:	dd02      	ble.n	800349e <_dtoa_r+0xa6e>
 8003498:	9b02      	ldr	r3, [sp, #8]
 800349a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 800349e:	9b01      	ldr	r3, [sp, #4]
 80034a0:	f883 9000 	strb.w	r9, [r3]
 80034a4:	e774      	b.n	8003390 <_dtoa_r+0x960>
 80034a6:	4638      	mov	r0, r7
 80034a8:	e7ba      	b.n	8003420 <_dtoa_r+0x9f0>
 80034aa:	2201      	movs	r2, #1
 80034ac:	e7e1      	b.n	8003472 <_dtoa_r+0xa42>
 80034ae:	9b05      	ldr	r3, [sp, #20]
 80034b0:	2b00      	cmp	r3, #0
 80034b2:	db04      	blt.n	80034be <_dtoa_r+0xa8e>
 80034b4:	9907      	ldr	r1, [sp, #28]
 80034b6:	430b      	orrs	r3, r1
 80034b8:	9906      	ldr	r1, [sp, #24]
 80034ba:	430b      	orrs	r3, r1
 80034bc:	d120      	bne.n	8003500 <_dtoa_r+0xad0>
 80034be:	2a00      	cmp	r2, #0
 80034c0:	dded      	ble.n	800349e <_dtoa_r+0xa6e>
 80034c2:	4651      	mov	r1, sl
 80034c4:	2201      	movs	r2, #1
 80034c6:	4620      	mov	r0, r4
 80034c8:	f000 fbb4 	bl	8003c34 <__lshift>
 80034cc:	4631      	mov	r1, r6
 80034ce:	4682      	mov	sl, r0
 80034d0:	f000 fc1c 	bl	8003d0c <__mcmp>
 80034d4:	2800      	cmp	r0, #0
 80034d6:	dc03      	bgt.n	80034e0 <_dtoa_r+0xab0>
 80034d8:	d1e1      	bne.n	800349e <_dtoa_r+0xa6e>
 80034da:	f019 0f01 	tst.w	r9, #1
 80034de:	d0de      	beq.n	800349e <_dtoa_r+0xa6e>
 80034e0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80034e4:	d1d8      	bne.n	8003498 <_dtoa_r+0xa68>
 80034e6:	9a01      	ldr	r2, [sp, #4]
 80034e8:	2339      	movs	r3, #57	; 0x39
 80034ea:	7013      	strb	r3, [r2, #0]
 80034ec:	462b      	mov	r3, r5
 80034ee:	461d      	mov	r5, r3
 80034f0:	3b01      	subs	r3, #1
 80034f2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80034f6:	2a39      	cmp	r2, #57	; 0x39
 80034f8:	d06c      	beq.n	80035d4 <_dtoa_r+0xba4>
 80034fa:	3201      	adds	r2, #1
 80034fc:	701a      	strb	r2, [r3, #0]
 80034fe:	e747      	b.n	8003390 <_dtoa_r+0x960>
 8003500:	2a00      	cmp	r2, #0
 8003502:	dd07      	ble.n	8003514 <_dtoa_r+0xae4>
 8003504:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003508:	d0ed      	beq.n	80034e6 <_dtoa_r+0xab6>
 800350a:	9a01      	ldr	r2, [sp, #4]
 800350c:	f109 0301 	add.w	r3, r9, #1
 8003510:	7013      	strb	r3, [r2, #0]
 8003512:	e73d      	b.n	8003390 <_dtoa_r+0x960>
 8003514:	9b04      	ldr	r3, [sp, #16]
 8003516:	9a08      	ldr	r2, [sp, #32]
 8003518:	f803 9c01 	strb.w	r9, [r3, #-1]
 800351c:	4293      	cmp	r3, r2
 800351e:	d043      	beq.n	80035a8 <_dtoa_r+0xb78>
 8003520:	4651      	mov	r1, sl
 8003522:	2300      	movs	r3, #0
 8003524:	220a      	movs	r2, #10
 8003526:	4620      	mov	r0, r4
 8003528:	f000 f9d6 	bl	80038d8 <__multadd>
 800352c:	45b8      	cmp	r8, r7
 800352e:	4682      	mov	sl, r0
 8003530:	f04f 0300 	mov.w	r3, #0
 8003534:	f04f 020a 	mov.w	r2, #10
 8003538:	4641      	mov	r1, r8
 800353a:	4620      	mov	r0, r4
 800353c:	d107      	bne.n	800354e <_dtoa_r+0xb1e>
 800353e:	f000 f9cb 	bl	80038d8 <__multadd>
 8003542:	4680      	mov	r8, r0
 8003544:	4607      	mov	r7, r0
 8003546:	9b04      	ldr	r3, [sp, #16]
 8003548:	3301      	adds	r3, #1
 800354a:	9304      	str	r3, [sp, #16]
 800354c:	e775      	b.n	800343a <_dtoa_r+0xa0a>
 800354e:	f000 f9c3 	bl	80038d8 <__multadd>
 8003552:	4639      	mov	r1, r7
 8003554:	4680      	mov	r8, r0
 8003556:	2300      	movs	r3, #0
 8003558:	220a      	movs	r2, #10
 800355a:	4620      	mov	r0, r4
 800355c:	f000 f9bc 	bl	80038d8 <__multadd>
 8003560:	4607      	mov	r7, r0
 8003562:	e7f0      	b.n	8003546 <_dtoa_r+0xb16>
 8003564:	9b04      	ldr	r3, [sp, #16]
 8003566:	9301      	str	r3, [sp, #4]
 8003568:	9d00      	ldr	r5, [sp, #0]
 800356a:	4631      	mov	r1, r6
 800356c:	4650      	mov	r0, sl
 800356e:	f7ff f9d7 	bl	8002920 <quorem>
 8003572:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003576:	9b00      	ldr	r3, [sp, #0]
 8003578:	f805 9b01 	strb.w	r9, [r5], #1
 800357c:	1aea      	subs	r2, r5, r3
 800357e:	9b01      	ldr	r3, [sp, #4]
 8003580:	4293      	cmp	r3, r2
 8003582:	dd07      	ble.n	8003594 <_dtoa_r+0xb64>
 8003584:	4651      	mov	r1, sl
 8003586:	2300      	movs	r3, #0
 8003588:	220a      	movs	r2, #10
 800358a:	4620      	mov	r0, r4
 800358c:	f000 f9a4 	bl	80038d8 <__multadd>
 8003590:	4682      	mov	sl, r0
 8003592:	e7ea      	b.n	800356a <_dtoa_r+0xb3a>
 8003594:	9b01      	ldr	r3, [sp, #4]
 8003596:	2b00      	cmp	r3, #0
 8003598:	bfc8      	it	gt
 800359a:	461d      	movgt	r5, r3
 800359c:	9b00      	ldr	r3, [sp, #0]
 800359e:	bfd8      	it	le
 80035a0:	2501      	movle	r5, #1
 80035a2:	441d      	add	r5, r3
 80035a4:	f04f 0800 	mov.w	r8, #0
 80035a8:	4651      	mov	r1, sl
 80035aa:	2201      	movs	r2, #1
 80035ac:	4620      	mov	r0, r4
 80035ae:	f000 fb41 	bl	8003c34 <__lshift>
 80035b2:	4631      	mov	r1, r6
 80035b4:	4682      	mov	sl, r0
 80035b6:	f000 fba9 	bl	8003d0c <__mcmp>
 80035ba:	2800      	cmp	r0, #0
 80035bc:	dc96      	bgt.n	80034ec <_dtoa_r+0xabc>
 80035be:	d102      	bne.n	80035c6 <_dtoa_r+0xb96>
 80035c0:	f019 0f01 	tst.w	r9, #1
 80035c4:	d192      	bne.n	80034ec <_dtoa_r+0xabc>
 80035c6:	462b      	mov	r3, r5
 80035c8:	461d      	mov	r5, r3
 80035ca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80035ce:	2a30      	cmp	r2, #48	; 0x30
 80035d0:	d0fa      	beq.n	80035c8 <_dtoa_r+0xb98>
 80035d2:	e6dd      	b.n	8003390 <_dtoa_r+0x960>
 80035d4:	9a00      	ldr	r2, [sp, #0]
 80035d6:	429a      	cmp	r2, r3
 80035d8:	d189      	bne.n	80034ee <_dtoa_r+0xabe>
 80035da:	f10b 0b01 	add.w	fp, fp, #1
 80035de:	2331      	movs	r3, #49	; 0x31
 80035e0:	e796      	b.n	8003510 <_dtoa_r+0xae0>
 80035e2:	4b0a      	ldr	r3, [pc, #40]	; (800360c <_dtoa_r+0xbdc>)
 80035e4:	f7ff ba99 	b.w	8002b1a <_dtoa_r+0xea>
 80035e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80035ea:	2b00      	cmp	r3, #0
 80035ec:	f47f aa6d 	bne.w	8002aca <_dtoa_r+0x9a>
 80035f0:	4b07      	ldr	r3, [pc, #28]	; (8003610 <_dtoa_r+0xbe0>)
 80035f2:	f7ff ba92 	b.w	8002b1a <_dtoa_r+0xea>
 80035f6:	9b01      	ldr	r3, [sp, #4]
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	dcb5      	bgt.n	8003568 <_dtoa_r+0xb38>
 80035fc:	9b07      	ldr	r3, [sp, #28]
 80035fe:	2b02      	cmp	r3, #2
 8003600:	f73f aeb1 	bgt.w	8003366 <_dtoa_r+0x936>
 8003604:	e7b0      	b.n	8003568 <_dtoa_r+0xb38>
 8003606:	bf00      	nop
 8003608:	080046dd 	.word	0x080046dd
 800360c:	08004601 	.word	0x08004601
 8003610:	08004661 	.word	0x08004661

08003614 <_free_r>:
 8003614:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003616:	2900      	cmp	r1, #0
 8003618:	d044      	beq.n	80036a4 <_free_r+0x90>
 800361a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800361e:	9001      	str	r0, [sp, #4]
 8003620:	2b00      	cmp	r3, #0
 8003622:	f1a1 0404 	sub.w	r4, r1, #4
 8003626:	bfb8      	it	lt
 8003628:	18e4      	addlt	r4, r4, r3
 800362a:	f000 f8e7 	bl	80037fc <__malloc_lock>
 800362e:	4a1e      	ldr	r2, [pc, #120]	; (80036a8 <_free_r+0x94>)
 8003630:	9801      	ldr	r0, [sp, #4]
 8003632:	6813      	ldr	r3, [r2, #0]
 8003634:	b933      	cbnz	r3, 8003644 <_free_r+0x30>
 8003636:	6063      	str	r3, [r4, #4]
 8003638:	6014      	str	r4, [r2, #0]
 800363a:	b003      	add	sp, #12
 800363c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003640:	f000 b8e2 	b.w	8003808 <__malloc_unlock>
 8003644:	42a3      	cmp	r3, r4
 8003646:	d908      	bls.n	800365a <_free_r+0x46>
 8003648:	6825      	ldr	r5, [r4, #0]
 800364a:	1961      	adds	r1, r4, r5
 800364c:	428b      	cmp	r3, r1
 800364e:	bf01      	itttt	eq
 8003650:	6819      	ldreq	r1, [r3, #0]
 8003652:	685b      	ldreq	r3, [r3, #4]
 8003654:	1949      	addeq	r1, r1, r5
 8003656:	6021      	streq	r1, [r4, #0]
 8003658:	e7ed      	b.n	8003636 <_free_r+0x22>
 800365a:	461a      	mov	r2, r3
 800365c:	685b      	ldr	r3, [r3, #4]
 800365e:	b10b      	cbz	r3, 8003664 <_free_r+0x50>
 8003660:	42a3      	cmp	r3, r4
 8003662:	d9fa      	bls.n	800365a <_free_r+0x46>
 8003664:	6811      	ldr	r1, [r2, #0]
 8003666:	1855      	adds	r5, r2, r1
 8003668:	42a5      	cmp	r5, r4
 800366a:	d10b      	bne.n	8003684 <_free_r+0x70>
 800366c:	6824      	ldr	r4, [r4, #0]
 800366e:	4421      	add	r1, r4
 8003670:	1854      	adds	r4, r2, r1
 8003672:	42a3      	cmp	r3, r4
 8003674:	6011      	str	r1, [r2, #0]
 8003676:	d1e0      	bne.n	800363a <_free_r+0x26>
 8003678:	681c      	ldr	r4, [r3, #0]
 800367a:	685b      	ldr	r3, [r3, #4]
 800367c:	6053      	str	r3, [r2, #4]
 800367e:	440c      	add	r4, r1
 8003680:	6014      	str	r4, [r2, #0]
 8003682:	e7da      	b.n	800363a <_free_r+0x26>
 8003684:	d902      	bls.n	800368c <_free_r+0x78>
 8003686:	230c      	movs	r3, #12
 8003688:	6003      	str	r3, [r0, #0]
 800368a:	e7d6      	b.n	800363a <_free_r+0x26>
 800368c:	6825      	ldr	r5, [r4, #0]
 800368e:	1961      	adds	r1, r4, r5
 8003690:	428b      	cmp	r3, r1
 8003692:	bf04      	itt	eq
 8003694:	6819      	ldreq	r1, [r3, #0]
 8003696:	685b      	ldreq	r3, [r3, #4]
 8003698:	6063      	str	r3, [r4, #4]
 800369a:	bf04      	itt	eq
 800369c:	1949      	addeq	r1, r1, r5
 800369e:	6021      	streq	r1, [r4, #0]
 80036a0:	6054      	str	r4, [r2, #4]
 80036a2:	e7ca      	b.n	800363a <_free_r+0x26>
 80036a4:	b003      	add	sp, #12
 80036a6:	bd30      	pop	{r4, r5, pc}
 80036a8:	20000400 	.word	0x20000400

080036ac <malloc>:
 80036ac:	4b02      	ldr	r3, [pc, #8]	; (80036b8 <malloc+0xc>)
 80036ae:	4601      	mov	r1, r0
 80036b0:	6818      	ldr	r0, [r3, #0]
 80036b2:	f000 b823 	b.w	80036fc <_malloc_r>
 80036b6:	bf00      	nop
 80036b8:	2000006c 	.word	0x2000006c

080036bc <sbrk_aligned>:
 80036bc:	b570      	push	{r4, r5, r6, lr}
 80036be:	4e0e      	ldr	r6, [pc, #56]	; (80036f8 <sbrk_aligned+0x3c>)
 80036c0:	460c      	mov	r4, r1
 80036c2:	6831      	ldr	r1, [r6, #0]
 80036c4:	4605      	mov	r5, r0
 80036c6:	b911      	cbnz	r1, 80036ce <sbrk_aligned+0x12>
 80036c8:	f000 fea8 	bl	800441c <_sbrk_r>
 80036cc:	6030      	str	r0, [r6, #0]
 80036ce:	4621      	mov	r1, r4
 80036d0:	4628      	mov	r0, r5
 80036d2:	f000 fea3 	bl	800441c <_sbrk_r>
 80036d6:	1c43      	adds	r3, r0, #1
 80036d8:	d00a      	beq.n	80036f0 <sbrk_aligned+0x34>
 80036da:	1cc4      	adds	r4, r0, #3
 80036dc:	f024 0403 	bic.w	r4, r4, #3
 80036e0:	42a0      	cmp	r0, r4
 80036e2:	d007      	beq.n	80036f4 <sbrk_aligned+0x38>
 80036e4:	1a21      	subs	r1, r4, r0
 80036e6:	4628      	mov	r0, r5
 80036e8:	f000 fe98 	bl	800441c <_sbrk_r>
 80036ec:	3001      	adds	r0, #1
 80036ee:	d101      	bne.n	80036f4 <sbrk_aligned+0x38>
 80036f0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80036f4:	4620      	mov	r0, r4
 80036f6:	bd70      	pop	{r4, r5, r6, pc}
 80036f8:	20000404 	.word	0x20000404

080036fc <_malloc_r>:
 80036fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003700:	1ccd      	adds	r5, r1, #3
 8003702:	f025 0503 	bic.w	r5, r5, #3
 8003706:	3508      	adds	r5, #8
 8003708:	2d0c      	cmp	r5, #12
 800370a:	bf38      	it	cc
 800370c:	250c      	movcc	r5, #12
 800370e:	2d00      	cmp	r5, #0
 8003710:	4607      	mov	r7, r0
 8003712:	db01      	blt.n	8003718 <_malloc_r+0x1c>
 8003714:	42a9      	cmp	r1, r5
 8003716:	d905      	bls.n	8003724 <_malloc_r+0x28>
 8003718:	230c      	movs	r3, #12
 800371a:	603b      	str	r3, [r7, #0]
 800371c:	2600      	movs	r6, #0
 800371e:	4630      	mov	r0, r6
 8003720:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003724:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80037f8 <_malloc_r+0xfc>
 8003728:	f000 f868 	bl	80037fc <__malloc_lock>
 800372c:	f8d8 3000 	ldr.w	r3, [r8]
 8003730:	461c      	mov	r4, r3
 8003732:	bb5c      	cbnz	r4, 800378c <_malloc_r+0x90>
 8003734:	4629      	mov	r1, r5
 8003736:	4638      	mov	r0, r7
 8003738:	f7ff ffc0 	bl	80036bc <sbrk_aligned>
 800373c:	1c43      	adds	r3, r0, #1
 800373e:	4604      	mov	r4, r0
 8003740:	d155      	bne.n	80037ee <_malloc_r+0xf2>
 8003742:	f8d8 4000 	ldr.w	r4, [r8]
 8003746:	4626      	mov	r6, r4
 8003748:	2e00      	cmp	r6, #0
 800374a:	d145      	bne.n	80037d8 <_malloc_r+0xdc>
 800374c:	2c00      	cmp	r4, #0
 800374e:	d048      	beq.n	80037e2 <_malloc_r+0xe6>
 8003750:	6823      	ldr	r3, [r4, #0]
 8003752:	4631      	mov	r1, r6
 8003754:	4638      	mov	r0, r7
 8003756:	eb04 0903 	add.w	r9, r4, r3
 800375a:	f000 fe5f 	bl	800441c <_sbrk_r>
 800375e:	4581      	cmp	r9, r0
 8003760:	d13f      	bne.n	80037e2 <_malloc_r+0xe6>
 8003762:	6821      	ldr	r1, [r4, #0]
 8003764:	1a6d      	subs	r5, r5, r1
 8003766:	4629      	mov	r1, r5
 8003768:	4638      	mov	r0, r7
 800376a:	f7ff ffa7 	bl	80036bc <sbrk_aligned>
 800376e:	3001      	adds	r0, #1
 8003770:	d037      	beq.n	80037e2 <_malloc_r+0xe6>
 8003772:	6823      	ldr	r3, [r4, #0]
 8003774:	442b      	add	r3, r5
 8003776:	6023      	str	r3, [r4, #0]
 8003778:	f8d8 3000 	ldr.w	r3, [r8]
 800377c:	2b00      	cmp	r3, #0
 800377e:	d038      	beq.n	80037f2 <_malloc_r+0xf6>
 8003780:	685a      	ldr	r2, [r3, #4]
 8003782:	42a2      	cmp	r2, r4
 8003784:	d12b      	bne.n	80037de <_malloc_r+0xe2>
 8003786:	2200      	movs	r2, #0
 8003788:	605a      	str	r2, [r3, #4]
 800378a:	e00f      	b.n	80037ac <_malloc_r+0xb0>
 800378c:	6822      	ldr	r2, [r4, #0]
 800378e:	1b52      	subs	r2, r2, r5
 8003790:	d41f      	bmi.n	80037d2 <_malloc_r+0xd6>
 8003792:	2a0b      	cmp	r2, #11
 8003794:	d917      	bls.n	80037c6 <_malloc_r+0xca>
 8003796:	1961      	adds	r1, r4, r5
 8003798:	42a3      	cmp	r3, r4
 800379a:	6025      	str	r5, [r4, #0]
 800379c:	bf18      	it	ne
 800379e:	6059      	strne	r1, [r3, #4]
 80037a0:	6863      	ldr	r3, [r4, #4]
 80037a2:	bf08      	it	eq
 80037a4:	f8c8 1000 	streq.w	r1, [r8]
 80037a8:	5162      	str	r2, [r4, r5]
 80037aa:	604b      	str	r3, [r1, #4]
 80037ac:	4638      	mov	r0, r7
 80037ae:	f104 060b 	add.w	r6, r4, #11
 80037b2:	f000 f829 	bl	8003808 <__malloc_unlock>
 80037b6:	f026 0607 	bic.w	r6, r6, #7
 80037ba:	1d23      	adds	r3, r4, #4
 80037bc:	1af2      	subs	r2, r6, r3
 80037be:	d0ae      	beq.n	800371e <_malloc_r+0x22>
 80037c0:	1b9b      	subs	r3, r3, r6
 80037c2:	50a3      	str	r3, [r4, r2]
 80037c4:	e7ab      	b.n	800371e <_malloc_r+0x22>
 80037c6:	42a3      	cmp	r3, r4
 80037c8:	6862      	ldr	r2, [r4, #4]
 80037ca:	d1dd      	bne.n	8003788 <_malloc_r+0x8c>
 80037cc:	f8c8 2000 	str.w	r2, [r8]
 80037d0:	e7ec      	b.n	80037ac <_malloc_r+0xb0>
 80037d2:	4623      	mov	r3, r4
 80037d4:	6864      	ldr	r4, [r4, #4]
 80037d6:	e7ac      	b.n	8003732 <_malloc_r+0x36>
 80037d8:	4634      	mov	r4, r6
 80037da:	6876      	ldr	r6, [r6, #4]
 80037dc:	e7b4      	b.n	8003748 <_malloc_r+0x4c>
 80037de:	4613      	mov	r3, r2
 80037e0:	e7cc      	b.n	800377c <_malloc_r+0x80>
 80037e2:	230c      	movs	r3, #12
 80037e4:	603b      	str	r3, [r7, #0]
 80037e6:	4638      	mov	r0, r7
 80037e8:	f000 f80e 	bl	8003808 <__malloc_unlock>
 80037ec:	e797      	b.n	800371e <_malloc_r+0x22>
 80037ee:	6025      	str	r5, [r4, #0]
 80037f0:	e7dc      	b.n	80037ac <_malloc_r+0xb0>
 80037f2:	605b      	str	r3, [r3, #4]
 80037f4:	deff      	udf	#255	; 0xff
 80037f6:	bf00      	nop
 80037f8:	20000400 	.word	0x20000400

080037fc <__malloc_lock>:
 80037fc:	4801      	ldr	r0, [pc, #4]	; (8003804 <__malloc_lock+0x8>)
 80037fe:	f7ff b861 	b.w	80028c4 <__retarget_lock_acquire_recursive>
 8003802:	bf00      	nop
 8003804:	200003fc 	.word	0x200003fc

08003808 <__malloc_unlock>:
 8003808:	4801      	ldr	r0, [pc, #4]	; (8003810 <__malloc_unlock+0x8>)
 800380a:	f7ff b85c 	b.w	80028c6 <__retarget_lock_release_recursive>
 800380e:	bf00      	nop
 8003810:	200003fc 	.word	0x200003fc

08003814 <_Balloc>:
 8003814:	b570      	push	{r4, r5, r6, lr}
 8003816:	69c6      	ldr	r6, [r0, #28]
 8003818:	4604      	mov	r4, r0
 800381a:	460d      	mov	r5, r1
 800381c:	b976      	cbnz	r6, 800383c <_Balloc+0x28>
 800381e:	2010      	movs	r0, #16
 8003820:	f7ff ff44 	bl	80036ac <malloc>
 8003824:	4602      	mov	r2, r0
 8003826:	61e0      	str	r0, [r4, #28]
 8003828:	b920      	cbnz	r0, 8003834 <_Balloc+0x20>
 800382a:	4b18      	ldr	r3, [pc, #96]	; (800388c <_Balloc+0x78>)
 800382c:	4818      	ldr	r0, [pc, #96]	; (8003890 <_Balloc+0x7c>)
 800382e:	216b      	movs	r1, #107	; 0x6b
 8003830:	f7ff f858 	bl	80028e4 <__assert_func>
 8003834:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003838:	6006      	str	r6, [r0, #0]
 800383a:	60c6      	str	r6, [r0, #12]
 800383c:	69e6      	ldr	r6, [r4, #28]
 800383e:	68f3      	ldr	r3, [r6, #12]
 8003840:	b183      	cbz	r3, 8003864 <_Balloc+0x50>
 8003842:	69e3      	ldr	r3, [r4, #28]
 8003844:	68db      	ldr	r3, [r3, #12]
 8003846:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800384a:	b9b8      	cbnz	r0, 800387c <_Balloc+0x68>
 800384c:	2101      	movs	r1, #1
 800384e:	fa01 f605 	lsl.w	r6, r1, r5
 8003852:	1d72      	adds	r2, r6, #5
 8003854:	0092      	lsls	r2, r2, #2
 8003856:	4620      	mov	r0, r4
 8003858:	f000 fdf7 	bl	800444a <_calloc_r>
 800385c:	b160      	cbz	r0, 8003878 <_Balloc+0x64>
 800385e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003862:	e00e      	b.n	8003882 <_Balloc+0x6e>
 8003864:	2221      	movs	r2, #33	; 0x21
 8003866:	2104      	movs	r1, #4
 8003868:	4620      	mov	r0, r4
 800386a:	f000 fdee 	bl	800444a <_calloc_r>
 800386e:	69e3      	ldr	r3, [r4, #28]
 8003870:	60f0      	str	r0, [r6, #12]
 8003872:	68db      	ldr	r3, [r3, #12]
 8003874:	2b00      	cmp	r3, #0
 8003876:	d1e4      	bne.n	8003842 <_Balloc+0x2e>
 8003878:	2000      	movs	r0, #0
 800387a:	bd70      	pop	{r4, r5, r6, pc}
 800387c:	6802      	ldr	r2, [r0, #0]
 800387e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003882:	2300      	movs	r3, #0
 8003884:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003888:	e7f7      	b.n	800387a <_Balloc+0x66>
 800388a:	bf00      	nop
 800388c:	0800466e 	.word	0x0800466e
 8003890:	080046ee 	.word	0x080046ee

08003894 <_Bfree>:
 8003894:	b570      	push	{r4, r5, r6, lr}
 8003896:	69c6      	ldr	r6, [r0, #28]
 8003898:	4605      	mov	r5, r0
 800389a:	460c      	mov	r4, r1
 800389c:	b976      	cbnz	r6, 80038bc <_Bfree+0x28>
 800389e:	2010      	movs	r0, #16
 80038a0:	f7ff ff04 	bl	80036ac <malloc>
 80038a4:	4602      	mov	r2, r0
 80038a6:	61e8      	str	r0, [r5, #28]
 80038a8:	b920      	cbnz	r0, 80038b4 <_Bfree+0x20>
 80038aa:	4b09      	ldr	r3, [pc, #36]	; (80038d0 <_Bfree+0x3c>)
 80038ac:	4809      	ldr	r0, [pc, #36]	; (80038d4 <_Bfree+0x40>)
 80038ae:	218f      	movs	r1, #143	; 0x8f
 80038b0:	f7ff f818 	bl	80028e4 <__assert_func>
 80038b4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80038b8:	6006      	str	r6, [r0, #0]
 80038ba:	60c6      	str	r6, [r0, #12]
 80038bc:	b13c      	cbz	r4, 80038ce <_Bfree+0x3a>
 80038be:	69eb      	ldr	r3, [r5, #28]
 80038c0:	6862      	ldr	r2, [r4, #4]
 80038c2:	68db      	ldr	r3, [r3, #12]
 80038c4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80038c8:	6021      	str	r1, [r4, #0]
 80038ca:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80038ce:	bd70      	pop	{r4, r5, r6, pc}
 80038d0:	0800466e 	.word	0x0800466e
 80038d4:	080046ee 	.word	0x080046ee

080038d8 <__multadd>:
 80038d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038dc:	690d      	ldr	r5, [r1, #16]
 80038de:	4607      	mov	r7, r0
 80038e0:	460c      	mov	r4, r1
 80038e2:	461e      	mov	r6, r3
 80038e4:	f101 0c14 	add.w	ip, r1, #20
 80038e8:	2000      	movs	r0, #0
 80038ea:	f8dc 3000 	ldr.w	r3, [ip]
 80038ee:	b299      	uxth	r1, r3
 80038f0:	fb02 6101 	mla	r1, r2, r1, r6
 80038f4:	0c1e      	lsrs	r6, r3, #16
 80038f6:	0c0b      	lsrs	r3, r1, #16
 80038f8:	fb02 3306 	mla	r3, r2, r6, r3
 80038fc:	b289      	uxth	r1, r1
 80038fe:	3001      	adds	r0, #1
 8003900:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003904:	4285      	cmp	r5, r0
 8003906:	f84c 1b04 	str.w	r1, [ip], #4
 800390a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800390e:	dcec      	bgt.n	80038ea <__multadd+0x12>
 8003910:	b30e      	cbz	r6, 8003956 <__multadd+0x7e>
 8003912:	68a3      	ldr	r3, [r4, #8]
 8003914:	42ab      	cmp	r3, r5
 8003916:	dc19      	bgt.n	800394c <__multadd+0x74>
 8003918:	6861      	ldr	r1, [r4, #4]
 800391a:	4638      	mov	r0, r7
 800391c:	3101      	adds	r1, #1
 800391e:	f7ff ff79 	bl	8003814 <_Balloc>
 8003922:	4680      	mov	r8, r0
 8003924:	b928      	cbnz	r0, 8003932 <__multadd+0x5a>
 8003926:	4602      	mov	r2, r0
 8003928:	4b0c      	ldr	r3, [pc, #48]	; (800395c <__multadd+0x84>)
 800392a:	480d      	ldr	r0, [pc, #52]	; (8003960 <__multadd+0x88>)
 800392c:	21ba      	movs	r1, #186	; 0xba
 800392e:	f7fe ffd9 	bl	80028e4 <__assert_func>
 8003932:	6922      	ldr	r2, [r4, #16]
 8003934:	3202      	adds	r2, #2
 8003936:	f104 010c 	add.w	r1, r4, #12
 800393a:	0092      	lsls	r2, r2, #2
 800393c:	300c      	adds	r0, #12
 800393e:	f7fe ffc3 	bl	80028c8 <memcpy>
 8003942:	4621      	mov	r1, r4
 8003944:	4638      	mov	r0, r7
 8003946:	f7ff ffa5 	bl	8003894 <_Bfree>
 800394a:	4644      	mov	r4, r8
 800394c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003950:	3501      	adds	r5, #1
 8003952:	615e      	str	r6, [r3, #20]
 8003954:	6125      	str	r5, [r4, #16]
 8003956:	4620      	mov	r0, r4
 8003958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800395c:	080046dd 	.word	0x080046dd
 8003960:	080046ee 	.word	0x080046ee

08003964 <__hi0bits>:
 8003964:	0c03      	lsrs	r3, r0, #16
 8003966:	041b      	lsls	r3, r3, #16
 8003968:	b9d3      	cbnz	r3, 80039a0 <__hi0bits+0x3c>
 800396a:	0400      	lsls	r0, r0, #16
 800396c:	2310      	movs	r3, #16
 800396e:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8003972:	bf04      	itt	eq
 8003974:	0200      	lsleq	r0, r0, #8
 8003976:	3308      	addeq	r3, #8
 8003978:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800397c:	bf04      	itt	eq
 800397e:	0100      	lsleq	r0, r0, #4
 8003980:	3304      	addeq	r3, #4
 8003982:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8003986:	bf04      	itt	eq
 8003988:	0080      	lsleq	r0, r0, #2
 800398a:	3302      	addeq	r3, #2
 800398c:	2800      	cmp	r0, #0
 800398e:	db05      	blt.n	800399c <__hi0bits+0x38>
 8003990:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003994:	f103 0301 	add.w	r3, r3, #1
 8003998:	bf08      	it	eq
 800399a:	2320      	moveq	r3, #32
 800399c:	4618      	mov	r0, r3
 800399e:	4770      	bx	lr
 80039a0:	2300      	movs	r3, #0
 80039a2:	e7e4      	b.n	800396e <__hi0bits+0xa>

080039a4 <__lo0bits>:
 80039a4:	6803      	ldr	r3, [r0, #0]
 80039a6:	f013 0207 	ands.w	r2, r3, #7
 80039aa:	d00c      	beq.n	80039c6 <__lo0bits+0x22>
 80039ac:	07d9      	lsls	r1, r3, #31
 80039ae:	d422      	bmi.n	80039f6 <__lo0bits+0x52>
 80039b0:	079a      	lsls	r2, r3, #30
 80039b2:	bf49      	itett	mi
 80039b4:	085b      	lsrmi	r3, r3, #1
 80039b6:	089b      	lsrpl	r3, r3, #2
 80039b8:	6003      	strmi	r3, [r0, #0]
 80039ba:	2201      	movmi	r2, #1
 80039bc:	bf5c      	itt	pl
 80039be:	6003      	strpl	r3, [r0, #0]
 80039c0:	2202      	movpl	r2, #2
 80039c2:	4610      	mov	r0, r2
 80039c4:	4770      	bx	lr
 80039c6:	b299      	uxth	r1, r3
 80039c8:	b909      	cbnz	r1, 80039ce <__lo0bits+0x2a>
 80039ca:	0c1b      	lsrs	r3, r3, #16
 80039cc:	2210      	movs	r2, #16
 80039ce:	b2d9      	uxtb	r1, r3
 80039d0:	b909      	cbnz	r1, 80039d6 <__lo0bits+0x32>
 80039d2:	3208      	adds	r2, #8
 80039d4:	0a1b      	lsrs	r3, r3, #8
 80039d6:	0719      	lsls	r1, r3, #28
 80039d8:	bf04      	itt	eq
 80039da:	091b      	lsreq	r3, r3, #4
 80039dc:	3204      	addeq	r2, #4
 80039de:	0799      	lsls	r1, r3, #30
 80039e0:	bf04      	itt	eq
 80039e2:	089b      	lsreq	r3, r3, #2
 80039e4:	3202      	addeq	r2, #2
 80039e6:	07d9      	lsls	r1, r3, #31
 80039e8:	d403      	bmi.n	80039f2 <__lo0bits+0x4e>
 80039ea:	085b      	lsrs	r3, r3, #1
 80039ec:	f102 0201 	add.w	r2, r2, #1
 80039f0:	d003      	beq.n	80039fa <__lo0bits+0x56>
 80039f2:	6003      	str	r3, [r0, #0]
 80039f4:	e7e5      	b.n	80039c2 <__lo0bits+0x1e>
 80039f6:	2200      	movs	r2, #0
 80039f8:	e7e3      	b.n	80039c2 <__lo0bits+0x1e>
 80039fa:	2220      	movs	r2, #32
 80039fc:	e7e1      	b.n	80039c2 <__lo0bits+0x1e>
	...

08003a00 <__i2b>:
 8003a00:	b510      	push	{r4, lr}
 8003a02:	460c      	mov	r4, r1
 8003a04:	2101      	movs	r1, #1
 8003a06:	f7ff ff05 	bl	8003814 <_Balloc>
 8003a0a:	4602      	mov	r2, r0
 8003a0c:	b928      	cbnz	r0, 8003a1a <__i2b+0x1a>
 8003a0e:	4b05      	ldr	r3, [pc, #20]	; (8003a24 <__i2b+0x24>)
 8003a10:	4805      	ldr	r0, [pc, #20]	; (8003a28 <__i2b+0x28>)
 8003a12:	f240 1145 	movw	r1, #325	; 0x145
 8003a16:	f7fe ff65 	bl	80028e4 <__assert_func>
 8003a1a:	2301      	movs	r3, #1
 8003a1c:	6144      	str	r4, [r0, #20]
 8003a1e:	6103      	str	r3, [r0, #16]
 8003a20:	bd10      	pop	{r4, pc}
 8003a22:	bf00      	nop
 8003a24:	080046dd 	.word	0x080046dd
 8003a28:	080046ee 	.word	0x080046ee

08003a2c <__multiply>:
 8003a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a30:	4691      	mov	r9, r2
 8003a32:	690a      	ldr	r2, [r1, #16]
 8003a34:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003a38:	429a      	cmp	r2, r3
 8003a3a:	bfb8      	it	lt
 8003a3c:	460b      	movlt	r3, r1
 8003a3e:	460c      	mov	r4, r1
 8003a40:	bfbc      	itt	lt
 8003a42:	464c      	movlt	r4, r9
 8003a44:	4699      	movlt	r9, r3
 8003a46:	6927      	ldr	r7, [r4, #16]
 8003a48:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003a4c:	68a3      	ldr	r3, [r4, #8]
 8003a4e:	6861      	ldr	r1, [r4, #4]
 8003a50:	eb07 060a 	add.w	r6, r7, sl
 8003a54:	42b3      	cmp	r3, r6
 8003a56:	b085      	sub	sp, #20
 8003a58:	bfb8      	it	lt
 8003a5a:	3101      	addlt	r1, #1
 8003a5c:	f7ff feda 	bl	8003814 <_Balloc>
 8003a60:	b930      	cbnz	r0, 8003a70 <__multiply+0x44>
 8003a62:	4602      	mov	r2, r0
 8003a64:	4b44      	ldr	r3, [pc, #272]	; (8003b78 <__multiply+0x14c>)
 8003a66:	4845      	ldr	r0, [pc, #276]	; (8003b7c <__multiply+0x150>)
 8003a68:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003a6c:	f7fe ff3a 	bl	80028e4 <__assert_func>
 8003a70:	f100 0514 	add.w	r5, r0, #20
 8003a74:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003a78:	462b      	mov	r3, r5
 8003a7a:	2200      	movs	r2, #0
 8003a7c:	4543      	cmp	r3, r8
 8003a7e:	d321      	bcc.n	8003ac4 <__multiply+0x98>
 8003a80:	f104 0314 	add.w	r3, r4, #20
 8003a84:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003a88:	f109 0314 	add.w	r3, r9, #20
 8003a8c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8003a90:	9202      	str	r2, [sp, #8]
 8003a92:	1b3a      	subs	r2, r7, r4
 8003a94:	3a15      	subs	r2, #21
 8003a96:	f022 0203 	bic.w	r2, r2, #3
 8003a9a:	3204      	adds	r2, #4
 8003a9c:	f104 0115 	add.w	r1, r4, #21
 8003aa0:	428f      	cmp	r7, r1
 8003aa2:	bf38      	it	cc
 8003aa4:	2204      	movcc	r2, #4
 8003aa6:	9201      	str	r2, [sp, #4]
 8003aa8:	9a02      	ldr	r2, [sp, #8]
 8003aaa:	9303      	str	r3, [sp, #12]
 8003aac:	429a      	cmp	r2, r3
 8003aae:	d80c      	bhi.n	8003aca <__multiply+0x9e>
 8003ab0:	2e00      	cmp	r6, #0
 8003ab2:	dd03      	ble.n	8003abc <__multiply+0x90>
 8003ab4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d05b      	beq.n	8003b74 <__multiply+0x148>
 8003abc:	6106      	str	r6, [r0, #16]
 8003abe:	b005      	add	sp, #20
 8003ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ac4:	f843 2b04 	str.w	r2, [r3], #4
 8003ac8:	e7d8      	b.n	8003a7c <__multiply+0x50>
 8003aca:	f8b3 a000 	ldrh.w	sl, [r3]
 8003ace:	f1ba 0f00 	cmp.w	sl, #0
 8003ad2:	d024      	beq.n	8003b1e <__multiply+0xf2>
 8003ad4:	f104 0e14 	add.w	lr, r4, #20
 8003ad8:	46a9      	mov	r9, r5
 8003ada:	f04f 0c00 	mov.w	ip, #0
 8003ade:	f85e 2b04 	ldr.w	r2, [lr], #4
 8003ae2:	f8d9 1000 	ldr.w	r1, [r9]
 8003ae6:	fa1f fb82 	uxth.w	fp, r2
 8003aea:	b289      	uxth	r1, r1
 8003aec:	fb0a 110b 	mla	r1, sl, fp, r1
 8003af0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8003af4:	f8d9 2000 	ldr.w	r2, [r9]
 8003af8:	4461      	add	r1, ip
 8003afa:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003afe:	fb0a c20b 	mla	r2, sl, fp, ip
 8003b02:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8003b06:	b289      	uxth	r1, r1
 8003b08:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003b0c:	4577      	cmp	r7, lr
 8003b0e:	f849 1b04 	str.w	r1, [r9], #4
 8003b12:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003b16:	d8e2      	bhi.n	8003ade <__multiply+0xb2>
 8003b18:	9a01      	ldr	r2, [sp, #4]
 8003b1a:	f845 c002 	str.w	ip, [r5, r2]
 8003b1e:	9a03      	ldr	r2, [sp, #12]
 8003b20:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8003b24:	3304      	adds	r3, #4
 8003b26:	f1b9 0f00 	cmp.w	r9, #0
 8003b2a:	d021      	beq.n	8003b70 <__multiply+0x144>
 8003b2c:	6829      	ldr	r1, [r5, #0]
 8003b2e:	f104 0c14 	add.w	ip, r4, #20
 8003b32:	46ae      	mov	lr, r5
 8003b34:	f04f 0a00 	mov.w	sl, #0
 8003b38:	f8bc b000 	ldrh.w	fp, [ip]
 8003b3c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003b40:	fb09 220b 	mla	r2, r9, fp, r2
 8003b44:	4452      	add	r2, sl
 8003b46:	b289      	uxth	r1, r1
 8003b48:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003b4c:	f84e 1b04 	str.w	r1, [lr], #4
 8003b50:	f85c 1b04 	ldr.w	r1, [ip], #4
 8003b54:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003b58:	f8be 1000 	ldrh.w	r1, [lr]
 8003b5c:	fb09 110a 	mla	r1, r9, sl, r1
 8003b60:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8003b64:	4567      	cmp	r7, ip
 8003b66:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003b6a:	d8e5      	bhi.n	8003b38 <__multiply+0x10c>
 8003b6c:	9a01      	ldr	r2, [sp, #4]
 8003b6e:	50a9      	str	r1, [r5, r2]
 8003b70:	3504      	adds	r5, #4
 8003b72:	e799      	b.n	8003aa8 <__multiply+0x7c>
 8003b74:	3e01      	subs	r6, #1
 8003b76:	e79b      	b.n	8003ab0 <__multiply+0x84>
 8003b78:	080046dd 	.word	0x080046dd
 8003b7c:	080046ee 	.word	0x080046ee

08003b80 <__pow5mult>:
 8003b80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003b84:	4615      	mov	r5, r2
 8003b86:	f012 0203 	ands.w	r2, r2, #3
 8003b8a:	4606      	mov	r6, r0
 8003b8c:	460f      	mov	r7, r1
 8003b8e:	d007      	beq.n	8003ba0 <__pow5mult+0x20>
 8003b90:	4c25      	ldr	r4, [pc, #148]	; (8003c28 <__pow5mult+0xa8>)
 8003b92:	3a01      	subs	r2, #1
 8003b94:	2300      	movs	r3, #0
 8003b96:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003b9a:	f7ff fe9d 	bl	80038d8 <__multadd>
 8003b9e:	4607      	mov	r7, r0
 8003ba0:	10ad      	asrs	r5, r5, #2
 8003ba2:	d03d      	beq.n	8003c20 <__pow5mult+0xa0>
 8003ba4:	69f4      	ldr	r4, [r6, #28]
 8003ba6:	b97c      	cbnz	r4, 8003bc8 <__pow5mult+0x48>
 8003ba8:	2010      	movs	r0, #16
 8003baa:	f7ff fd7f 	bl	80036ac <malloc>
 8003bae:	4602      	mov	r2, r0
 8003bb0:	61f0      	str	r0, [r6, #28]
 8003bb2:	b928      	cbnz	r0, 8003bc0 <__pow5mult+0x40>
 8003bb4:	4b1d      	ldr	r3, [pc, #116]	; (8003c2c <__pow5mult+0xac>)
 8003bb6:	481e      	ldr	r0, [pc, #120]	; (8003c30 <__pow5mult+0xb0>)
 8003bb8:	f240 11b3 	movw	r1, #435	; 0x1b3
 8003bbc:	f7fe fe92 	bl	80028e4 <__assert_func>
 8003bc0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003bc4:	6004      	str	r4, [r0, #0]
 8003bc6:	60c4      	str	r4, [r0, #12]
 8003bc8:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8003bcc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003bd0:	b94c      	cbnz	r4, 8003be6 <__pow5mult+0x66>
 8003bd2:	f240 2171 	movw	r1, #625	; 0x271
 8003bd6:	4630      	mov	r0, r6
 8003bd8:	f7ff ff12 	bl	8003a00 <__i2b>
 8003bdc:	2300      	movs	r3, #0
 8003bde:	f8c8 0008 	str.w	r0, [r8, #8]
 8003be2:	4604      	mov	r4, r0
 8003be4:	6003      	str	r3, [r0, #0]
 8003be6:	f04f 0900 	mov.w	r9, #0
 8003bea:	07eb      	lsls	r3, r5, #31
 8003bec:	d50a      	bpl.n	8003c04 <__pow5mult+0x84>
 8003bee:	4639      	mov	r1, r7
 8003bf0:	4622      	mov	r2, r4
 8003bf2:	4630      	mov	r0, r6
 8003bf4:	f7ff ff1a 	bl	8003a2c <__multiply>
 8003bf8:	4639      	mov	r1, r7
 8003bfa:	4680      	mov	r8, r0
 8003bfc:	4630      	mov	r0, r6
 8003bfe:	f7ff fe49 	bl	8003894 <_Bfree>
 8003c02:	4647      	mov	r7, r8
 8003c04:	106d      	asrs	r5, r5, #1
 8003c06:	d00b      	beq.n	8003c20 <__pow5mult+0xa0>
 8003c08:	6820      	ldr	r0, [r4, #0]
 8003c0a:	b938      	cbnz	r0, 8003c1c <__pow5mult+0x9c>
 8003c0c:	4622      	mov	r2, r4
 8003c0e:	4621      	mov	r1, r4
 8003c10:	4630      	mov	r0, r6
 8003c12:	f7ff ff0b 	bl	8003a2c <__multiply>
 8003c16:	6020      	str	r0, [r4, #0]
 8003c18:	f8c0 9000 	str.w	r9, [r0]
 8003c1c:	4604      	mov	r4, r0
 8003c1e:	e7e4      	b.n	8003bea <__pow5mult+0x6a>
 8003c20:	4638      	mov	r0, r7
 8003c22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c26:	bf00      	nop
 8003c28:	08004838 	.word	0x08004838
 8003c2c:	0800466e 	.word	0x0800466e
 8003c30:	080046ee 	.word	0x080046ee

08003c34 <__lshift>:
 8003c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c38:	460c      	mov	r4, r1
 8003c3a:	6849      	ldr	r1, [r1, #4]
 8003c3c:	6923      	ldr	r3, [r4, #16]
 8003c3e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003c42:	68a3      	ldr	r3, [r4, #8]
 8003c44:	4607      	mov	r7, r0
 8003c46:	4691      	mov	r9, r2
 8003c48:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003c4c:	f108 0601 	add.w	r6, r8, #1
 8003c50:	42b3      	cmp	r3, r6
 8003c52:	db0b      	blt.n	8003c6c <__lshift+0x38>
 8003c54:	4638      	mov	r0, r7
 8003c56:	f7ff fddd 	bl	8003814 <_Balloc>
 8003c5a:	4605      	mov	r5, r0
 8003c5c:	b948      	cbnz	r0, 8003c72 <__lshift+0x3e>
 8003c5e:	4602      	mov	r2, r0
 8003c60:	4b28      	ldr	r3, [pc, #160]	; (8003d04 <__lshift+0xd0>)
 8003c62:	4829      	ldr	r0, [pc, #164]	; (8003d08 <__lshift+0xd4>)
 8003c64:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8003c68:	f7fe fe3c 	bl	80028e4 <__assert_func>
 8003c6c:	3101      	adds	r1, #1
 8003c6e:	005b      	lsls	r3, r3, #1
 8003c70:	e7ee      	b.n	8003c50 <__lshift+0x1c>
 8003c72:	2300      	movs	r3, #0
 8003c74:	f100 0114 	add.w	r1, r0, #20
 8003c78:	f100 0210 	add.w	r2, r0, #16
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	4553      	cmp	r3, sl
 8003c80:	db33      	blt.n	8003cea <__lshift+0xb6>
 8003c82:	6920      	ldr	r0, [r4, #16]
 8003c84:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003c88:	f104 0314 	add.w	r3, r4, #20
 8003c8c:	f019 091f 	ands.w	r9, r9, #31
 8003c90:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003c94:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003c98:	d02b      	beq.n	8003cf2 <__lshift+0xbe>
 8003c9a:	f1c9 0e20 	rsb	lr, r9, #32
 8003c9e:	468a      	mov	sl, r1
 8003ca0:	2200      	movs	r2, #0
 8003ca2:	6818      	ldr	r0, [r3, #0]
 8003ca4:	fa00 f009 	lsl.w	r0, r0, r9
 8003ca8:	4310      	orrs	r0, r2
 8003caa:	f84a 0b04 	str.w	r0, [sl], #4
 8003cae:	f853 2b04 	ldr.w	r2, [r3], #4
 8003cb2:	459c      	cmp	ip, r3
 8003cb4:	fa22 f20e 	lsr.w	r2, r2, lr
 8003cb8:	d8f3      	bhi.n	8003ca2 <__lshift+0x6e>
 8003cba:	ebac 0304 	sub.w	r3, ip, r4
 8003cbe:	3b15      	subs	r3, #21
 8003cc0:	f023 0303 	bic.w	r3, r3, #3
 8003cc4:	3304      	adds	r3, #4
 8003cc6:	f104 0015 	add.w	r0, r4, #21
 8003cca:	4584      	cmp	ip, r0
 8003ccc:	bf38      	it	cc
 8003cce:	2304      	movcc	r3, #4
 8003cd0:	50ca      	str	r2, [r1, r3]
 8003cd2:	b10a      	cbz	r2, 8003cd8 <__lshift+0xa4>
 8003cd4:	f108 0602 	add.w	r6, r8, #2
 8003cd8:	3e01      	subs	r6, #1
 8003cda:	4638      	mov	r0, r7
 8003cdc:	612e      	str	r6, [r5, #16]
 8003cde:	4621      	mov	r1, r4
 8003ce0:	f7ff fdd8 	bl	8003894 <_Bfree>
 8003ce4:	4628      	mov	r0, r5
 8003ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003cea:	f842 0f04 	str.w	r0, [r2, #4]!
 8003cee:	3301      	adds	r3, #1
 8003cf0:	e7c5      	b.n	8003c7e <__lshift+0x4a>
 8003cf2:	3904      	subs	r1, #4
 8003cf4:	f853 2b04 	ldr.w	r2, [r3], #4
 8003cf8:	f841 2f04 	str.w	r2, [r1, #4]!
 8003cfc:	459c      	cmp	ip, r3
 8003cfe:	d8f9      	bhi.n	8003cf4 <__lshift+0xc0>
 8003d00:	e7ea      	b.n	8003cd8 <__lshift+0xa4>
 8003d02:	bf00      	nop
 8003d04:	080046dd 	.word	0x080046dd
 8003d08:	080046ee 	.word	0x080046ee

08003d0c <__mcmp>:
 8003d0c:	b530      	push	{r4, r5, lr}
 8003d0e:	6902      	ldr	r2, [r0, #16]
 8003d10:	690c      	ldr	r4, [r1, #16]
 8003d12:	1b12      	subs	r2, r2, r4
 8003d14:	d10e      	bne.n	8003d34 <__mcmp+0x28>
 8003d16:	f100 0314 	add.w	r3, r0, #20
 8003d1a:	3114      	adds	r1, #20
 8003d1c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003d20:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003d24:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003d28:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003d2c:	42a5      	cmp	r5, r4
 8003d2e:	d003      	beq.n	8003d38 <__mcmp+0x2c>
 8003d30:	d305      	bcc.n	8003d3e <__mcmp+0x32>
 8003d32:	2201      	movs	r2, #1
 8003d34:	4610      	mov	r0, r2
 8003d36:	bd30      	pop	{r4, r5, pc}
 8003d38:	4283      	cmp	r3, r0
 8003d3a:	d3f3      	bcc.n	8003d24 <__mcmp+0x18>
 8003d3c:	e7fa      	b.n	8003d34 <__mcmp+0x28>
 8003d3e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003d42:	e7f7      	b.n	8003d34 <__mcmp+0x28>

08003d44 <__mdiff>:
 8003d44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d48:	460c      	mov	r4, r1
 8003d4a:	4606      	mov	r6, r0
 8003d4c:	4611      	mov	r1, r2
 8003d4e:	4620      	mov	r0, r4
 8003d50:	4690      	mov	r8, r2
 8003d52:	f7ff ffdb 	bl	8003d0c <__mcmp>
 8003d56:	1e05      	subs	r5, r0, #0
 8003d58:	d110      	bne.n	8003d7c <__mdiff+0x38>
 8003d5a:	4629      	mov	r1, r5
 8003d5c:	4630      	mov	r0, r6
 8003d5e:	f7ff fd59 	bl	8003814 <_Balloc>
 8003d62:	b930      	cbnz	r0, 8003d72 <__mdiff+0x2e>
 8003d64:	4b3a      	ldr	r3, [pc, #232]	; (8003e50 <__mdiff+0x10c>)
 8003d66:	4602      	mov	r2, r0
 8003d68:	f240 2137 	movw	r1, #567	; 0x237
 8003d6c:	4839      	ldr	r0, [pc, #228]	; (8003e54 <__mdiff+0x110>)
 8003d6e:	f7fe fdb9 	bl	80028e4 <__assert_func>
 8003d72:	2301      	movs	r3, #1
 8003d74:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003d78:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d7c:	bfa4      	itt	ge
 8003d7e:	4643      	movge	r3, r8
 8003d80:	46a0      	movge	r8, r4
 8003d82:	4630      	mov	r0, r6
 8003d84:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003d88:	bfa6      	itte	ge
 8003d8a:	461c      	movge	r4, r3
 8003d8c:	2500      	movge	r5, #0
 8003d8e:	2501      	movlt	r5, #1
 8003d90:	f7ff fd40 	bl	8003814 <_Balloc>
 8003d94:	b920      	cbnz	r0, 8003da0 <__mdiff+0x5c>
 8003d96:	4b2e      	ldr	r3, [pc, #184]	; (8003e50 <__mdiff+0x10c>)
 8003d98:	4602      	mov	r2, r0
 8003d9a:	f240 2145 	movw	r1, #581	; 0x245
 8003d9e:	e7e5      	b.n	8003d6c <__mdiff+0x28>
 8003da0:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003da4:	6926      	ldr	r6, [r4, #16]
 8003da6:	60c5      	str	r5, [r0, #12]
 8003da8:	f104 0914 	add.w	r9, r4, #20
 8003dac:	f108 0514 	add.w	r5, r8, #20
 8003db0:	f100 0e14 	add.w	lr, r0, #20
 8003db4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003db8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003dbc:	f108 0210 	add.w	r2, r8, #16
 8003dc0:	46f2      	mov	sl, lr
 8003dc2:	2100      	movs	r1, #0
 8003dc4:	f859 3b04 	ldr.w	r3, [r9], #4
 8003dc8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003dcc:	fa11 f88b 	uxtah	r8, r1, fp
 8003dd0:	b299      	uxth	r1, r3
 8003dd2:	0c1b      	lsrs	r3, r3, #16
 8003dd4:	eba8 0801 	sub.w	r8, r8, r1
 8003dd8:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003ddc:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003de0:	fa1f f888 	uxth.w	r8, r8
 8003de4:	1419      	asrs	r1, r3, #16
 8003de6:	454e      	cmp	r6, r9
 8003de8:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003dec:	f84a 3b04 	str.w	r3, [sl], #4
 8003df0:	d8e8      	bhi.n	8003dc4 <__mdiff+0x80>
 8003df2:	1b33      	subs	r3, r6, r4
 8003df4:	3b15      	subs	r3, #21
 8003df6:	f023 0303 	bic.w	r3, r3, #3
 8003dfa:	3304      	adds	r3, #4
 8003dfc:	3415      	adds	r4, #21
 8003dfe:	42a6      	cmp	r6, r4
 8003e00:	bf38      	it	cc
 8003e02:	2304      	movcc	r3, #4
 8003e04:	441d      	add	r5, r3
 8003e06:	4473      	add	r3, lr
 8003e08:	469e      	mov	lr, r3
 8003e0a:	462e      	mov	r6, r5
 8003e0c:	4566      	cmp	r6, ip
 8003e0e:	d30e      	bcc.n	8003e2e <__mdiff+0xea>
 8003e10:	f10c 0203 	add.w	r2, ip, #3
 8003e14:	1b52      	subs	r2, r2, r5
 8003e16:	f022 0203 	bic.w	r2, r2, #3
 8003e1a:	3d03      	subs	r5, #3
 8003e1c:	45ac      	cmp	ip, r5
 8003e1e:	bf38      	it	cc
 8003e20:	2200      	movcc	r2, #0
 8003e22:	4413      	add	r3, r2
 8003e24:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8003e28:	b17a      	cbz	r2, 8003e4a <__mdiff+0x106>
 8003e2a:	6107      	str	r7, [r0, #16]
 8003e2c:	e7a4      	b.n	8003d78 <__mdiff+0x34>
 8003e2e:	f856 8b04 	ldr.w	r8, [r6], #4
 8003e32:	fa11 f288 	uxtah	r2, r1, r8
 8003e36:	1414      	asrs	r4, r2, #16
 8003e38:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8003e3c:	b292      	uxth	r2, r2
 8003e3e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003e42:	f84e 2b04 	str.w	r2, [lr], #4
 8003e46:	1421      	asrs	r1, r4, #16
 8003e48:	e7e0      	b.n	8003e0c <__mdiff+0xc8>
 8003e4a:	3f01      	subs	r7, #1
 8003e4c:	e7ea      	b.n	8003e24 <__mdiff+0xe0>
 8003e4e:	bf00      	nop
 8003e50:	080046dd 	.word	0x080046dd
 8003e54:	080046ee 	.word	0x080046ee

08003e58 <__d2b>:
 8003e58:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003e5c:	460f      	mov	r7, r1
 8003e5e:	2101      	movs	r1, #1
 8003e60:	ec59 8b10 	vmov	r8, r9, d0
 8003e64:	4616      	mov	r6, r2
 8003e66:	f7ff fcd5 	bl	8003814 <_Balloc>
 8003e6a:	4604      	mov	r4, r0
 8003e6c:	b930      	cbnz	r0, 8003e7c <__d2b+0x24>
 8003e6e:	4602      	mov	r2, r0
 8003e70:	4b24      	ldr	r3, [pc, #144]	; (8003f04 <__d2b+0xac>)
 8003e72:	4825      	ldr	r0, [pc, #148]	; (8003f08 <__d2b+0xb0>)
 8003e74:	f240 310f 	movw	r1, #783	; 0x30f
 8003e78:	f7fe fd34 	bl	80028e4 <__assert_func>
 8003e7c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003e80:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003e84:	bb2d      	cbnz	r5, 8003ed2 <__d2b+0x7a>
 8003e86:	9301      	str	r3, [sp, #4]
 8003e88:	f1b8 0300 	subs.w	r3, r8, #0
 8003e8c:	d026      	beq.n	8003edc <__d2b+0x84>
 8003e8e:	4668      	mov	r0, sp
 8003e90:	9300      	str	r3, [sp, #0]
 8003e92:	f7ff fd87 	bl	80039a4 <__lo0bits>
 8003e96:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003e9a:	b1e8      	cbz	r0, 8003ed8 <__d2b+0x80>
 8003e9c:	f1c0 0320 	rsb	r3, r0, #32
 8003ea0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ea4:	430b      	orrs	r3, r1
 8003ea6:	40c2      	lsrs	r2, r0
 8003ea8:	6163      	str	r3, [r4, #20]
 8003eaa:	9201      	str	r2, [sp, #4]
 8003eac:	9b01      	ldr	r3, [sp, #4]
 8003eae:	61a3      	str	r3, [r4, #24]
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	bf14      	ite	ne
 8003eb4:	2202      	movne	r2, #2
 8003eb6:	2201      	moveq	r2, #1
 8003eb8:	6122      	str	r2, [r4, #16]
 8003eba:	b1bd      	cbz	r5, 8003eec <__d2b+0x94>
 8003ebc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003ec0:	4405      	add	r5, r0
 8003ec2:	603d      	str	r5, [r7, #0]
 8003ec4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003ec8:	6030      	str	r0, [r6, #0]
 8003eca:	4620      	mov	r0, r4
 8003ecc:	b003      	add	sp, #12
 8003ece:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003ed2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003ed6:	e7d6      	b.n	8003e86 <__d2b+0x2e>
 8003ed8:	6161      	str	r1, [r4, #20]
 8003eda:	e7e7      	b.n	8003eac <__d2b+0x54>
 8003edc:	a801      	add	r0, sp, #4
 8003ede:	f7ff fd61 	bl	80039a4 <__lo0bits>
 8003ee2:	9b01      	ldr	r3, [sp, #4]
 8003ee4:	6163      	str	r3, [r4, #20]
 8003ee6:	3020      	adds	r0, #32
 8003ee8:	2201      	movs	r2, #1
 8003eea:	e7e5      	b.n	8003eb8 <__d2b+0x60>
 8003eec:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003ef0:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003ef4:	6038      	str	r0, [r7, #0]
 8003ef6:	6918      	ldr	r0, [r3, #16]
 8003ef8:	f7ff fd34 	bl	8003964 <__hi0bits>
 8003efc:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003f00:	e7e2      	b.n	8003ec8 <__d2b+0x70>
 8003f02:	bf00      	nop
 8003f04:	080046dd 	.word	0x080046dd
 8003f08:	080046ee 	.word	0x080046ee

08003f0c <__sfputc_r>:
 8003f0c:	6893      	ldr	r3, [r2, #8]
 8003f0e:	3b01      	subs	r3, #1
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	b410      	push	{r4}
 8003f14:	6093      	str	r3, [r2, #8]
 8003f16:	da08      	bge.n	8003f2a <__sfputc_r+0x1e>
 8003f18:	6994      	ldr	r4, [r2, #24]
 8003f1a:	42a3      	cmp	r3, r4
 8003f1c:	db01      	blt.n	8003f22 <__sfputc_r+0x16>
 8003f1e:	290a      	cmp	r1, #10
 8003f20:	d103      	bne.n	8003f2a <__sfputc_r+0x1e>
 8003f22:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003f26:	f7fe bbbc 	b.w	80026a2 <__swbuf_r>
 8003f2a:	6813      	ldr	r3, [r2, #0]
 8003f2c:	1c58      	adds	r0, r3, #1
 8003f2e:	6010      	str	r0, [r2, #0]
 8003f30:	7019      	strb	r1, [r3, #0]
 8003f32:	4608      	mov	r0, r1
 8003f34:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003f38:	4770      	bx	lr

08003f3a <__sfputs_r>:
 8003f3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f3c:	4606      	mov	r6, r0
 8003f3e:	460f      	mov	r7, r1
 8003f40:	4614      	mov	r4, r2
 8003f42:	18d5      	adds	r5, r2, r3
 8003f44:	42ac      	cmp	r4, r5
 8003f46:	d101      	bne.n	8003f4c <__sfputs_r+0x12>
 8003f48:	2000      	movs	r0, #0
 8003f4a:	e007      	b.n	8003f5c <__sfputs_r+0x22>
 8003f4c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f50:	463a      	mov	r2, r7
 8003f52:	4630      	mov	r0, r6
 8003f54:	f7ff ffda 	bl	8003f0c <__sfputc_r>
 8003f58:	1c43      	adds	r3, r0, #1
 8003f5a:	d1f3      	bne.n	8003f44 <__sfputs_r+0xa>
 8003f5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003f60 <_vfiprintf_r>:
 8003f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f64:	460d      	mov	r5, r1
 8003f66:	b09d      	sub	sp, #116	; 0x74
 8003f68:	4614      	mov	r4, r2
 8003f6a:	4698      	mov	r8, r3
 8003f6c:	4606      	mov	r6, r0
 8003f6e:	b118      	cbz	r0, 8003f78 <_vfiprintf_r+0x18>
 8003f70:	6a03      	ldr	r3, [r0, #32]
 8003f72:	b90b      	cbnz	r3, 8003f78 <_vfiprintf_r+0x18>
 8003f74:	f7fe faae 	bl	80024d4 <__sinit>
 8003f78:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003f7a:	07d9      	lsls	r1, r3, #31
 8003f7c:	d405      	bmi.n	8003f8a <_vfiprintf_r+0x2a>
 8003f7e:	89ab      	ldrh	r3, [r5, #12]
 8003f80:	059a      	lsls	r2, r3, #22
 8003f82:	d402      	bmi.n	8003f8a <_vfiprintf_r+0x2a>
 8003f84:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003f86:	f7fe fc9d 	bl	80028c4 <__retarget_lock_acquire_recursive>
 8003f8a:	89ab      	ldrh	r3, [r5, #12]
 8003f8c:	071b      	lsls	r3, r3, #28
 8003f8e:	d501      	bpl.n	8003f94 <_vfiprintf_r+0x34>
 8003f90:	692b      	ldr	r3, [r5, #16]
 8003f92:	b99b      	cbnz	r3, 8003fbc <_vfiprintf_r+0x5c>
 8003f94:	4629      	mov	r1, r5
 8003f96:	4630      	mov	r0, r6
 8003f98:	f7fe fbc0 	bl	800271c <__swsetup_r>
 8003f9c:	b170      	cbz	r0, 8003fbc <_vfiprintf_r+0x5c>
 8003f9e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003fa0:	07dc      	lsls	r4, r3, #31
 8003fa2:	d504      	bpl.n	8003fae <_vfiprintf_r+0x4e>
 8003fa4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003fa8:	b01d      	add	sp, #116	; 0x74
 8003faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fae:	89ab      	ldrh	r3, [r5, #12]
 8003fb0:	0598      	lsls	r0, r3, #22
 8003fb2:	d4f7      	bmi.n	8003fa4 <_vfiprintf_r+0x44>
 8003fb4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003fb6:	f7fe fc86 	bl	80028c6 <__retarget_lock_release_recursive>
 8003fba:	e7f3      	b.n	8003fa4 <_vfiprintf_r+0x44>
 8003fbc:	2300      	movs	r3, #0
 8003fbe:	9309      	str	r3, [sp, #36]	; 0x24
 8003fc0:	2320      	movs	r3, #32
 8003fc2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003fc6:	f8cd 800c 	str.w	r8, [sp, #12]
 8003fca:	2330      	movs	r3, #48	; 0x30
 8003fcc:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8004180 <_vfiprintf_r+0x220>
 8003fd0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003fd4:	f04f 0901 	mov.w	r9, #1
 8003fd8:	4623      	mov	r3, r4
 8003fda:	469a      	mov	sl, r3
 8003fdc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003fe0:	b10a      	cbz	r2, 8003fe6 <_vfiprintf_r+0x86>
 8003fe2:	2a25      	cmp	r2, #37	; 0x25
 8003fe4:	d1f9      	bne.n	8003fda <_vfiprintf_r+0x7a>
 8003fe6:	ebba 0b04 	subs.w	fp, sl, r4
 8003fea:	d00b      	beq.n	8004004 <_vfiprintf_r+0xa4>
 8003fec:	465b      	mov	r3, fp
 8003fee:	4622      	mov	r2, r4
 8003ff0:	4629      	mov	r1, r5
 8003ff2:	4630      	mov	r0, r6
 8003ff4:	f7ff ffa1 	bl	8003f3a <__sfputs_r>
 8003ff8:	3001      	adds	r0, #1
 8003ffa:	f000 80a9 	beq.w	8004150 <_vfiprintf_r+0x1f0>
 8003ffe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004000:	445a      	add	r2, fp
 8004002:	9209      	str	r2, [sp, #36]	; 0x24
 8004004:	f89a 3000 	ldrb.w	r3, [sl]
 8004008:	2b00      	cmp	r3, #0
 800400a:	f000 80a1 	beq.w	8004150 <_vfiprintf_r+0x1f0>
 800400e:	2300      	movs	r3, #0
 8004010:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004014:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004018:	f10a 0a01 	add.w	sl, sl, #1
 800401c:	9304      	str	r3, [sp, #16]
 800401e:	9307      	str	r3, [sp, #28]
 8004020:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004024:	931a      	str	r3, [sp, #104]	; 0x68
 8004026:	4654      	mov	r4, sl
 8004028:	2205      	movs	r2, #5
 800402a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800402e:	4854      	ldr	r0, [pc, #336]	; (8004180 <_vfiprintf_r+0x220>)
 8004030:	f7fc f8ce 	bl	80001d0 <memchr>
 8004034:	9a04      	ldr	r2, [sp, #16]
 8004036:	b9d8      	cbnz	r0, 8004070 <_vfiprintf_r+0x110>
 8004038:	06d1      	lsls	r1, r2, #27
 800403a:	bf44      	itt	mi
 800403c:	2320      	movmi	r3, #32
 800403e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004042:	0713      	lsls	r3, r2, #28
 8004044:	bf44      	itt	mi
 8004046:	232b      	movmi	r3, #43	; 0x2b
 8004048:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800404c:	f89a 3000 	ldrb.w	r3, [sl]
 8004050:	2b2a      	cmp	r3, #42	; 0x2a
 8004052:	d015      	beq.n	8004080 <_vfiprintf_r+0x120>
 8004054:	9a07      	ldr	r2, [sp, #28]
 8004056:	4654      	mov	r4, sl
 8004058:	2000      	movs	r0, #0
 800405a:	f04f 0c0a 	mov.w	ip, #10
 800405e:	4621      	mov	r1, r4
 8004060:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004064:	3b30      	subs	r3, #48	; 0x30
 8004066:	2b09      	cmp	r3, #9
 8004068:	d94d      	bls.n	8004106 <_vfiprintf_r+0x1a6>
 800406a:	b1b0      	cbz	r0, 800409a <_vfiprintf_r+0x13a>
 800406c:	9207      	str	r2, [sp, #28]
 800406e:	e014      	b.n	800409a <_vfiprintf_r+0x13a>
 8004070:	eba0 0308 	sub.w	r3, r0, r8
 8004074:	fa09 f303 	lsl.w	r3, r9, r3
 8004078:	4313      	orrs	r3, r2
 800407a:	9304      	str	r3, [sp, #16]
 800407c:	46a2      	mov	sl, r4
 800407e:	e7d2      	b.n	8004026 <_vfiprintf_r+0xc6>
 8004080:	9b03      	ldr	r3, [sp, #12]
 8004082:	1d19      	adds	r1, r3, #4
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	9103      	str	r1, [sp, #12]
 8004088:	2b00      	cmp	r3, #0
 800408a:	bfbb      	ittet	lt
 800408c:	425b      	neglt	r3, r3
 800408e:	f042 0202 	orrlt.w	r2, r2, #2
 8004092:	9307      	strge	r3, [sp, #28]
 8004094:	9307      	strlt	r3, [sp, #28]
 8004096:	bfb8      	it	lt
 8004098:	9204      	strlt	r2, [sp, #16]
 800409a:	7823      	ldrb	r3, [r4, #0]
 800409c:	2b2e      	cmp	r3, #46	; 0x2e
 800409e:	d10c      	bne.n	80040ba <_vfiprintf_r+0x15a>
 80040a0:	7863      	ldrb	r3, [r4, #1]
 80040a2:	2b2a      	cmp	r3, #42	; 0x2a
 80040a4:	d134      	bne.n	8004110 <_vfiprintf_r+0x1b0>
 80040a6:	9b03      	ldr	r3, [sp, #12]
 80040a8:	1d1a      	adds	r2, r3, #4
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	9203      	str	r2, [sp, #12]
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	bfb8      	it	lt
 80040b2:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80040b6:	3402      	adds	r4, #2
 80040b8:	9305      	str	r3, [sp, #20]
 80040ba:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8004190 <_vfiprintf_r+0x230>
 80040be:	7821      	ldrb	r1, [r4, #0]
 80040c0:	2203      	movs	r2, #3
 80040c2:	4650      	mov	r0, sl
 80040c4:	f7fc f884 	bl	80001d0 <memchr>
 80040c8:	b138      	cbz	r0, 80040da <_vfiprintf_r+0x17a>
 80040ca:	9b04      	ldr	r3, [sp, #16]
 80040cc:	eba0 000a 	sub.w	r0, r0, sl
 80040d0:	2240      	movs	r2, #64	; 0x40
 80040d2:	4082      	lsls	r2, r0
 80040d4:	4313      	orrs	r3, r2
 80040d6:	3401      	adds	r4, #1
 80040d8:	9304      	str	r3, [sp, #16]
 80040da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80040de:	4829      	ldr	r0, [pc, #164]	; (8004184 <_vfiprintf_r+0x224>)
 80040e0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80040e4:	2206      	movs	r2, #6
 80040e6:	f7fc f873 	bl	80001d0 <memchr>
 80040ea:	2800      	cmp	r0, #0
 80040ec:	d03f      	beq.n	800416e <_vfiprintf_r+0x20e>
 80040ee:	4b26      	ldr	r3, [pc, #152]	; (8004188 <_vfiprintf_r+0x228>)
 80040f0:	bb1b      	cbnz	r3, 800413a <_vfiprintf_r+0x1da>
 80040f2:	9b03      	ldr	r3, [sp, #12]
 80040f4:	3307      	adds	r3, #7
 80040f6:	f023 0307 	bic.w	r3, r3, #7
 80040fa:	3308      	adds	r3, #8
 80040fc:	9303      	str	r3, [sp, #12]
 80040fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004100:	443b      	add	r3, r7
 8004102:	9309      	str	r3, [sp, #36]	; 0x24
 8004104:	e768      	b.n	8003fd8 <_vfiprintf_r+0x78>
 8004106:	fb0c 3202 	mla	r2, ip, r2, r3
 800410a:	460c      	mov	r4, r1
 800410c:	2001      	movs	r0, #1
 800410e:	e7a6      	b.n	800405e <_vfiprintf_r+0xfe>
 8004110:	2300      	movs	r3, #0
 8004112:	3401      	adds	r4, #1
 8004114:	9305      	str	r3, [sp, #20]
 8004116:	4619      	mov	r1, r3
 8004118:	f04f 0c0a 	mov.w	ip, #10
 800411c:	4620      	mov	r0, r4
 800411e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004122:	3a30      	subs	r2, #48	; 0x30
 8004124:	2a09      	cmp	r2, #9
 8004126:	d903      	bls.n	8004130 <_vfiprintf_r+0x1d0>
 8004128:	2b00      	cmp	r3, #0
 800412a:	d0c6      	beq.n	80040ba <_vfiprintf_r+0x15a>
 800412c:	9105      	str	r1, [sp, #20]
 800412e:	e7c4      	b.n	80040ba <_vfiprintf_r+0x15a>
 8004130:	fb0c 2101 	mla	r1, ip, r1, r2
 8004134:	4604      	mov	r4, r0
 8004136:	2301      	movs	r3, #1
 8004138:	e7f0      	b.n	800411c <_vfiprintf_r+0x1bc>
 800413a:	ab03      	add	r3, sp, #12
 800413c:	9300      	str	r3, [sp, #0]
 800413e:	462a      	mov	r2, r5
 8004140:	4b12      	ldr	r3, [pc, #72]	; (800418c <_vfiprintf_r+0x22c>)
 8004142:	a904      	add	r1, sp, #16
 8004144:	4630      	mov	r0, r6
 8004146:	f7fd fd85 	bl	8001c54 <_printf_float>
 800414a:	4607      	mov	r7, r0
 800414c:	1c78      	adds	r0, r7, #1
 800414e:	d1d6      	bne.n	80040fe <_vfiprintf_r+0x19e>
 8004150:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004152:	07d9      	lsls	r1, r3, #31
 8004154:	d405      	bmi.n	8004162 <_vfiprintf_r+0x202>
 8004156:	89ab      	ldrh	r3, [r5, #12]
 8004158:	059a      	lsls	r2, r3, #22
 800415a:	d402      	bmi.n	8004162 <_vfiprintf_r+0x202>
 800415c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800415e:	f7fe fbb2 	bl	80028c6 <__retarget_lock_release_recursive>
 8004162:	89ab      	ldrh	r3, [r5, #12]
 8004164:	065b      	lsls	r3, r3, #25
 8004166:	f53f af1d 	bmi.w	8003fa4 <_vfiprintf_r+0x44>
 800416a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800416c:	e71c      	b.n	8003fa8 <_vfiprintf_r+0x48>
 800416e:	ab03      	add	r3, sp, #12
 8004170:	9300      	str	r3, [sp, #0]
 8004172:	462a      	mov	r2, r5
 8004174:	4b05      	ldr	r3, [pc, #20]	; (800418c <_vfiprintf_r+0x22c>)
 8004176:	a904      	add	r1, sp, #16
 8004178:	4630      	mov	r0, r6
 800417a:	f7fe f80f 	bl	800219c <_printf_i>
 800417e:	e7e4      	b.n	800414a <_vfiprintf_r+0x1ea>
 8004180:	08004844 	.word	0x08004844
 8004184:	0800484e 	.word	0x0800484e
 8004188:	08001c55 	.word	0x08001c55
 800418c:	08003f3b 	.word	0x08003f3b
 8004190:	0800484a 	.word	0x0800484a

08004194 <__sflush_r>:
 8004194:	898a      	ldrh	r2, [r1, #12]
 8004196:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800419a:	4605      	mov	r5, r0
 800419c:	0710      	lsls	r0, r2, #28
 800419e:	460c      	mov	r4, r1
 80041a0:	d458      	bmi.n	8004254 <__sflush_r+0xc0>
 80041a2:	684b      	ldr	r3, [r1, #4]
 80041a4:	2b00      	cmp	r3, #0
 80041a6:	dc05      	bgt.n	80041b4 <__sflush_r+0x20>
 80041a8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80041aa:	2b00      	cmp	r3, #0
 80041ac:	dc02      	bgt.n	80041b4 <__sflush_r+0x20>
 80041ae:	2000      	movs	r0, #0
 80041b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80041b6:	2e00      	cmp	r6, #0
 80041b8:	d0f9      	beq.n	80041ae <__sflush_r+0x1a>
 80041ba:	2300      	movs	r3, #0
 80041bc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80041c0:	682f      	ldr	r7, [r5, #0]
 80041c2:	6a21      	ldr	r1, [r4, #32]
 80041c4:	602b      	str	r3, [r5, #0]
 80041c6:	d032      	beq.n	800422e <__sflush_r+0x9a>
 80041c8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80041ca:	89a3      	ldrh	r3, [r4, #12]
 80041cc:	075a      	lsls	r2, r3, #29
 80041ce:	d505      	bpl.n	80041dc <__sflush_r+0x48>
 80041d0:	6863      	ldr	r3, [r4, #4]
 80041d2:	1ac0      	subs	r0, r0, r3
 80041d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80041d6:	b10b      	cbz	r3, 80041dc <__sflush_r+0x48>
 80041d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80041da:	1ac0      	subs	r0, r0, r3
 80041dc:	2300      	movs	r3, #0
 80041de:	4602      	mov	r2, r0
 80041e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80041e2:	6a21      	ldr	r1, [r4, #32]
 80041e4:	4628      	mov	r0, r5
 80041e6:	47b0      	blx	r6
 80041e8:	1c43      	adds	r3, r0, #1
 80041ea:	89a3      	ldrh	r3, [r4, #12]
 80041ec:	d106      	bne.n	80041fc <__sflush_r+0x68>
 80041ee:	6829      	ldr	r1, [r5, #0]
 80041f0:	291d      	cmp	r1, #29
 80041f2:	d82b      	bhi.n	800424c <__sflush_r+0xb8>
 80041f4:	4a29      	ldr	r2, [pc, #164]	; (800429c <__sflush_r+0x108>)
 80041f6:	410a      	asrs	r2, r1
 80041f8:	07d6      	lsls	r6, r2, #31
 80041fa:	d427      	bmi.n	800424c <__sflush_r+0xb8>
 80041fc:	2200      	movs	r2, #0
 80041fe:	6062      	str	r2, [r4, #4]
 8004200:	04d9      	lsls	r1, r3, #19
 8004202:	6922      	ldr	r2, [r4, #16]
 8004204:	6022      	str	r2, [r4, #0]
 8004206:	d504      	bpl.n	8004212 <__sflush_r+0x7e>
 8004208:	1c42      	adds	r2, r0, #1
 800420a:	d101      	bne.n	8004210 <__sflush_r+0x7c>
 800420c:	682b      	ldr	r3, [r5, #0]
 800420e:	b903      	cbnz	r3, 8004212 <__sflush_r+0x7e>
 8004210:	6560      	str	r0, [r4, #84]	; 0x54
 8004212:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004214:	602f      	str	r7, [r5, #0]
 8004216:	2900      	cmp	r1, #0
 8004218:	d0c9      	beq.n	80041ae <__sflush_r+0x1a>
 800421a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800421e:	4299      	cmp	r1, r3
 8004220:	d002      	beq.n	8004228 <__sflush_r+0x94>
 8004222:	4628      	mov	r0, r5
 8004224:	f7ff f9f6 	bl	8003614 <_free_r>
 8004228:	2000      	movs	r0, #0
 800422a:	6360      	str	r0, [r4, #52]	; 0x34
 800422c:	e7c0      	b.n	80041b0 <__sflush_r+0x1c>
 800422e:	2301      	movs	r3, #1
 8004230:	4628      	mov	r0, r5
 8004232:	47b0      	blx	r6
 8004234:	1c41      	adds	r1, r0, #1
 8004236:	d1c8      	bne.n	80041ca <__sflush_r+0x36>
 8004238:	682b      	ldr	r3, [r5, #0]
 800423a:	2b00      	cmp	r3, #0
 800423c:	d0c5      	beq.n	80041ca <__sflush_r+0x36>
 800423e:	2b1d      	cmp	r3, #29
 8004240:	d001      	beq.n	8004246 <__sflush_r+0xb2>
 8004242:	2b16      	cmp	r3, #22
 8004244:	d101      	bne.n	800424a <__sflush_r+0xb6>
 8004246:	602f      	str	r7, [r5, #0]
 8004248:	e7b1      	b.n	80041ae <__sflush_r+0x1a>
 800424a:	89a3      	ldrh	r3, [r4, #12]
 800424c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004250:	81a3      	strh	r3, [r4, #12]
 8004252:	e7ad      	b.n	80041b0 <__sflush_r+0x1c>
 8004254:	690f      	ldr	r7, [r1, #16]
 8004256:	2f00      	cmp	r7, #0
 8004258:	d0a9      	beq.n	80041ae <__sflush_r+0x1a>
 800425a:	0793      	lsls	r3, r2, #30
 800425c:	680e      	ldr	r6, [r1, #0]
 800425e:	bf08      	it	eq
 8004260:	694b      	ldreq	r3, [r1, #20]
 8004262:	600f      	str	r7, [r1, #0]
 8004264:	bf18      	it	ne
 8004266:	2300      	movne	r3, #0
 8004268:	eba6 0807 	sub.w	r8, r6, r7
 800426c:	608b      	str	r3, [r1, #8]
 800426e:	f1b8 0f00 	cmp.w	r8, #0
 8004272:	dd9c      	ble.n	80041ae <__sflush_r+0x1a>
 8004274:	6a21      	ldr	r1, [r4, #32]
 8004276:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004278:	4643      	mov	r3, r8
 800427a:	463a      	mov	r2, r7
 800427c:	4628      	mov	r0, r5
 800427e:	47b0      	blx	r6
 8004280:	2800      	cmp	r0, #0
 8004282:	dc06      	bgt.n	8004292 <__sflush_r+0xfe>
 8004284:	89a3      	ldrh	r3, [r4, #12]
 8004286:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800428a:	81a3      	strh	r3, [r4, #12]
 800428c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004290:	e78e      	b.n	80041b0 <__sflush_r+0x1c>
 8004292:	4407      	add	r7, r0
 8004294:	eba8 0800 	sub.w	r8, r8, r0
 8004298:	e7e9      	b.n	800426e <__sflush_r+0xda>
 800429a:	bf00      	nop
 800429c:	dfbffffe 	.word	0xdfbffffe

080042a0 <_fflush_r>:
 80042a0:	b538      	push	{r3, r4, r5, lr}
 80042a2:	690b      	ldr	r3, [r1, #16]
 80042a4:	4605      	mov	r5, r0
 80042a6:	460c      	mov	r4, r1
 80042a8:	b913      	cbnz	r3, 80042b0 <_fflush_r+0x10>
 80042aa:	2500      	movs	r5, #0
 80042ac:	4628      	mov	r0, r5
 80042ae:	bd38      	pop	{r3, r4, r5, pc}
 80042b0:	b118      	cbz	r0, 80042ba <_fflush_r+0x1a>
 80042b2:	6a03      	ldr	r3, [r0, #32]
 80042b4:	b90b      	cbnz	r3, 80042ba <_fflush_r+0x1a>
 80042b6:	f7fe f90d 	bl	80024d4 <__sinit>
 80042ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042be:	2b00      	cmp	r3, #0
 80042c0:	d0f3      	beq.n	80042aa <_fflush_r+0xa>
 80042c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80042c4:	07d0      	lsls	r0, r2, #31
 80042c6:	d404      	bmi.n	80042d2 <_fflush_r+0x32>
 80042c8:	0599      	lsls	r1, r3, #22
 80042ca:	d402      	bmi.n	80042d2 <_fflush_r+0x32>
 80042cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80042ce:	f7fe faf9 	bl	80028c4 <__retarget_lock_acquire_recursive>
 80042d2:	4628      	mov	r0, r5
 80042d4:	4621      	mov	r1, r4
 80042d6:	f7ff ff5d 	bl	8004194 <__sflush_r>
 80042da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80042dc:	07da      	lsls	r2, r3, #31
 80042de:	4605      	mov	r5, r0
 80042e0:	d4e4      	bmi.n	80042ac <_fflush_r+0xc>
 80042e2:	89a3      	ldrh	r3, [r4, #12]
 80042e4:	059b      	lsls	r3, r3, #22
 80042e6:	d4e1      	bmi.n	80042ac <_fflush_r+0xc>
 80042e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80042ea:	f7fe faec 	bl	80028c6 <__retarget_lock_release_recursive>
 80042ee:	e7dd      	b.n	80042ac <_fflush_r+0xc>

080042f0 <fiprintf>:
 80042f0:	b40e      	push	{r1, r2, r3}
 80042f2:	b503      	push	{r0, r1, lr}
 80042f4:	4601      	mov	r1, r0
 80042f6:	ab03      	add	r3, sp, #12
 80042f8:	4805      	ldr	r0, [pc, #20]	; (8004310 <fiprintf+0x20>)
 80042fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80042fe:	6800      	ldr	r0, [r0, #0]
 8004300:	9301      	str	r3, [sp, #4]
 8004302:	f7ff fe2d 	bl	8003f60 <_vfiprintf_r>
 8004306:	b002      	add	sp, #8
 8004308:	f85d eb04 	ldr.w	lr, [sp], #4
 800430c:	b003      	add	sp, #12
 800430e:	4770      	bx	lr
 8004310:	2000006c 	.word	0x2000006c

08004314 <__swhatbuf_r>:
 8004314:	b570      	push	{r4, r5, r6, lr}
 8004316:	460c      	mov	r4, r1
 8004318:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800431c:	2900      	cmp	r1, #0
 800431e:	b096      	sub	sp, #88	; 0x58
 8004320:	4615      	mov	r5, r2
 8004322:	461e      	mov	r6, r3
 8004324:	da0d      	bge.n	8004342 <__swhatbuf_r+0x2e>
 8004326:	89a3      	ldrh	r3, [r4, #12]
 8004328:	f013 0f80 	tst.w	r3, #128	; 0x80
 800432c:	f04f 0100 	mov.w	r1, #0
 8004330:	bf0c      	ite	eq
 8004332:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8004336:	2340      	movne	r3, #64	; 0x40
 8004338:	2000      	movs	r0, #0
 800433a:	6031      	str	r1, [r6, #0]
 800433c:	602b      	str	r3, [r5, #0]
 800433e:	b016      	add	sp, #88	; 0x58
 8004340:	bd70      	pop	{r4, r5, r6, pc}
 8004342:	466a      	mov	r2, sp
 8004344:	f000 f848 	bl	80043d8 <_fstat_r>
 8004348:	2800      	cmp	r0, #0
 800434a:	dbec      	blt.n	8004326 <__swhatbuf_r+0x12>
 800434c:	9901      	ldr	r1, [sp, #4]
 800434e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8004352:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8004356:	4259      	negs	r1, r3
 8004358:	4159      	adcs	r1, r3
 800435a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800435e:	e7eb      	b.n	8004338 <__swhatbuf_r+0x24>

08004360 <__smakebuf_r>:
 8004360:	898b      	ldrh	r3, [r1, #12]
 8004362:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004364:	079d      	lsls	r5, r3, #30
 8004366:	4606      	mov	r6, r0
 8004368:	460c      	mov	r4, r1
 800436a:	d507      	bpl.n	800437c <__smakebuf_r+0x1c>
 800436c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004370:	6023      	str	r3, [r4, #0]
 8004372:	6123      	str	r3, [r4, #16]
 8004374:	2301      	movs	r3, #1
 8004376:	6163      	str	r3, [r4, #20]
 8004378:	b002      	add	sp, #8
 800437a:	bd70      	pop	{r4, r5, r6, pc}
 800437c:	ab01      	add	r3, sp, #4
 800437e:	466a      	mov	r2, sp
 8004380:	f7ff ffc8 	bl	8004314 <__swhatbuf_r>
 8004384:	9900      	ldr	r1, [sp, #0]
 8004386:	4605      	mov	r5, r0
 8004388:	4630      	mov	r0, r6
 800438a:	f7ff f9b7 	bl	80036fc <_malloc_r>
 800438e:	b948      	cbnz	r0, 80043a4 <__smakebuf_r+0x44>
 8004390:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004394:	059a      	lsls	r2, r3, #22
 8004396:	d4ef      	bmi.n	8004378 <__smakebuf_r+0x18>
 8004398:	f023 0303 	bic.w	r3, r3, #3
 800439c:	f043 0302 	orr.w	r3, r3, #2
 80043a0:	81a3      	strh	r3, [r4, #12]
 80043a2:	e7e3      	b.n	800436c <__smakebuf_r+0xc>
 80043a4:	89a3      	ldrh	r3, [r4, #12]
 80043a6:	6020      	str	r0, [r4, #0]
 80043a8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80043ac:	81a3      	strh	r3, [r4, #12]
 80043ae:	9b00      	ldr	r3, [sp, #0]
 80043b0:	6163      	str	r3, [r4, #20]
 80043b2:	9b01      	ldr	r3, [sp, #4]
 80043b4:	6120      	str	r0, [r4, #16]
 80043b6:	b15b      	cbz	r3, 80043d0 <__smakebuf_r+0x70>
 80043b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80043bc:	4630      	mov	r0, r6
 80043be:	f000 f81d 	bl	80043fc <_isatty_r>
 80043c2:	b128      	cbz	r0, 80043d0 <__smakebuf_r+0x70>
 80043c4:	89a3      	ldrh	r3, [r4, #12]
 80043c6:	f023 0303 	bic.w	r3, r3, #3
 80043ca:	f043 0301 	orr.w	r3, r3, #1
 80043ce:	81a3      	strh	r3, [r4, #12]
 80043d0:	89a3      	ldrh	r3, [r4, #12]
 80043d2:	431d      	orrs	r5, r3
 80043d4:	81a5      	strh	r5, [r4, #12]
 80043d6:	e7cf      	b.n	8004378 <__smakebuf_r+0x18>

080043d8 <_fstat_r>:
 80043d8:	b538      	push	{r3, r4, r5, lr}
 80043da:	4d07      	ldr	r5, [pc, #28]	; (80043f8 <_fstat_r+0x20>)
 80043dc:	2300      	movs	r3, #0
 80043de:	4604      	mov	r4, r0
 80043e0:	4608      	mov	r0, r1
 80043e2:	4611      	mov	r1, r2
 80043e4:	602b      	str	r3, [r5, #0]
 80043e6:	f7fd fa12 	bl	800180e <_fstat>
 80043ea:	1c43      	adds	r3, r0, #1
 80043ec:	d102      	bne.n	80043f4 <_fstat_r+0x1c>
 80043ee:	682b      	ldr	r3, [r5, #0]
 80043f0:	b103      	cbz	r3, 80043f4 <_fstat_r+0x1c>
 80043f2:	6023      	str	r3, [r4, #0]
 80043f4:	bd38      	pop	{r3, r4, r5, pc}
 80043f6:	bf00      	nop
 80043f8:	200003f8 	.word	0x200003f8

080043fc <_isatty_r>:
 80043fc:	b538      	push	{r3, r4, r5, lr}
 80043fe:	4d06      	ldr	r5, [pc, #24]	; (8004418 <_isatty_r+0x1c>)
 8004400:	2300      	movs	r3, #0
 8004402:	4604      	mov	r4, r0
 8004404:	4608      	mov	r0, r1
 8004406:	602b      	str	r3, [r5, #0]
 8004408:	f7fd fb68 	bl	8001adc <_isatty>
 800440c:	1c43      	adds	r3, r0, #1
 800440e:	d102      	bne.n	8004416 <_isatty_r+0x1a>
 8004410:	682b      	ldr	r3, [r5, #0]
 8004412:	b103      	cbz	r3, 8004416 <_isatty_r+0x1a>
 8004414:	6023      	str	r3, [r4, #0]
 8004416:	bd38      	pop	{r3, r4, r5, pc}
 8004418:	200003f8 	.word	0x200003f8

0800441c <_sbrk_r>:
 800441c:	b538      	push	{r3, r4, r5, lr}
 800441e:	4d06      	ldr	r5, [pc, #24]	; (8004438 <_sbrk_r+0x1c>)
 8004420:	2300      	movs	r3, #0
 8004422:	4604      	mov	r4, r0
 8004424:	4608      	mov	r0, r1
 8004426:	602b      	str	r3, [r5, #0]
 8004428:	f7fc fd00 	bl	8000e2c <_sbrk>
 800442c:	1c43      	adds	r3, r0, #1
 800442e:	d102      	bne.n	8004436 <_sbrk_r+0x1a>
 8004430:	682b      	ldr	r3, [r5, #0]
 8004432:	b103      	cbz	r3, 8004436 <_sbrk_r+0x1a>
 8004434:	6023      	str	r3, [r4, #0]
 8004436:	bd38      	pop	{r3, r4, r5, pc}
 8004438:	200003f8 	.word	0x200003f8

0800443c <abort>:
 800443c:	b508      	push	{r3, lr}
 800443e:	2006      	movs	r0, #6
 8004440:	f000 f860 	bl	8004504 <raise>
 8004444:	2001      	movs	r0, #1
 8004446:	f000 f881 	bl	800454c <_exit>

0800444a <_calloc_r>:
 800444a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800444c:	fba1 2402 	umull	r2, r4, r1, r2
 8004450:	b94c      	cbnz	r4, 8004466 <_calloc_r+0x1c>
 8004452:	4611      	mov	r1, r2
 8004454:	9201      	str	r2, [sp, #4]
 8004456:	f7ff f951 	bl	80036fc <_malloc_r>
 800445a:	9a01      	ldr	r2, [sp, #4]
 800445c:	4605      	mov	r5, r0
 800445e:	b930      	cbnz	r0, 800446e <_calloc_r+0x24>
 8004460:	4628      	mov	r0, r5
 8004462:	b003      	add	sp, #12
 8004464:	bd30      	pop	{r4, r5, pc}
 8004466:	220c      	movs	r2, #12
 8004468:	6002      	str	r2, [r0, #0]
 800446a:	2500      	movs	r5, #0
 800446c:	e7f8      	b.n	8004460 <_calloc_r+0x16>
 800446e:	4621      	mov	r1, r4
 8004470:	f7fe f9ac 	bl	80027cc <memset>
 8004474:	e7f4      	b.n	8004460 <_calloc_r+0x16>

08004476 <__ascii_mbtowc>:
 8004476:	b082      	sub	sp, #8
 8004478:	b901      	cbnz	r1, 800447c <__ascii_mbtowc+0x6>
 800447a:	a901      	add	r1, sp, #4
 800447c:	b142      	cbz	r2, 8004490 <__ascii_mbtowc+0x1a>
 800447e:	b14b      	cbz	r3, 8004494 <__ascii_mbtowc+0x1e>
 8004480:	7813      	ldrb	r3, [r2, #0]
 8004482:	600b      	str	r3, [r1, #0]
 8004484:	7812      	ldrb	r2, [r2, #0]
 8004486:	1e10      	subs	r0, r2, #0
 8004488:	bf18      	it	ne
 800448a:	2001      	movne	r0, #1
 800448c:	b002      	add	sp, #8
 800448e:	4770      	bx	lr
 8004490:	4610      	mov	r0, r2
 8004492:	e7fb      	b.n	800448c <__ascii_mbtowc+0x16>
 8004494:	f06f 0001 	mvn.w	r0, #1
 8004498:	e7f8      	b.n	800448c <__ascii_mbtowc+0x16>

0800449a <__ascii_wctomb>:
 800449a:	b149      	cbz	r1, 80044b0 <__ascii_wctomb+0x16>
 800449c:	2aff      	cmp	r2, #255	; 0xff
 800449e:	bf85      	ittet	hi
 80044a0:	238a      	movhi	r3, #138	; 0x8a
 80044a2:	6003      	strhi	r3, [r0, #0]
 80044a4:	700a      	strbls	r2, [r1, #0]
 80044a6:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 80044aa:	bf98      	it	ls
 80044ac:	2001      	movls	r0, #1
 80044ae:	4770      	bx	lr
 80044b0:	4608      	mov	r0, r1
 80044b2:	4770      	bx	lr

080044b4 <_raise_r>:
 80044b4:	291f      	cmp	r1, #31
 80044b6:	b538      	push	{r3, r4, r5, lr}
 80044b8:	4604      	mov	r4, r0
 80044ba:	460d      	mov	r5, r1
 80044bc:	d904      	bls.n	80044c8 <_raise_r+0x14>
 80044be:	2316      	movs	r3, #22
 80044c0:	6003      	str	r3, [r0, #0]
 80044c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80044c6:	bd38      	pop	{r3, r4, r5, pc}
 80044c8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80044ca:	b112      	cbz	r2, 80044d2 <_raise_r+0x1e>
 80044cc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80044d0:	b94b      	cbnz	r3, 80044e6 <_raise_r+0x32>
 80044d2:	4620      	mov	r0, r4
 80044d4:	f000 f830 	bl	8004538 <_getpid_r>
 80044d8:	462a      	mov	r2, r5
 80044da:	4601      	mov	r1, r0
 80044dc:	4620      	mov	r0, r4
 80044de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80044e2:	f000 b817 	b.w	8004514 <_kill_r>
 80044e6:	2b01      	cmp	r3, #1
 80044e8:	d00a      	beq.n	8004500 <_raise_r+0x4c>
 80044ea:	1c59      	adds	r1, r3, #1
 80044ec:	d103      	bne.n	80044f6 <_raise_r+0x42>
 80044ee:	2316      	movs	r3, #22
 80044f0:	6003      	str	r3, [r0, #0]
 80044f2:	2001      	movs	r0, #1
 80044f4:	e7e7      	b.n	80044c6 <_raise_r+0x12>
 80044f6:	2400      	movs	r4, #0
 80044f8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80044fc:	4628      	mov	r0, r5
 80044fe:	4798      	blx	r3
 8004500:	2000      	movs	r0, #0
 8004502:	e7e0      	b.n	80044c6 <_raise_r+0x12>

08004504 <raise>:
 8004504:	4b02      	ldr	r3, [pc, #8]	; (8004510 <raise+0xc>)
 8004506:	4601      	mov	r1, r0
 8004508:	6818      	ldr	r0, [r3, #0]
 800450a:	f7ff bfd3 	b.w	80044b4 <_raise_r>
 800450e:	bf00      	nop
 8004510:	2000006c 	.word	0x2000006c

08004514 <_kill_r>:
 8004514:	b538      	push	{r3, r4, r5, lr}
 8004516:	4d07      	ldr	r5, [pc, #28]	; (8004534 <_kill_r+0x20>)
 8004518:	2300      	movs	r3, #0
 800451a:	4604      	mov	r4, r0
 800451c:	4608      	mov	r0, r1
 800451e:	4611      	mov	r1, r2
 8004520:	602b      	str	r3, [r5, #0]
 8004522:	f000 f80b 	bl	800453c <_kill>
 8004526:	1c43      	adds	r3, r0, #1
 8004528:	d102      	bne.n	8004530 <_kill_r+0x1c>
 800452a:	682b      	ldr	r3, [r5, #0]
 800452c:	b103      	cbz	r3, 8004530 <_kill_r+0x1c>
 800452e:	6023      	str	r3, [r4, #0]
 8004530:	bd38      	pop	{r3, r4, r5, pc}
 8004532:	bf00      	nop
 8004534:	200003f8 	.word	0x200003f8

08004538 <_getpid_r>:
 8004538:	f7fd b946 	b.w	80017c8 <_getpid>

0800453c <_kill>:
 800453c:	4b02      	ldr	r3, [pc, #8]	; (8004548 <_kill+0xc>)
 800453e:	2258      	movs	r2, #88	; 0x58
 8004540:	601a      	str	r2, [r3, #0]
 8004542:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004546:	4770      	bx	lr
 8004548:	200003f8 	.word	0x200003f8

0800454c <_exit>:
 800454c:	e7fe      	b.n	800454c <_exit>
	...

08004550 <_init>:
 8004550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004552:	bf00      	nop
 8004554:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004556:	bc08      	pop	{r3}
 8004558:	469e      	mov	lr, r3
 800455a:	4770      	bx	lr

0800455c <_fini>:
 800455c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800455e:	bf00      	nop
 8004560:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004562:	bc08      	pop	{r3}
 8004564:	469e      	mov	lr, r3
 8004566:	4770      	bx	lr
